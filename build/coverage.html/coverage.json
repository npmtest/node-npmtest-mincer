{"/home/travis/build/npmtest/node-npmtest-mincer/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_mincer */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-mincer/lib.npmtest_mincer.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/lib.npmtest_mincer.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_mincer */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_mincer = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_mincer = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-mincer/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":50}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":64},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-mincer && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_mincer */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_mincer","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_mincer.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_mincer.rollup.js'] =","            local.assetsDict['/assets.npmtest_mincer.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_mincer.__dirname + '/lib.npmtest_mincer.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}}},"branchMap":{},"code":["'use strict';","","","module.exports = require('./lib/mincer');",""],"l":{"4":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":2,"42":1,"43":1,"44":1,"45":1,"46":1,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":0,"79":0,"80":1,"81":1,"82":0,"83":0},"b":{"1":[1,0],"2":[1,0],"3":[1,0],"4":[0,0]},"f":{"1":2,"2":1,"3":1,"4":2,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":229,"loc":{"start":{"line":229,"column":47},"end":{"line":229,"column":59}}},"2":{"name":"(anonymous_2)","line":230,"loc":{"start":{"line":230,"column":47},"end":{"line":230,"column":59}}},"3":{"name":"(anonymous_3)","line":231,"loc":{"start":{"line":231,"column":47},"end":{"line":231,"column":59}}},"4":{"name":"(anonymous_4)","line":232,"loc":{"start":{"line":232,"column":47},"end":{"line":232,"column":59}}},"5":{"name":"(anonymous_5)","line":302,"loc":{"start":{"line":302,"column":10},"end":{"line":302,"column":26}}},"6":{"name":"(anonymous_6)","line":305,"loc":{"start":{"line":305,"column":11},"end":{"line":305,"column":27}}},"7":{"name":"(anonymous_7)","line":317,"loc":{"start":{"line":317,"column":12},"end":{"line":317,"column":28}}},"8":{"name":"(anonymous_8)","line":318,"loc":{"start":{"line":318,"column":12},"end":{"line":318,"column":28}}}},"statementMap":{"1":{"start":{"line":30,"column":0},"end":{"line":30,"column":26}},"2":{"start":{"line":31,"column":0},"end":{"line":31,"column":28}},"3":{"start":{"line":33,"column":0},"end":{"line":33,"column":41}},"4":{"start":{"line":34,"column":0},"end":{"line":34,"column":49}},"5":{"start":{"line":36,"column":0},"end":{"line":36,"column":67}},"6":{"start":{"line":40,"column":0},"end":{"line":40,"column":32}},"7":{"start":{"line":41,"column":0},"end":{"line":41,"column":30}},"8":{"start":{"line":45,"column":0},"end":{"line":45,"column":45}},"9":{"start":{"line":46,"column":0},"end":{"line":46,"column":44}},"10":{"start":{"line":47,"column":0},"end":{"line":47,"column":44}},"11":{"start":{"line":50,"column":0},"end":{"line":50,"column":33}},"12":{"start":{"line":59,"column":0},"end":{"line":59,"column":67}},"13":{"start":{"line":65,"column":0},"end":{"line":65,"column":74}},"14":{"start":{"line":71,"column":0},"end":{"line":71,"column":68}},"15":{"start":{"line":76,"column":0},"end":{"line":76,"column":66}},"16":{"start":{"line":81,"column":0},"end":{"line":81,"column":67}},"17":{"start":{"line":87,"column":0},"end":{"line":87,"column":68}},"18":{"start":{"line":93,"column":0},"end":{"line":93,"column":70}},"19":{"start":{"line":99,"column":0},"end":{"line":99,"column":68}},"20":{"start":{"line":105,"column":0},"end":{"line":105,"column":70}},"21":{"start":{"line":114,"column":0},"end":{"line":114,"column":79}},"22":{"start":{"line":120,"column":0},"end":{"line":120,"column":78}},"23":{"start":{"line":126,"column":0},"end":{"line":126,"column":73}},"24":{"start":{"line":132,"column":0},"end":{"line":132,"column":72}},"25":{"start":{"line":138,"column":0},"end":{"line":138,"column":71}},"26":{"start":{"line":148,"column":0},"end":{"line":148,"column":76}},"27":{"start":{"line":154,"column":0},"end":{"line":154,"column":81}},"28":{"start":{"line":160,"column":0},"end":{"line":160,"column":78}},"29":{"start":{"line":169,"column":0},"end":{"line":169,"column":60}},"30":{"start":{"line":175,"column":0},"end":{"line":175,"column":57}},"31":{"start":{"line":181,"column":0},"end":{"line":181,"column":57}},"32":{"start":{"line":187,"column":0},"end":{"line":187,"column":55}},"33":{"start":{"line":193,"column":0},"end":{"line":193,"column":59}},"34":{"start":{"line":202,"column":0},"end":{"line":202,"column":55}},"35":{"start":{"line":211,"column":0},"end":{"line":211,"column":53}},"36":{"start":{"line":217,"column":0},"end":{"line":217,"column":52}},"37":{"start":{"line":226,"column":0},"end":{"line":226,"column":59}},"38":{"start":{"line":227,"column":0},"end":{"line":227,"column":42}},"39":{"start":{"line":228,"column":0},"end":{"line":228,"column":52}},"40":{"start":{"line":229,"column":0},"end":{"line":229,"column":76}},"41":{"start":{"line":229,"column":61},"end":{"line":229,"column":71}},"42":{"start":{"line":230,"column":0},"end":{"line":230,"column":76}},"43":{"start":{"line":230,"column":61},"end":{"line":230,"column":71}},"44":{"start":{"line":231,"column":0},"end":{"line":231,"column":76}},"45":{"start":{"line":231,"column":61},"end":{"line":231,"column":71}},"46":{"start":{"line":232,"column":0},"end":{"line":232,"column":76}},"47":{"start":{"line":232,"column":61},"end":{"line":232,"column":71}},"48":{"start":{"line":233,"column":0},"end":{"line":233,"column":42}},"49":{"start":{"line":237,"column":0},"end":{"line":237,"column":51}},"50":{"start":{"line":238,"column":0},"end":{"line":238,"column":48}},"51":{"start":{"line":239,"column":0},"end":{"line":239,"column":54}},"52":{"start":{"line":240,"column":0},"end":{"line":240,"column":55}},"53":{"start":{"line":241,"column":0},"end":{"line":241,"column":55}},"54":{"start":{"line":242,"column":0},"end":{"line":242,"column":49}},"55":{"start":{"line":246,"column":0},"end":{"line":246,"column":58}},"56":{"start":{"line":247,"column":0},"end":{"line":247,"column":57}},"57":{"start":{"line":251,"column":0},"end":{"line":251,"column":83}},"58":{"start":{"line":252,"column":0},"end":{"line":252,"column":83}},"59":{"start":{"line":254,"column":0},"end":{"line":254,"column":79}},"60":{"start":{"line":255,"column":0},"end":{"line":255,"column":79}},"61":{"start":{"line":259,"column":0},"end":{"line":259,"column":77}},"62":{"start":{"line":263,"column":0},"end":{"line":263,"column":82}},"63":{"start":{"line":267,"column":0},"end":{"line":267,"column":89}},"64":{"start":{"line":271,"column":0},"end":{"line":271,"column":87}},"65":{"start":{"line":272,"column":0},"end":{"line":272,"column":91}},"66":{"start":{"line":276,"column":0},"end":{"line":276,"column":57}},"67":{"start":{"line":277,"column":0},"end":{"line":277,"column":57}},"68":{"start":{"line":281,"column":0},"end":{"line":281,"column":55}},"69":{"start":{"line":282,"column":0},"end":{"line":282,"column":57}},"70":{"start":{"line":283,"column":0},"end":{"line":283,"column":55}},"71":{"start":{"line":284,"column":0},"end":{"line":284,"column":55}},"72":{"start":{"line":288,"column":0},"end":{"line":288,"column":54}},"73":{"start":{"line":292,"column":0},"end":{"line":292,"column":54}},"74":{"start":{"line":293,"column":0},"end":{"line":293,"column":61}},"75":{"start":{"line":294,"column":0},"end":{"line":294,"column":55}},"76":{"start":{"line":295,"column":0},"end":{"line":295,"column":54}},"77":{"start":{"line":301,"column":0},"end":{"line":308,"column":3}},"78":{"start":{"line":303,"column":4},"end":{"line":303,"column":64}},"79":{"start":{"line":306,"column":4},"end":{"line":306,"column":66}},"80":{"start":{"line":311,"column":0},"end":{"line":311,"column":67}},"81":{"start":{"line":315,"column":0},"end":{"line":319,"column":3}},"82":{"start":{"line":317,"column":30},"end":{"line":317,"column":57}},"83":{"start":{"line":318,"column":30},"end":{"line":318,"column":58}}},"branchMap":{"1":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":16},"end":{"line":33,"column":25}},{"start":{"line":33,"column":29},"end":{"line":33,"column":40}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":16},"end":{"line":34,"column":29}},{"start":{"line":34,"column":33},"end":{"line":34,"column":48}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":11},"end":{"line":36,"column":19}},{"start":{"line":36,"column":24},"end":{"line":36,"column":65}}]},"4":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":55},"end":{"line":36,"column":58}},{"start":{"line":36,"column":61},"end":{"line":36,"column":65}}]}},"code":["/**"," *  Mincer"," *"," *  This is a main entry point of the module (an object that you get by calling"," *  `require('mincer')`. You can get access to some of the internal classes"," *  using this object."," *"," *      var env = new (require('mincer').Environment)(__dirname);"," *"," *  `Mincer` depends on some 3rd-party modules. Most valueble (for understanding"," *  an API) are:"," *"," *  - [Hike](http://nodeca.github.com/hike-js/)"," *  - [Mimoza](http://nodeca.github.com/mimoza/)"," *"," *"," *  ##### EXTENDED BY"," *"," *  - [[Engines]]"," *  - [[Mime]]"," *  - [[Processing]]"," *  - [[Paths]]"," **/","","","'use strict';","","","// Node < 0.8 shims","var fs    = require('fs');","var path  = require('path');","","fs.exists     = fs.exists || path.exists;","fs.existsSync = fs.existsSync || path.existsSync;","","path.sep = path.sep || (path.resolve('.')[0] === '/' ? '/' : '\\\\');","","","// 3rd-party","var Mimoza  = require('mimoza');","var Hike    = require('hike');","","","// internal","var mixin = require('./mincer/common').mixin;","var prop  = require('./mincer/common').prop;","var Hash  = require('./mincer/common/hash');","","","var Mincer = module.exports = {};","","","// Engines /////////////////////////////////////////////////////////////////////","","","/**"," *  Mincer.EjsEngine -> EjsEngine"," **/","Mincer.EjsEngine          = require('./mincer/engines/ejs_engine');","","","/**"," *  Mincer.HandlebarsEngine -> HandlebarsEngine"," **/","Mincer.HandlebarsEngine   = require('./mincer/engines/handlebars_engine');","","","/**"," *  Mincer.JadeEngine -> JadeEngine"," **/","Mincer.JadeEngine         = require('./mincer/engines/jade_engine');","","/**"," *  Mincer.PugEngine -> PugEngine"," **/","Mincer.PugEngine         = require('./mincer/engines/pug_engine');","","/**"," *  Mincer.JstEngine -> JstEngine"," **/","Mincer.JstEngine          = require('./mincer/engines/jst_engine');","","","/**"," *  Mincer.LessEngine -> LessEngine"," **/","Mincer.LessEngine         = require('./mincer/engines/less_engine');","","","/**"," *  Mincer.StylusEngine -> StylusEngine"," **/","Mincer.StylusEngine       = require('./mincer/engines/stylus_engine');","","","/**"," *  Mincer.SassEngine -> SassEngine"," **/","Mincer.SassEngine         = require('./mincer/engines/sass_engine');","","","/**"," *  Mincer.CoffeeEngine -> CoffeeEngine"," **/","Mincer.CoffeeEngine       = require('./mincer/engines/coffee_engine');","","","// Processors //////////////////////////////////////////////////////////////////","","","/**"," *  Mincer.DirectiveProcessor -> DirectiveProcessor"," **/","Mincer.DirectiveProcessor = require('./mincer/processors/directive_processor');","","","/**"," *  Mincer.CharsetNormalizer -> CharsetNormalizer"," **/","Mincer.CharsetNormalizer  = require('./mincer/processors/charset_normalizer');","","","/**"," *  Mincer.SafetyColons -> SafetyColons"," **/","Mincer.SafetyColons       = require('./mincer/processors/safety_colons');","","","/**"," *  Mincer.Autoprefixer -> Autoprefixer"," **/","Mincer.Autoprefixer       = require('./mincer/processors/autoprefixer');","","","/**"," *  Mincer.MacroProcessor -> MacroProcessor"," **/","Mincer.MacroProcessor = require('./mincer/processors/macro_processor');","","","","// Compressors /////////////////////////////////////////////////////////////////","","","/**"," *  Mincer.CssoCompressor -> CssoCompressor"," **/","Mincer.CssoCompressor     = require('./mincer/compressors/csso_compressor');","","","/**"," *  Mincer.CsswringCompressor -> CsswringCompressor"," **/","Mincer.CsswringCompressor  = require('./mincer/compressors/csswring_compressor');","","","/**"," *  Mincer.UglifyCompressor -> UglifyCompressor"," **/","Mincer.UglifyCompressor   = require('./mincer/compressors/uglify_compressor');","","","// Main exported classes ///////////////////////////////////////////////////////","","","/**"," *  Mincer.Environment -> Environment"," **/","Mincer.Environment        = require('./mincer/environment');","","","/**"," *  Mincer.Manifest -> Manifest"," **/","Mincer.Manifest           = require('./mincer/manifest');","","","/**"," *  Mincer.Template -> Template"," **/","Mincer.Template           = require('./mincer/template');","","","/**"," *  Mincer.Server -> Server"," **/","Mincer.Server             = require('./mincer/server');","","","/**"," *  Mincer.FileStore -> FileStore"," **/","Mincer.FileStore          = require('./mincer/file_store');","","","// Main exported functions /////////////////////////////////////////////////////","","","/** alias of: Server.createServer"," *  Mincer.createServer(environment[, manifest]) -> Function"," **/","Mincer.createServer       = Mincer.Server.createServer;","","","// Main exported properties ////////////////////////////////////////////////////","","","/** read-only"," *  Mincer.VERSION -> String"," **/","prop(Mincer, 'VERSION', require('./mincer/version'));","","","/** read-only"," *  Mincer.logger -> Logger"," **/","prop(Mincer, 'logger',  require('./mincer/logger'));","","","// Spicy Sauce :)) /////////////////////////////////////////////////////////////","","","// main internal properties.","// each new environment clone these properties for initial states,","// so they can be used to set 'defaults' for all environment instances.","prop(Mincer, '__trail__',             new Hike(__dirname));","prop(Mincer, '__engines__',           {});","prop(Mincer, '__mimeTypes__',         new Mimoza());","prop(Mincer, '__preProcessors__',     new Hash(function () { return []; }));","prop(Mincer, '__postProcessors__',    new Hash(function () { return []; }));","prop(Mincer, '__bundleProcessors__',  new Hash(function () { return []; }));","prop(Mincer, '__compressors__',       new Hash(function () { return {}; }));","prop(Mincer, '__configurations__',    {});","","","// mixin helpers","mixin(Mincer, require('./mincer/helpers/engines'));","mixin(Mincer, require('./mincer/helpers/mime'));","mixin(Mincer, require('./mincer/helpers/processing'));","mixin(Mincer, require('./mincer/helpers/compressing'));","mixin(Mincer, require('./mincer/helpers/configuring'));","mixin(Mincer, require('./mincer/helpers/paths'));","","","// register basic mimetypes","Mincer.registerMimeType('text/css',               '.css');","Mincer.registerMimeType('application/javascript', '.js');","","","// register default pre-processors","Mincer.registerPreProcessor('text/css',                 Mincer.DirectiveProcessor);","Mincer.registerPreProcessor('application/javascript',   Mincer.DirectiveProcessor);","","Mincer.registerPreProcessor('text/css',                 Mincer.MacroProcessor);","Mincer.registerPreProcessor('application/javascript',   Mincer.MacroProcessor);","","","// register default post-processors","Mincer.registerPostProcessor('application/javascript',  Mincer.SafetyColons);","","","// register default bundle-processors","Mincer.registerBundleProcessor('text/css',              Mincer.CharsetNormalizer);","","","// register predefined js compressors","Mincer.registerCompressor('application/javascript', 'uglify',   Mincer.UglifyCompressor);","","","// register predefined css compressors","Mincer.registerCompressor('text/css',               'csso',     Mincer.CssoCompressor);","Mincer.registerCompressor('text/css',               'csswring', Mincer.CsswringCompressor);","","","// Register JS engines","Mincer.registerEngine('.coffee',    Mincer.CoffeeEngine);","Mincer.registerEngine('.litcoffee', Mincer.CoffeeEngine);","","","// Register CSS engines","Mincer.registerEngine('.less',      Mincer.LessEngine);","Mincer.registerEngine('.styl',      Mincer.StylusEngine);","Mincer.registerEngine('.sass',      Mincer.SassEngine);","Mincer.registerEngine('.scss',      Mincer.SassEngine);","","","// JST engines","Mincer.registerEngine('.jst',       Mincer.JstEngine);","","","// Mixed type (JST / processor) engines","Mincer.registerEngine('.ejs',       Mincer.EjsEngine);","Mincer.registerEngine('.hbs',       Mincer.HandlebarsEngine);","Mincer.registerEngine('.jade',      Mincer.JadeEngine);","Mincer.registerEngine('.pug',       Mincer.PugEngine);","","","// Configurations //////////////////////////////////////////////////////////////","","","Mincer.registerConfiguration('autoprefixer', {","  enable: function (self) {","    self.registerPostProcessor('text/css', Mincer.Autoprefixer);","  },","  disable: function (self) {","    self.unregisterPostProcessor('text/css', Mincer.Autoprefixer);","  }","});","","","Mincer.registerConfiguration('source_maps', { state: 'disabled' });","","","// Alias for `source_maps`","Mincer.registerConfiguration('source_map', {","  state:    'disabled',","  enable:   function (self) { self.enable('source_maps'); },","  disable:  function (self) { self.disable('source_maps'); }","});",""],"l":{"30":1,"31":1,"33":1,"34":1,"36":1,"40":1,"41":1,"45":1,"46":1,"47":1,"50":1,"59":1,"65":1,"71":1,"76":1,"81":1,"87":1,"93":1,"99":1,"105":1,"114":1,"120":1,"126":1,"132":1,"138":1,"148":1,"154":1,"160":1,"169":1,"175":1,"181":1,"187":1,"193":1,"202":1,"211":1,"217":1,"226":1,"227":1,"228":1,"229":2,"230":1,"231":1,"232":2,"233":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"246":1,"247":1,"251":1,"252":1,"254":1,"255":1,"259":1,"263":1,"267":1,"271":1,"272":1,"276":1,"277":1,"281":1,"282":1,"283":1,"284":1,"288":1,"292":1,"293":1,"294":1,"295":1,"301":1,"303":0,"306":0,"311":1,"315":1,"317":0,"318":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/common.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/common.js","s":{"1":1,"2":1,"3":1,"4":44,"5":1,"6":46,"7":46,"8":1,"9":13,"10":67,"11":67,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,0],"2":[1,0]},"f":{"1":44,"2":46,"3":13,"4":67,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":24},"end":{"line":16,"column":50}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":22},"end":{"line":22,"column":59}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":23},"end":{"line":29,"column":52}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":47},"end":{"line":30,"column":63}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":28},"end":{"line":38,"column":48}}},"6":{"name":"(anonymous_6)","line":50,"loc":{"start":{"line":50,"column":28},"end":{"line":50,"column":48}}},"7":{"name":"(anonymous_7)","line":56,"loc":{"start":{"line":56,"column":23},"end":{"line":56,"column":35}}},"8":{"name":"(anonymous_8)","line":59,"loc":{"start":{"line":59,"column":10},"end":{"line":59,"column":22}}},"9":{"name":"(anonymous_9)","line":68,"loc":{"start":{"line":68,"column":25},"end":{"line":68,"column":37}}},"10":{"name":"(anonymous_10)","line":71,"loc":{"start":{"line":71,"column":12},"end":{"line":71,"column":24}}},"11":{"name":"noop","line":81,"loc":{"start":{"line":81,"column":22},"end":{"line":81,"column":38}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"3":{"start":{"line":16,"column":0},"end":{"line":18,"column":2}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":49}},"5":{"start":{"line":22,"column":0},"end":{"line":25,"column":2}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":59}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":47}},"8":{"start":{"line":29,"column":0},"end":{"line":34,"column":2}},"9":{"start":{"line":30,"column":2},"end":{"line":33,"column":5}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":69}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":53}},"12":{"start":{"line":38,"column":0},"end":{"line":46,"column":2}},"13":{"start":{"line":39,"column":2},"end":{"line":42,"column":3}},"14":{"start":{"line":41,"column":4},"end":{"line":41,"column":31}},"15":{"start":{"line":45,"column":2},"end":{"line":45,"column":36}},"16":{"start":{"line":50,"column":0},"end":{"line":52,"column":2}},"17":{"start":{"line":51,"column":2},"end":{"line":51,"column":46}},"18":{"start":{"line":56,"column":0},"end":{"line":63,"column":2}},"19":{"start":{"line":57,"column":2},"end":{"line":62,"column":4}},"20":{"start":{"line":60,"column":6},"end":{"line":60,"column":37}},"21":{"start":{"line":67,"column":0},"end":{"line":77,"column":1}},"22":{"start":{"line":68,"column":2},"end":{"line":76,"column":4}},"23":{"start":{"line":69,"column":4},"end":{"line":75,"column":6}},"24":{"start":{"line":72,"column":8},"end":{"line":72,"column":47}},"25":{"start":{"line":73,"column":8},"end":{"line":73,"column":74}},"26":{"start":{"line":81,"column":0},"end":{"line":81,"column":41}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"2":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":0},"end":{"line":67,"column":0}},{"start":{"line":67,"column":0},"end":{"line":67,"column":0}}]}},"code":["'use strict';","","","// stdlib","var path = require('path');","","","// 3rd-party","var _ = require('lodash');","","","////////////////////////////////////////////////////////////////////////////////","","","// shorthand for defining getter properties","module.exports.getter = function (obj, name, get) {","  Object.defineProperty(obj, name, { get: get });","};","","","// shorthand for defining data descriptors","module.exports.prop = function (obj, name, value, options) {","  var descriptor = _.assign({}, options, { value: value });","  Object.defineProperty(obj, name, descriptor);","};","","","// _.assign implementation that copies descriptors as is","module.exports.mixin = function (baseObj, superObj) {","  Object.getOwnPropertyNames(superObj).forEach(function (prop) {","    var descriptor = Object.getOwnPropertyDescriptor(superObj, prop);","    Object.defineProperty(baseObj, prop, descriptor);","  });","};","","","// Dummy alternative to Ruby's Pathname#is_absolute","module.exports.isAbsolute = function (pathname) {","  if (path.sep === '/') {","    // unix","    return pathname[0] === '/';","  }","","  // win","  return pathname.indexOf(':') >= 0;","};","","","// Inverse of isAbsolute.","module.exports.isRelative = function (pathname) {","  return !module.exports.isAbsolute(pathname);","};","","","// Dummy timer helper","module.exports.timer = function () {","  return {","    start: Date.now(),","    stop: function () {","      return Date.now() - this.start;","    }","  };","};","","","// use High Resolution timers for Node >= 0.7.6","if (process.hrtime) {","  module.exports.timer = function () {","    return {","      start: process.hrtime(),","      stop: function () {","        var tuple = process.hrtime(this.start);","        return parseInt(tuple.shift() * 1000 + tuple.pop() / 1000000, 10);","      }","    };","  };","}","","","// cached empty function","module.exports.noop = function noop() {};",""],"l":{"5":1,"9":1,"16":1,"17":44,"22":1,"23":46,"24":46,"29":1,"30":13,"31":67,"32":67,"38":1,"39":0,"41":0,"45":0,"50":1,"51":0,"56":1,"57":0,"60":0,"67":1,"68":1,"69":0,"72":0,"73":0,"81":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/common/hash.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/common/hash.js","s":{"1":1,"2":1,"3":12,"4":12,"5":1,"6":9,"7":6,"8":9,"9":1,"10":12,"11":1,"12":8,"13":8,"14":12,"15":8,"16":1},"b":{"1":[6,3],"2":[12,0]},"f":{"1":12,"2":9,"3":12,"4":8,"5":12},"fnMap":{"1":{"name":"Hash","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":25}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":21},"end":{"line":39,"column":36}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":21},"end":{"line":61,"column":41}}},"4":{"name":"(anonymous_4)","line":81,"loc":{"start":{"line":81,"column":23},"end":{"line":81,"column":35}}},"5":{"name":"(anonymous_5)","line":84,"loc":{"start":{"line":84,"column":33},"end":{"line":84,"column":48}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":26}},"2":{"start":{"line":22,"column":0},"end":{"line":25,"column":1}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":23}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":30}},"5":{"start":{"line":39,"column":0},"end":{"line":45,"column":2}},"6":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"7":{"start":{"line":41,"column":4},"end":{"line":41,"column":41}},"8":{"start":{"line":44,"column":2},"end":{"line":44,"column":24}},"9":{"start":{"line":61,"column":0},"end":{"line":63,"column":2}},"10":{"start":{"line":62,"column":2},"end":{"line":62,"column":46}},"11":{"start":{"line":81,"column":0},"end":{"line":89,"column":2}},"12":{"start":{"line":82,"column":2},"end":{"line":82,"column":39}},"13":{"start":{"line":84,"column":2},"end":{"line":86,"column":11}},"14":{"start":{"line":85,"column":4},"end":{"line":85,"column":44}},"15":{"start":{"line":88,"column":2},"end":{"line":88,"column":15}},"16":{"start":{"line":92,"column":0},"end":{"line":92,"column":22}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"2":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":19},"end":{"line":62,"column":22}},{"start":{"line":62,"column":26},"end":{"line":62,"column":45}}]}},"code":["/** internal"," *  class Hash"," *"," *  Thin wraper over Object used internally to keep lists of processors."," **/","","","'use strict';","","","// 3rd-party","var _ = require('lodash');","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  new Hash(defaulter)"," *  - defaulter (Function): default value generator"," **/","function Hash(defaulter) {","  this.data       = {};","  this.defaulter  = defaulter;","}","","","/**"," *  Hash#get(key) -> Mixed"," *  - key (String):"," *"," *  Returns value associated with given key:"," *"," *     processors.get('text/css').push(DirectiveProcessor);"," *"," *  Associates key with value generated by `defaulter` if it does not exists"," *  yet."," **/","Hash.prototype.get = function (key) {","  if (!this.data[key]) {","    this.data[key] = this.defaulter(key);","  }","","  return this.data[key];","};","","","/**"," *  Hash#set(key, val) -> Void"," *  - key (String):"," *  - val (Mixed):"," *"," *  Set value for a key:"," *"," *     old_val = processors.get('text/css');"," *     new_val = _.without(old_val, MyMegaProcessor);"," *     processors.set('text/css', new_val);"," *"," *  Used to reset value of a key."," **/","Hash.prototype.set = function (key, val) {","  this.data[key] = val || this.defaulter(key);","};","","","/**"," *  Hash#clone() -> Hash"," *"," *  Makes a copy of a Hash."," *"," *     processors.get('text/css').length;  // => 1"," *"," *     processors_copy = processors.clone();"," *     processors_copy.get('text/css').push(MyMegaProcessor);"," *"," *     processors.get('text/css').length;      // => 1"," *     processors_copy.get('text/css').length; // => 2"," *"," *  Used upon Environment init - clone globally registered processors"," **/","Hash.prototype.clone = function () {","  var clone = new Hash(this.defaulter);","","  Object.keys(this.data).forEach(function (key) {","    clone.set(key, _.clone(this.data[key]));","  }, this);","","  return clone;","};","","","module.exports = Hash;",""],"l":{"12":1,"22":1,"23":12,"24":12,"39":1,"40":9,"41":6,"44":9,"61":1,"62":12,"81":1,"82":8,"84":8,"85":12,"88":8,"92":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/ejs_engine.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/ejs_engine.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"EjsEngine","line":34,"loc":{"start":{"line":34,"column":33},"end":{"line":34,"column":54}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":31},"end":{"line":44,"column":58}}}},"statementMap":{"1":{"start":{"line":23,"column":0},"end":{"line":23,"column":8}},"2":{"start":{"line":27,"column":0},"end":{"line":27,"column":38}},"3":{"start":{"line":34,"column":0},"end":{"line":37,"column":2}},"4":{"start":{"line":35,"column":2},"end":{"line":35,"column":34}},"5":{"start":{"line":36,"column":2},"end":{"line":36,"column":51}},"6":{"start":{"line":40,"column":0},"end":{"line":40,"column":46}},"7":{"start":{"line":44,"column":0},"end":{"line":65,"column":2}},"8":{"start":{"line":45,"column":2},"end":{"line":51,"column":3}},"9":{"start":{"line":46,"column":4},"end":{"line":49,"column":18}},"10":{"start":{"line":50,"column":4},"end":{"line":50,"column":11}},"11":{"start":{"line":53,"column":2},"end":{"line":64,"column":3}},"12":{"start":{"line":54,"column":4},"end":{"line":57,"column":7}},"13":{"start":{"line":59,"column":4},"end":{"line":63,"column":7}}},"branchMap":{"1":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":11}},{"start":{"line":36,"column":15},"end":{"line":36,"column":32}},{"start":{"line":36,"column":36},"end":{"line":36,"column":50}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"3":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":24}},{"start":{"line":45,"column":28},"end":{"line":45,"column":67}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]}},"code":["/**"," *  class EjsEngine"," *"," *  Engine for the EJS compiler. You will need `ejs` Node module installed"," *  in order to use [[Mincer]] with `*.ejs` files:"," *"," *      npm install ejs"," *"," *  This is a mixed-type engine that can be used as a 'backend' of [[JstEngine]]"," *  as well as standalone 'middleware' processor in a pipeline."," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// 3rd-party","var ejs; // initialized later","","","// internal","var Template = require('../template');","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var EjsEngine = module.exports = function EjsEngine() {","  Template.apply(this, arguments);","  ejs = ejs || Template.libs.ejs || require('ejs');","};","","","require('util').inherits(EjsEngine, Template);","","","// Render data","EjsEngine.prototype.evaluate = function (context, locals) {","  if (this.nextProcessor && this.nextProcessor.name === 'JstEngine') {","    this.data = ejs.compile(this.data, {","      filename: context.logicalPath,","      client:   true","    }).toString();","    return;","  }","","  if (ejs.VERSION) { // ejs 2.x.x","    this.data = ejs.render(this.data, locals, {","      filename: context.pathname,","      context:  context","    });","  } else { // ejs 1.x.x","    this.data = ejs.render(this.data, {","      filename: context.pathname,","      scope:    context,","      locals:   locals","    });","  }","};",""],"l":{"23":1,"27":1,"34":1,"35":0,"36":0,"40":1,"44":1,"45":0,"46":0,"50":0,"53":0,"54":0,"59":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/template.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/template.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"Template","line":40,"loc":{"start":{"line":40,"column":32},"end":{"line":40,"column":82}}},"2":{"name":"(anonymous_2)","line":75,"loc":{"start":{"line":75,"column":30},"end":{"line":75,"column":61}}}},"statementMap":{"1":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}},"2":{"start":{"line":40,"column":0},"end":{"line":54,"column":2}},"3":{"start":{"line":50,"column":2},"end":{"line":50,"column":47}},"4":{"start":{"line":51,"column":2},"end":{"line":51,"column":47}},"5":{"start":{"line":52,"column":2},"end":{"line":52,"column":27}},"6":{"start":{"line":53,"column":2},"end":{"line":53,"column":45}},"7":{"start":{"line":75,"column":0},"end":{"line":78,"column":2}},"8":{"start":{"line":76,"column":2},"end":{"line":77,"column":53}},"9":{"start":{"line":90,"column":0},"end":{"line":90,"column":19}}},"branchMap":{"1":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":19},"end":{"line":76,"column":40}},{"start":{"line":76,"column":44},"end":{"line":76,"column":46}}]}},"code":["/**"," *  class Template"," *"," *  Template provides a base class for engines and processors. Think of it as of"," *  Ruby's `Tilt::Template` class, that provides unified interface for template"," *  renderers."," *"," *"," *  ##### Example"," *"," *      // Create subclass"," *      function MyProcessor() { Template.apply(this, arguments); }"," *      require('util').inherits(MyProcessor, Template);"," *"," *      // Define evaluate method"," *      MyProcessor.prototype.evaluate = function (context, locals) {"," *        var data = this.data.toLowerCase();"," *        return data;"," *      };"," **/","","","'use strict';","","","// internal","var prop = require('./common').prop;","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  new Template(file[, reader])"," *  - file (String)"," *  - data (String)"," *"," *  Creates new instance of template and fills it with some base properties."," **/","var Template = module.exports = function Template(file, data, map, nextProcessor) {","  /** internal","   *  Template#data -> String","   *","   *  A source string to be compiled.","   *","   *  ##### See Also","   *","   *  - [[Template#evaluate]]","   **/","  prop(this, 'data', data, { writable: true });","  prop(this, 'map',  map,  { writable: true });","  prop(this, 'file', file);","  prop(this, 'nextProcessor', nextProcessor);","};","","","/**"," *  Template#evaluate(context, locals) -> data"," *  - context (Context)"," *  - locals (Object)"," *"," *  Real renderer function."," *"," *  You _MUST_ redefine this method in your template. By default this method is"," *  throws an Error that it's not implemented."," *"," *"," *  ##### Example"," *"," *      MyProcessor.prototype.evaluate = function (context, locals) {"," *        var data = this.data.replace(this.secret, '***TOP-SECRET***');"," *        return data;"," *      };"," **/","Template.prototype.evaluate = function (/*context, locals*/) {","  throw new Error((this.constructor.name || '') +","                  '#evaluate() is not implemented.');","};","","","/**"," *  Template.libs -> Object"," *"," *  Third-party libs."," *"," *  ##### Example"," *"," *      Mincer.Template.libs[\"ejs\"] = require(\"ejs\");"," **/","Template.libs = {};",""],"l":{"27":1,"40":1,"50":0,"51":0,"52":0,"53":0,"75":1,"76":0,"90":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/handlebars_engine.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/handlebars_engine.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"HandlebarsEngine","line":43,"loc":{"start":{"line":43,"column":40},"end":{"line":43,"column":68}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":38},"end":{"line":53,"column":65}}}},"statementMap":{"1":{"start":{"line":31,"column":0},"end":{"line":31,"column":26}},"2":{"start":{"line":32,"column":0},"end":{"line":32,"column":15}},"3":{"start":{"line":36,"column":0},"end":{"line":36,"column":38}},"4":{"start":{"line":43,"column":0},"end":{"line":46,"column":2}},"5":{"start":{"line":44,"column":2},"end":{"line":44,"column":34}},"6":{"start":{"line":45,"column":2},"end":{"line":45,"column":79}},"7":{"start":{"line":49,"column":0},"end":{"line":49,"column":53}},"8":{"start":{"line":53,"column":0},"end":{"line":63,"column":2}},"9":{"start":{"line":54,"column":2},"end":{"line":54,"column":23}},"10":{"start":{"line":56,"column":2},"end":{"line":60,"column":3}},"11":{"start":{"line":57,"column":4},"end":{"line":57,"column":56}},"12":{"start":{"line":58,"column":4},"end":{"line":58,"column":52}},"13":{"start":{"line":59,"column":4},"end":{"line":59,"column":11}},"14":{"start":{"line":62,"column":2},"end":{"line":62,"column":55}}},"branchMap":{"1":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":15},"end":{"line":45,"column":25}},{"start":{"line":45,"column":29},"end":{"line":45,"column":53}},{"start":{"line":45,"column":57},"end":{"line":45,"column":78}}]},"2":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"3":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":24}},{"start":{"line":56,"column":28},"end":{"line":56,"column":67}}]}},"code":["/**"," *  class HandlebarsEngine"," *"," *  Engine for the Handlebars template language. You will need `handlebars` Node"," *  module installed in order to use [[Mincer]] with `*.hbs` files:"," *"," *     npm install handlebars"," *"," *  This is a mixed-type engine that can be used as a 'backend' of [[JstEngine]]"," *  as well as standalone 'middleware' processor in a pipeline."," *"," *  **NOTICE** Generated functions require you to have `handlebars` client"," *  runtime to be required:"," *"," *  ``` javascript"," *  //= require handlebars.runtime"," *  //= require templates/hello"," *  ```"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// 3rd-party","var _ = require('lodash');","var Handlebars; // initialized later","","","// internal","var Template = require('../template');","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var HandlebarsEngine = module.exports = function HandlebarsEngine() {","  Template.apply(this, arguments);","  Handlebars = Handlebars || Template.libs.handlebars || require('handlebars');","};","","","require('util').inherits(HandlebarsEngine, Template);","","","// Render data","HandlebarsEngine.prototype.evaluate = function (context, locals) {","  var data = this.data;","","  if (this.nextProcessor && this.nextProcessor.name === 'JstEngine') {","    data = Handlebars.precompile(data, _.clone(locals));","    this.data = 'Handlebars.template(' + data + ')';","    return;","  }","","  this.data = Handlebars.render(data, _.clone(locals));","};",""],"l":{"31":1,"32":1,"36":1,"43":1,"44":0,"45":0,"49":1,"53":1,"54":0,"56":0,"57":0,"58":0,"59":0,"62":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/jade_engine.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/jade_engine.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"JadeEngine","line":43,"loc":{"start":{"line":43,"column":34},"end":{"line":43,"column":56}}},"2":{"name":"(anonymous_2)","line":70,"loc":{"start":{"line":70,"column":23},"end":{"line":70,"column":39}}},"3":{"name":"(anonymous_3)","line":76,"loc":{"start":{"line":76,"column":32},"end":{"line":76,"column":59}}}},"statementMap":{"1":{"start":{"line":31,"column":0},"end":{"line":31,"column":26}},"2":{"start":{"line":32,"column":0},"end":{"line":32,"column":9}},"3":{"start":{"line":36,"column":0},"end":{"line":36,"column":38}},"4":{"start":{"line":43,"column":0},"end":{"line":46,"column":2}},"5":{"start":{"line":44,"column":2},"end":{"line":44,"column":34}},"6":{"start":{"line":45,"column":2},"end":{"line":45,"column":55}},"7":{"start":{"line":49,"column":0},"end":{"line":49,"column":47}},"8":{"start":{"line":53,"column":0},"end":{"line":53,"column":17}},"9":{"start":{"line":70,"column":0},"end":{"line":72,"column":2}},"10":{"start":{"line":71,"column":2},"end":{"line":71,"column":26}},"11":{"start":{"line":76,"column":0},"end":{"line":91,"column":2}},"12":{"start":{"line":77,"column":2},"end":{"line":86,"column":3}},"13":{"start":{"line":79,"column":4},"end":{"line":79,"column":53}},"14":{"start":{"line":81,"column":4},"end":{"line":84,"column":19}},"15":{"start":{"line":85,"column":4},"end":{"line":85,"column":11}},"16":{"start":{"line":88,"column":2},"end":{"line":90,"column":6}}},"branchMap":{"1":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":9},"end":{"line":45,"column":13}},{"start":{"line":45,"column":17},"end":{"line":45,"column":35}},{"start":{"line":45,"column":39},"end":{"line":45,"column":54}}]},"2":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"3":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":24}},{"start":{"line":77,"column":28},"end":{"line":77,"column":67}}]},"4":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":18},"end":{"line":79,"column":36}},{"start":{"line":79,"column":40},"end":{"line":79,"column":52}}]}},"code":["/**"," *  class JadeEngine"," *"," *  Engine for the Jade template language. You will need `jade` Node modules"," *  installed in order to use [[Mincer]] with `*.jade` files:"," *"," *     npm install jade"," *"," *  This is a mixed-type engine that can be used as a 'backend' of [[JstEngine]]"," *  as well as standalone 'middleware' processor in a pipeline."," *"," *  **NOTICE** Generated functions require you to have `jade` client runtime to"," *  be required:"," *"," *  ``` javascript"," *  //= require jade-runtime"," *  //= require templates/hello"," *  ```"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// 3rd-party","var _ = require('lodash');","var Jade;   // initialized later","","","// internal","var Template = require('../template');","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var JadeEngine = module.exports = function JadeEngine() {","  Template.apply(this, arguments);","  Jade = Jade || Template.libs.jade || require('jade');","};","","","require('util').inherits(JadeEngine, Template);","","","// Internal (private) options storage","var options = {};","","","/**"," *  JadeEngine.configure(opts) -> Void"," *  - opts (Object):"," *"," *  Allows to set Jade compilation opts."," *  See Jade compilation opts for details."," *"," *  Default: `{}`."," *"," *"," *  ##### Example"," *"," *      JadeEngine.configure({self: true});"," **/","JadeEngine.configure = function (opts) {","  options = _.clone(opts);","};","","","// Render data","JadeEngine.prototype.evaluate = function (context, locals) {","  if (this.nextProcessor && this.nextProcessor.name === 'JstEngine') {","    // Use `compileClient` for Jade v1.0.0+, and `compile` for older versions","    var compile = Jade.compileClient || Jade.compile;","","    this.data = compile(this.data, _.assign({}, options, {","      client:   true, // needed only for Jade < v1.0.0","      filename: context.pathname","    })).toString();","    return;","  }","","  this.data = Jade.render(this.data, _.assign({}, options, locals, {","    filename: context.pathname","  }));","};",""],"l":{"31":1,"32":1,"36":1,"43":1,"44":0,"45":0,"49":1,"53":1,"70":1,"71":0,"76":1,"77":0,"79":0,"81":0,"85":0,"88":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/pug_engine.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/pug_engine.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"PugEngine","line":43,"loc":{"start":{"line":43,"column":33},"end":{"line":43,"column":54}}},"2":{"name":"(anonymous_2)","line":70,"loc":{"start":{"line":70,"column":22},"end":{"line":70,"column":38}}},"3":{"name":"(anonymous_3)","line":76,"loc":{"start":{"line":76,"column":31},"end":{"line":76,"column":58}}}},"statementMap":{"1":{"start":{"line":31,"column":0},"end":{"line":31,"column":26}},"2":{"start":{"line":32,"column":0},"end":{"line":32,"column":8}},"3":{"start":{"line":36,"column":0},"end":{"line":36,"column":38}},"4":{"start":{"line":43,"column":0},"end":{"line":46,"column":2}},"5":{"start":{"line":44,"column":2},"end":{"line":44,"column":34}},"6":{"start":{"line":45,"column":2},"end":{"line":45,"column":51}},"7":{"start":{"line":49,"column":0},"end":{"line":49,"column":46}},"8":{"start":{"line":53,"column":0},"end":{"line":53,"column":17}},"9":{"start":{"line":70,"column":0},"end":{"line":72,"column":2}},"10":{"start":{"line":71,"column":2},"end":{"line":71,"column":26}},"11":{"start":{"line":76,"column":0},"end":{"line":87,"column":2}},"12":{"start":{"line":77,"column":2},"end":{"line":82,"column":3}},"13":{"start":{"line":78,"column":4},"end":{"line":80,"column":19}},"14":{"start":{"line":81,"column":4},"end":{"line":81,"column":11}},"15":{"start":{"line":84,"column":2},"end":{"line":86,"column":6}}},"branchMap":{"1":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":11}},{"start":{"line":45,"column":15},"end":{"line":45,"column":32}},{"start":{"line":45,"column":36},"end":{"line":45,"column":50}}]},"2":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"3":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":24}},{"start":{"line":77,"column":28},"end":{"line":77,"column":67}}]}},"code":["/**"," *  class PugEngine"," *"," *  Engine for the Pug template language. You will need `pug` Node modules"," *  installed in order to use [[Mincer]] with `*.pug` files:"," *"," *     npm install pug"," *"," *  This is a mixed-type engine that can be used as a 'backend' of [[JstEngine]]"," *  as well as standalone 'middleware' processor in a pipeline."," *"," *  **NOTICE** Generated functions require you to have `pug` client runtime to"," *  be required:"," *"," *  ``` javascript"," *  //= require pug-runtime"," *  //= require templates/hello"," *  ```"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// 3rd-party","var _ = require('lodash');","var Pug;   // initialized later","","","// internal","var Template = require('../template');","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var PugEngine = module.exports = function PugEngine() {","  Template.apply(this, arguments);","  Pug = Pug || Template.libs.pug || require('pug');","};","","","require('util').inherits(PugEngine, Template);","","","// Internal (private) options storage","var options = {};","","","/**"," *  PugEngine.configure(opts) -> Void"," *  - opts (Object):"," *"," *  Allows to set Pug compilation opts."," *  See Pug compilation opts for details."," *"," *  Default: `{}`."," *"," *"," *  ##### Example"," *"," *      PugEngine.configure({self: true});"," **/","PugEngine.configure = function (opts) {","  options = _.clone(opts);","};","","","// Render data","PugEngine.prototype.evaluate = function (context, locals) {","  if (this.nextProcessor && this.nextProcessor.name === 'JstEngine') {","    this.data = Pug.compile(this.data, _.assign({}, options, {","      filename: context.pathname","    })).toString();","    return;","  }","","  this.data = Pug.render(this.data, _.assign({}, options, locals, {","    filename: context.pathname","  }));","};",""],"l":{"31":1,"32":1,"36":1,"43":1,"44":0,"45":0,"49":1,"53":1,"70":1,"71":0,"76":1,"77":0,"78":0,"81":0,"84":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/jst_engine.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/jst_engine.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1,"8":0,"9":1,"10":0,"11":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"JstEngine","line":26,"loc":{"start":{"line":26,"column":33},"end":{"line":26,"column":54}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":22},"end":{"line":51,"column":36}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":31},"end":{"line":57,"column":62}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":39}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":42}},"3":{"start":{"line":26,"column":0},"end":{"line":28,"column":2}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":34}},"5":{"start":{"line":31,"column":0},"end":{"line":31,"column":46}},"6":{"start":{"line":35,"column":0},"end":{"line":35,"column":27}},"7":{"start":{"line":51,"column":0},"end":{"line":53,"column":2}},"8":{"start":{"line":52,"column":2},"end":{"line":52,"column":25}},"9":{"start":{"line":57,"column":0},"end":{"line":63,"column":2}},"10":{"start":{"line":58,"column":2},"end":{"line":62,"column":22}},"11":{"start":{"line":67,"column":0},"end":{"line":67,"column":61}}},"branchMap":{},"code":["/**"," *  class JstEngine"," *"," *  Engine for the JST files. This is a core wrapper, that wraps function"," *  prepared by view renderers like Haml Coffee."," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// internal","var Template  = require('../template');","var prop      = require('../common').prop;","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var JstEngine = module.exports = function JstEngine() {","  Template.apply(this, arguments);","};","","","require('util').inherits(JstEngine, Template);","","","// Internal (private) namespace storage","var namespace = 'this.JST';","","","/**"," *  JstEngine.configure(ns) -> Void"," *  - ns (String):"," *"," *  Allows to set JST global scope variable name."," *"," *  Default: `'this.JST'`."," *"," *"," *  ##### Example"," *"," *      JstEngine.configure('this.tpl');"," **/","JstEngine.configure = function (ns) {","  namespace = String(ns);","};","","","// Render data","JstEngine.prototype.evaluate = function (context/*, locals*/) {","  this.data = '(function () { ' +","    namespace + ' || (' + namespace + ' = {}); ' +","    namespace + '[' + JSON.stringify(context.logicalPath) + '] = ' +","    this.data.replace(/$(.)/mg, '$1  ').trimLeft().trimRight() +","    ' }).call(this);';","};","","","// Expose default MimeType of an engine","prop(JstEngine, 'defaultMimeType', 'application/javascript');",""],"l":{"18":1,"19":1,"26":1,"27":0,"31":1,"35":1,"51":1,"52":0,"57":1,"58":0,"67":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/less_engine.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/less_engine.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"LessEngine","line":36,"loc":{"start":{"line":36,"column":34},"end":{"line":36,"column":56}}},"2":{"name":"lessError","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":38}}},"3":{"name":"(anonymous_3)","line":81,"loc":{"start":{"line":81,"column":32},"end":{"line":81,"column":59}}},"4":{"name":"(anonymous_4)","line":86,"loc":{"start":{"line":86,"column":20},"end":{"line":86,"column":52}}},"5":{"name":"func","line":87,"loc":{"start":{"line":87,"column":4},"end":{"line":87,"column":20}}},"6":{"name":"(anonymous_6)","line":113,"loc":{"start":{"line":113,"column":28},"end":{"line":113,"column":49}}},"7":{"name":"(anonymous_7)","line":119,"loc":{"start":{"line":119,"column":43},"end":{"line":119,"column":59}}},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":28},"end":{"line":133,"column":46}}},"9":{"name":"(anonymous_9)","line":138,"loc":{"start":{"line":138,"column":34},"end":{"line":138,"column":55}}},"10":{"name":"(anonymous_10)","line":171,"loc":{"start":{"line":171,"column":5},"end":{"line":171,"column":28}}},"11":{"name":"(anonymous_11)","line":177,"loc":{"start":{"line":177,"column":27},"end":{"line":177,"column":43}}},"12":{"name":"(anonymous_12)","line":187,"loc":{"start":{"line":187,"column":26},"end":{"line":187,"column":47}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}},"2":{"start":{"line":23,"column":0},"end":{"line":23,"column":26}},"3":{"start":{"line":24,"column":0},"end":{"line":24,"column":9}},"4":{"start":{"line":28,"column":0},"end":{"line":28,"column":39}},"5":{"start":{"line":29,"column":0},"end":{"line":29,"column":42}},"6":{"start":{"line":36,"column":0},"end":{"line":39,"column":2}},"7":{"start":{"line":37,"column":2},"end":{"line":37,"column":34}},"8":{"start":{"line":38,"column":2},"end":{"line":38,"column":55}},"9":{"start":{"line":42,"column":0},"end":{"line":42,"column":47}},"10":{"start":{"line":47,"column":0},"end":{"line":77,"column":1}},"11":{"start":{"line":48,"column":2},"end":{"line":48,"column":19}},"12":{"start":{"line":49,"column":2},"end":{"line":49,"column":28}},"13":{"start":{"line":50,"column":2},"end":{"line":50,"column":19}},"14":{"start":{"line":52,"column":2},"end":{"line":52,"column":64}},"15":{"start":{"line":52,"column":51},"end":{"line":52,"column":62}},"16":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"17":{"start":{"line":55,"column":4},"end":{"line":55,"column":50}},"18":{"start":{"line":58,"column":2},"end":{"line":63,"column":3}},"19":{"start":{"line":59,"column":4},"end":{"line":62,"column":49}},"20":{"start":{"line":65,"column":2},"end":{"line":67,"column":3}},"21":{"start":{"line":66,"column":4},"end":{"line":66,"column":50}},"22":{"start":{"line":69,"column":2},"end":{"line":69,"column":29}},"23":{"start":{"line":70,"column":2},"end":{"line":70,"column":47}},"24":{"start":{"line":72,"column":2},"end":{"line":74,"column":3}},"25":{"start":{"line":73,"column":4},"end":{"line":73,"column":73}},"26":{"start":{"line":76,"column":2},"end":{"line":76,"column":48}},"27":{"start":{"line":81,"column":0},"end":{"line":199,"column":2}},"28":{"start":{"line":82,"column":2},"end":{"line":84,"column":67}},"29":{"start":{"line":86,"column":2},"end":{"line":97,"column":5}},"30":{"start":{"line":87,"column":4},"end":{"line":91,"column":5}},"31":{"start":{"line":88,"column":6},"end":{"line":88,"column":61}},"32":{"start":{"line":90,"column":6},"end":{"line":90,"column":84}},"33":{"start":{"line":92,"column":4},"end":{"line":96,"column":5}},"34":{"start":{"line":93,"column":6},"end":{"line":93,"column":44}},"35":{"start":{"line":95,"column":6},"end":{"line":95,"column":59}},"36":{"start":{"line":104,"column":2},"end":{"line":156,"column":3}},"37":{"start":{"line":105,"column":4},"end":{"line":111,"column":7}},"38":{"start":{"line":113,"column":4},"end":{"line":151,"column":7}},"39":{"start":{"line":114,"column":6},"end":{"line":117,"column":7}},"40":{"start":{"line":115,"column":8},"end":{"line":115,"column":31}},"41":{"start":{"line":116,"column":8},"end":{"line":116,"column":15}},"42":{"start":{"line":119,"column":6},"end":{"line":121,"column":9}},"43":{"start":{"line":120,"column":8},"end":{"line":120,"column":31}},"44":{"start":{"line":123,"column":6},"end":{"line":150,"column":7}},"45":{"start":{"line":125,"column":8},"end":{"line":147,"column":9}},"46":{"start":{"line":126,"column":10},"end":{"line":126,"column":35}},"47":{"start":{"line":128,"column":10},"end":{"line":146,"column":13}},"48":{"start":{"line":136,"column":14},"end":{"line":136,"column":43}},"49":{"start":{"line":137,"column":14},"end":{"line":137,"column":55}},"50":{"start":{"line":138,"column":14},"end":{"line":142,"column":17}},"51":{"start":{"line":139,"column":16},"end":{"line":139,"column":51}},"52":{"start":{"line":140,"column":16},"end":{"line":140,"column":72}},"53":{"start":{"line":140,"column":41},"end":{"line":140,"column":70}},"54":{"start":{"line":141,"column":16},"end":{"line":141,"column":39}},"55":{"start":{"line":144,"column":14},"end":{"line":144,"column":45}},"56":{"start":{"line":149,"column":8},"end":{"line":149,"column":29}},"57":{"start":{"line":153,"column":4},"end":{"line":153,"column":31}},"58":{"start":{"line":153,"column":17},"end":{"line":153,"column":29}},"59":{"start":{"line":155,"column":4},"end":{"line":155,"column":11}},"60":{"start":{"line":162,"column":2},"end":{"line":195,"column":5}},"61":{"start":{"line":172,"column":4},"end":{"line":175,"column":5}},"62":{"start":{"line":173,"column":6},"end":{"line":173,"column":29}},"63":{"start":{"line":174,"column":6},"end":{"line":174,"column":13}},"64":{"start":{"line":177,"column":4},"end":{"line":179,"column":7}},"65":{"start":{"line":178,"column":6},"end":{"line":178,"column":29}},"66":{"start":{"line":181,"column":4},"end":{"line":181,"column":27}},"67":{"start":{"line":183,"column":4},"end":{"line":194,"column":5}},"68":{"start":{"line":184,"column":6},"end":{"line":184,"column":39}},"69":{"start":{"line":185,"column":6},"end":{"line":185,"column":47}},"70":{"start":{"line":187,"column":6},"end":{"line":191,"column":9}},"71":{"start":{"line":188,"column":8},"end":{"line":188,"column":43}},"72":{"start":{"line":189,"column":8},"end":{"line":189,"column":64}},"73":{"start":{"line":189,"column":33},"end":{"line":189,"column":62}},"74":{"start":{"line":190,"column":8},"end":{"line":190,"column":31}},"75":{"start":{"line":193,"column":6},"end":{"line":193,"column":37}},"76":{"start":{"line":197,"column":2},"end":{"line":197,"column":29}},"77":{"start":{"line":197,"column":15},"end":{"line":197,"column":27}},"78":{"start":{"line":203,"column":0},"end":{"line":203,"column":48}}},"branchMap":{"1":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":9},"end":{"line":38,"column":13}},{"start":{"line":38,"column":17},"end":{"line":38,"column":35}},{"start":{"line":38,"column":39},"end":{"line":38,"column":54}}]},"2":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"3":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":15}},{"start":{"line":52,"column":19},"end":{"line":52,"column":47}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"6":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"8":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"9":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"10":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":6},"end":{"line":114,"column":6}},{"start":{"line":114,"column":6},"end":{"line":114,"column":6}}]},"11":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":8}},{"start":{"line":125,"column":8},"end":{"line":125,"column":8}}]},"12":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":16},"end":{"line":140,"column":16}},{"start":{"line":140,"column":16},"end":{"line":140,"column":16}}]},"13":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"14":{"line":168,"type":"cond-expr","locations":[{"start":{"line":168,"column":32},"end":{"line":168,"column":37}},{"start":{"line":168,"column":40},"end":{"line":170,"column":5}}]},"15":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"16":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"17":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":8},"end":{"line":189,"column":8}},{"start":{"line":189,"column":8},"end":{"line":189,"column":8}}]},"18":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":2},"end":{"line":197,"column":2}},{"start":{"line":197,"column":2},"end":{"line":197,"column":2}}]}},"code":["/**"," *  class LessEngine"," *"," *  Engine for the Less compiler. You will need `less` Node module installed"," *  in order to use [[Mincer]] with `*.less` files:"," *"," *      npm install less"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// stdlib","var path = require('path');","","// 3rd-party","var _ = require('lodash');","var less; // initialized later","","","// internal","var Template  = require('../template');","var prop      = require('../common').prop;","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var LessEngine = module.exports = function LessEngine() {","  Template.apply(this, arguments);","  less = less || Template.libs.less || require('less');","};","","","require('util').inherits(LessEngine, Template);","","","// helper to generate human-friendly errors.","// adapted version from original bin/less","function lessError(ctx /*, options*/) {","  var message = '';","  var extract = ctx.extract;","  var error   = [];","","  if (ctx.stack || !ctx.hasOwnProperty('index')) { return ctx; }","","  if (typeof (extract[0]) === 'string') {","    error.push((ctx.line - 1) + ' ' + extract[0]);","  }","","  if (extract[1]) {","    error.push(ctx.line + ' ' +","               extract[1].slice(0, ctx.column) +","               extract[1][ctx.column] +","               extract[1].slice(ctx.column + 1));","  }","","  if (typeof (extract[2]) === 'string') {","    error.push((ctx.line + 1) + ' ' + extract[2]);","  }","","  error   = error.join('\\n');","  message = ctx.type + 'Error: ' + ctx.message;","","  if (ctx.filename) {","    message += ' in ' + ctx.filename + ':' + ctx.line + ':' + ctx.column;","  }","","  return new Error(message + '\\n---\\n' + error);","}","","","// Render data","LessEngine.prototype.evaluate = function (context, locals) {","  var error  = null,","      self   = this,","      withSourcemap = context.environment.isEnabled('source_maps');","","  _.forEach(locals, function (localFunc, localName) {","    function func() {","      var extractedLessArguments = _.map(arguments, 'value');","","      return new less.tree.Anonymous(localFunc.apply(null, extractedLessArguments));","    }","    if (less.version[0] < 2) {","      less.tree.functions[localName] = func;","    } else {","      less.functions.functionRegistry.add(localName, func);","    }","  });","","","  //","  // Legacy (< 2.x) API support","  //","","  if (less.version[0] < 2) {","    var parser = new (less.Parser)({","      paths:          [ path.dirname(this.file) ].concat(context.environment.paths),","      optimization:   1,","      filename:       this.file,","      syncImport:     true,","      strictImports:  false","    });","","    parser.parse(self.data, function (err, tree) {","      if (err) {","        error = lessError(err);","        return;","      }","","      _.keys(parser.imports.files).forEach(function (file) {","        context.dependOn(file);","      });","","      try {","","        if (!withSourcemap) {","          self.data = tree.toCSS();","        } else {","          self.data = tree.toCSS({","            sourceMap: true,","            outputSourceFiles: true,","            // sourceMapBasepath: context.environment.root,","            // sourceMapRootpath: '/',","            writeSourceMap: function (output) {","              // Manually convert paths to relative, because LESS","              // can make tose absolute for complex cases.","              var map = JSON.parse(output);","              var dir = path.dirname(context.pathname);","              map.sources.forEach(function (file, idx) {","                var rel = path.relative(dir, file);","                if (path.sep === '\\\\') { rel = rel.replace('\\\\', '/'); }","                map.sources[idx] = rel;","              });","","              self.map = JSON.stringify(map);","            }","          });","        }","      } catch (e) {","        error = lessError(e);","      }","    });","","    if (error) { throw error; }","","    return;","  }","","  //","  // 2.+ API","  //","","  less.render(self.data, {","    paths: [ path.dirname(this.file) ].concat(context.environment.paths),","    optimization: 1,","    filename: this.file,","    syncImport: true,","    strictImports: false,","    sourceMap: !withSourcemap ? false : {","      outputSourceFiles: true","    }","  }, function (err, output) {","    if (err) {","      error = lessError(err);","      return;","    }","","    output.imports.forEach(function (file) {","      context.dependOn(file);","    });","","    self.data = output.css;","","    if (withSourcemap) {","      var map = JSON.parse(output.map);","      var dir = path.dirname(context.pathname);","","      map.sources.forEach(function (file, idx) {","        var rel = path.relative(dir, file);","        if (path.sep === '\\\\') { rel = rel.replace('\\\\', '/'); }","        map.sources[idx] = rel;","      });","","      self.map = JSON.stringify(map);","    }","  });","","  if (error) { throw error; }","","};","","","// Expose default MimeType of an engine","prop(LessEngine, 'defaultMimeType', 'text/css');",""],"l":{"20":1,"23":1,"24":1,"28":1,"29":1,"36":1,"37":0,"38":0,"42":1,"47":1,"48":0,"49":0,"50":0,"52":0,"54":0,"55":0,"58":0,"59":0,"65":0,"66":0,"69":0,"70":0,"72":0,"73":0,"76":0,"81":1,"82":0,"86":0,"87":1,"88":0,"90":0,"92":0,"93":0,"95":0,"104":0,"105":0,"113":0,"114":0,"115":0,"116":0,"119":0,"120":0,"123":0,"125":0,"126":0,"128":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"144":0,"149":0,"153":0,"155":0,"162":0,"172":0,"173":0,"174":0,"177":0,"178":0,"181":0,"183":0,"184":0,"185":0,"187":0,"188":0,"189":0,"190":0,"193":0,"197":0,"203":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/stylus_engine.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/stylus_engine.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"StylusEngine","line":38,"loc":{"start":{"line":38,"column":36},"end":{"line":38,"column":60}}},"2":{"name":"noop","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":16}}},"3":{"name":"(anonymous_3)","line":66,"loc":{"start":{"line":66,"column":25},"end":{"line":66,"column":39}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":34},"end":{"line":72,"column":61}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":20},"end":{"line":88,"column":44}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":25},"end":{"line":91,"column":37}}},"7":{"name":"(anonymous_7)","line":99,"loc":{"start":{"line":99,"column":23},"end":{"line":99,"column":61}}},"8":{"name":"(anonymous_8)","line":103,"loc":{"start":{"line":103,"column":57},"end":{"line":103,"column":73}}},"9":{"name":"(anonymous_9)","line":118,"loc":{"start":{"line":118,"column":15},"end":{"line":118,"column":35}}},"10":{"name":"(anonymous_10)","line":125,"loc":{"start":{"line":125,"column":38},"end":{"line":125,"column":58}}},"11":{"name":"(anonymous_11)","line":146,"loc":{"start":{"line":146,"column":24},"end":{"line":146,"column":45}}},"12":{"name":"(anonymous_12)","line":155,"loc":{"start":{"line":155,"column":43},"end":{"line":155,"column":61}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}},"2":{"start":{"line":21,"column":0},"end":{"line":21,"column":25}},"3":{"start":{"line":25,"column":0},"end":{"line":25,"column":26}},"4":{"start":{"line":26,"column":0},"end":{"line":26,"column":11}},"5":{"start":{"line":30,"column":0},"end":{"line":30,"column":39}},"6":{"start":{"line":31,"column":0},"end":{"line":31,"column":42}},"7":{"start":{"line":38,"column":0},"end":{"line":41,"column":2}},"8":{"start":{"line":39,"column":2},"end":{"line":39,"column":34}},"9":{"start":{"line":40,"column":2},"end":{"line":40,"column":63}},"10":{"start":{"line":44,"column":0},"end":{"line":44,"column":49}},"11":{"start":{"line":46,"column":0},"end":{"line":46,"column":18}},"12":{"start":{"line":49,"column":0},"end":{"line":49,"column":24}},"13":{"start":{"line":66,"column":0},"end":{"line":68,"column":2}},"14":{"start":{"line":67,"column":2},"end":{"line":67,"column":20}},"15":{"start":{"line":72,"column":0},"end":{"line":168,"column":2}},"16":{"start":{"line":73,"column":2},"end":{"line":73,"column":67}},"17":{"start":{"line":75,"column":2},"end":{"line":82,"column":5}},"18":{"start":{"line":84,"column":2},"end":{"line":85,"column":20}},"19":{"start":{"line":88,"column":2},"end":{"line":113,"column":5}},"20":{"start":{"line":89,"column":4},"end":{"line":95,"column":5}},"21":{"start":{"line":91,"column":6},"end":{"line":93,"column":9}},"22":{"start":{"line":92,"column":8},"end":{"line":92,"column":22}},"23":{"start":{"line":94,"column":6},"end":{"line":94,"column":13}},"24":{"start":{"line":99,"column":4},"end":{"line":112,"column":7}},"25":{"start":{"line":101,"column":6},"end":{"line":101,"column":17}},"26":{"start":{"line":103,"column":6},"end":{"line":105,"column":20}},"27":{"start":{"line":104,"column":8},"end":{"line":104,"column":35}},"28":{"start":{"line":107,"column":6},"end":{"line":109,"column":7}},"29":{"start":{"line":108,"column":8},"end":{"line":108,"column":31}},"30":{"start":{"line":111,"column":6},"end":{"line":111,"column":71}},"31":{"start":{"line":116,"column":2},"end":{"line":116,"column":22}},"32":{"start":{"line":118,"column":2},"end":{"line":130,"column":5}},"33":{"start":{"line":119,"column":4},"end":{"line":122,"column":5}},"34":{"start":{"line":120,"column":6},"end":{"line":120,"column":18}},"35":{"start":{"line":121,"column":6},"end":{"line":121,"column":13}},"36":{"start":{"line":125,"column":4},"end":{"line":127,"column":7}},"37":{"start":{"line":126,"column":6},"end":{"line":126,"column":38}},"38":{"start":{"line":129,"column":4},"end":{"line":129,"column":17}},"39":{"start":{"line":132,"column":2},"end":{"line":134,"column":3}},"40":{"start":{"line":133,"column":4},"end":{"line":133,"column":16}},"41":{"start":{"line":136,"column":2},"end":{"line":136,"column":21}},"42":{"start":{"line":142,"column":2},"end":{"line":167,"column":3}},"43":{"start":{"line":143,"column":4},"end":{"line":143,"column":31}},"44":{"start":{"line":144,"column":4},"end":{"line":144,"column":46}},"45":{"start":{"line":146,"column":4},"end":{"line":150,"column":7}},"46":{"start":{"line":147,"column":6},"end":{"line":147,"column":41}},"47":{"start":{"line":148,"column":6},"end":{"line":148,"column":62}},"48":{"start":{"line":148,"column":31},"end":{"line":148,"column":60}},"49":{"start":{"line":149,"column":6},"end":{"line":149,"column":29}},"50":{"start":{"line":154,"column":4},"end":{"line":164,"column":5}},"51":{"start":{"line":155,"column":6},"end":{"line":163,"column":9}},"52":{"start":{"line":156,"column":8},"end":{"line":156,"column":21}},"53":{"start":{"line":158,"column":8},"end":{"line":160,"column":23}},"54":{"start":{"line":159,"column":10},"end":{"line":159,"column":65}},"55":{"start":{"line":162,"column":8},"end":{"line":162,"column":19}},"56":{"start":{"line":166,"column":4},"end":{"line":166,"column":35}},"57":{"start":{"line":172,"column":0},"end":{"line":172,"column":50}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":11},"end":{"line":40,"column":17}},{"start":{"line":40,"column":21},"end":{"line":40,"column":41}},{"start":{"line":40,"column":45},"end":{"line":40,"column":62}}]},"2":{"line":79,"type":"cond-expr","locations":[{"start":{"line":79,"column":32},"end":{"line":79,"column":37}},{"start":{"line":79,"column":40},"end":{"line":81,"column":5}}]},"3":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"4":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":16},"end":{"line":104,"column":23}},{"start":{"line":104,"column":27},"end":{"line":104,"column":29}}]},"5":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":6},"end":{"line":107,"column":6}},{"start":{"line":107,"column":6},"end":{"line":107,"column":6}}]},"6":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"7":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"8":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"9":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":19}},{"start":{"line":142,"column":23},"end":{"line":142,"column":38}}]},"10":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":6},"end":{"line":148,"column":6}},{"start":{"line":148,"column":6},"end":{"line":148,"column":6}}]},"11":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]}},"code":["/**"," *  class StylusEngine"," *"," *  Engine for the Stylus compiler. You will need `stylus` Node module installed"," *  in order to use [[Mincer]] with `*.stylus` files:"," *"," *      npm install stylus"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// stdlib","var path = require('path');","var fs   = require('fs');","","","// 3rd-party","var _ = require('lodash');","var stylus; // initialized later","","","// internal","var Template  = require('../template');","var prop      = require('../common').prop;","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var StylusEngine = module.exports = function StylusEngine() {","  Template.apply(this, arguments);","  stylus = stylus || Template.libs.stylus || require('stylus');","};","","","require('util').inherits(StylusEngine, Template);","","function noop() {}","","// Internal (private) configurator storage","var configurator = noop;","","","/**"," *  StylusEngine.configure(fn) -> Void"," *  - fn (Function)"," *"," *  Sets `function`, that will be running everytime engine will run renderer."," *"," *      var nib = require('nib');"," *"," *      Stylus.configure(function (style) {"," *        style.use(nib());"," *      });"," *"," *  Default: `function (_) { 'do nothing'; }`"," **/","StylusEngine.configure = function (fn) {","  configurator = fn;","};","","","// Render data","StylusEngine.prototype.evaluate = function (context, locals) {","  var withSourcemap = context.environment.isEnabled('source_maps');","","  var style = stylus(this.data, {","    paths:    [ path.dirname(this.file) ].concat(context.environment.paths),","    filename: this.file,","    _imports: [],","    sourcemap: !withSourcemap ? false : {","      comment: false","    }","  });","","  var error  = null,","      result = null;","","  // define helpers from the list of passed locals","  _.forEach(locals, function (helper, name) {","    if (typeof helper !== 'function') {","      // Provide object as a function helper","      style.define(name, function () {","        return helper;","      });","      return;","    }","","    // Stylus determine how much arguments to pass on helper function's length","    // So we keep amount of arguments reasonable big...","    style.define(name, function (/*a, b, c, d, e, f, g, h*/) {","      /*jshint unused:false*/","      var o = {};","","      [ 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h' ].forEach(function (k, i) {","        o[k] = (this[i] || {}).val;","      }, arguments);","","      if (!('context' in this)) {","        this.context = context;","      }","","      return helper.call(this, o.a, o.b, o.c, o.d, o.e, o.f, o.g, o.h);","    });","  });","","  // run registered configurator","  configurator(style);","","  style.render(function (err, css) {","    if (err) {","      error = err;","      return;","    }","","    // add Stylus `@import`s as dependencies of current asset","    _.forEach(style.options._imports, function (imported) {","      context.dependOn(imported.path);","    });","","    result = css;","  });","","  if (error) {","    throw error;","  }","","  this.data = result;","","  //","  // Now add sourcemap info if needed & available.","  //","","  if (withSourcemap && style.sourcemap) {","    var map  = style.sourcemap;","    var dir  = path.dirname(context.pathname);","","    map.sources.forEach(function (file, idx) {","      var rel = path.relative(dir, file);","      if (path.sep === '\\\\') { rel = rel.replace('\\\\', '/'); }","      map.sources[idx] = rel;","    });","","    // Stylus now returns sourcemap without original sources. We should glue","    // those manually. See https://github.com/stylus/stylus/issues/2036","    if (!map.sourcesContent) {","      map.sourcesContent = map.sources.map(function (source) {","        var res = '';","","        try {","          res =  fs.readFileSync(path.join(dir, source), 'utf8');","        } catch (__) {}","","        return res;","      });","    }","","    this.map = JSON.stringify(map);","  }","};","","","// Expose default MimeType of an engine","prop(StylusEngine, 'defaultMimeType', 'text/css');",""],"l":{"20":1,"21":1,"25":1,"26":1,"30":1,"31":1,"38":1,"39":0,"40":0,"44":1,"46":1,"49":1,"66":1,"67":0,"72":1,"73":0,"75":0,"84":0,"88":0,"89":0,"91":0,"92":0,"94":0,"99":0,"101":0,"103":0,"104":0,"107":0,"108":0,"111":0,"116":0,"118":0,"119":0,"120":0,"121":0,"125":0,"126":0,"129":0,"132":0,"133":0,"136":0,"142":0,"143":0,"144":0,"146":0,"147":0,"148":0,"149":0,"154":0,"155":0,"156":0,"158":0,"159":0,"162":0,"166":0,"172":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/sass_engine.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/sass_engine.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"SassEngine","line":37,"loc":{"start":{"line":37,"column":34},"end":{"line":37,"column":56}}},"2":{"name":"(anonymous_2)","line":71,"loc":{"start":{"line":71,"column":23},"end":{"line":71,"column":39}}},"3":{"name":"sassError","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":38}}},"4":{"name":"(anonymous_4)","line":85,"loc":{"start":{"line":85,"column":28},"end":{"line":85,"column":43}}},"5":{"name":"(anonymous_5)","line":97,"loc":{"start":{"line":97,"column":32},"end":{"line":97,"column":59}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":125,"column":42},"end":{"line":125,"column":66}}},"7":{"name":"(anonymous_7)","line":132,"loc":{"start":{"line":132,"column":32},"end":{"line":132,"column":50}}},"8":{"name":"importArgumentRelativeToSearchPaths","line":141,"loc":{"start":{"line":141,"column":0},"end":{"line":141,"column":84}}},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":61}}},"10":{"name":"isFileNotFound","line":152,"loc":{"start":{"line":152,"column":0},"end":{"line":152,"column":31}}},"11":{"name":"tryDepend","line":157,"loc":{"start":{"line":157,"column":0},"end":{"line":157,"column":40}}},"12":{"name":"(anonymous_12)","line":168,"loc":{"start":{"line":168,"column":36},"end":{"line":168,"column":66}}},"13":{"name":"isSassType","line":190,"loc":{"start":{"line":190,"column":0},"end":{"line":190,"column":25}}},"14":{"name":"(anonymous_14)","line":200,"loc":{"start":{"line":200,"column":37},"end":{"line":200,"column":55}}},"15":{"name":"(anonymous_15)","line":201,"loc":{"start":{"line":201,"column":29},"end":{"line":201,"column":53}}},"16":{"name":"(anonymous_16)","line":208,"loc":{"start":{"line":208,"column":13},"end":{"line":208,"column":26}}},"17":{"name":"(anonymous_17)","line":216,"loc":{"start":{"line":216,"column":24},"end":{"line":216,"column":36}}},"18":{"name":"(anonymous_18)","line":219,"loc":{"start":{"line":219,"column":11},"end":{"line":219,"column":27}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":27}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}},"3":{"start":{"line":23,"column":0},"end":{"line":23,"column":26}},"4":{"start":{"line":24,"column":0},"end":{"line":24,"column":9}},"5":{"start":{"line":28,"column":0},"end":{"line":28,"column":39}},"6":{"start":{"line":29,"column":0},"end":{"line":29,"column":42}},"7":{"start":{"line":30,"column":0},"end":{"line":30,"column":37}},"8":{"start":{"line":37,"column":0},"end":{"line":45,"column":2}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":34}},"10":{"start":{"line":39,"column":2},"end":{"line":39,"column":68}},"11":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"12":{"start":{"line":43,"column":4},"end":{"line":43,"column":58}},"13":{"start":{"line":48,"column":0},"end":{"line":48,"column":47}},"14":{"start":{"line":52,"column":0},"end":{"line":56,"column":2}},"15":{"start":{"line":71,"column":0},"end":{"line":73,"column":2}},"16":{"start":{"line":72,"column":2},"end":{"line":72,"column":40}},"17":{"start":{"line":78,"column":0},"end":{"line":93,"column":1}},"18":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"19":{"start":{"line":80,"column":4},"end":{"line":80,"column":62}},"20":{"start":{"line":82,"column":2},"end":{"line":90,"column":3}},"21":{"start":{"line":83,"column":4},"end":{"line":86,"column":6}},"22":{"start":{"line":85,"column":45},"end":{"line":85,"column":63}},"23":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"24":{"start":{"line":88,"column":6},"end":{"line":88,"column":68}},"25":{"start":{"line":92,"column":2},"end":{"line":92,"column":24}},"26":{"start":{"line":97,"column":0},"end":{"line":122,"column":2}},"27":{"start":{"line":98,"column":2},"end":{"line":98,"column":67}},"28":{"start":{"line":100,"column":2},"end":{"line":121,"column":3}},"29":{"start":{"line":101,"column":4},"end":{"line":110,"column":8}},"30":{"start":{"line":112,"column":4},"end":{"line":112,"column":45}},"31":{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},"32":{"start":{"line":115,"column":6},"end":{"line":115,"column":70}},"33":{"start":{"line":119,"column":4},"end":{"line":119,"column":31}},"34":{"start":{"line":120,"column":4},"end":{"line":120,"column":16}},"35":{"start":{"line":125,"column":0},"end":{"line":137,"column":2}},"36":{"start":{"line":126,"column":2},"end":{"line":126,"column":24}},"37":{"start":{"line":128,"column":2},"end":{"line":128,"column":38}},"38":{"start":{"line":129,"column":2},"end":{"line":129,"column":37}},"39":{"start":{"line":132,"column":2},"end":{"line":134,"column":5}},"40":{"start":{"line":133,"column":4},"end":{"line":133,"column":56}},"41":{"start":{"line":136,"column":2},"end":{"line":136,"column":29}},"42":{"start":{"line":141,"column":0},"end":{"line":149,"column":1}},"43":{"start":{"line":142,"column":2},"end":{"line":142,"column":80}},"44":{"start":{"line":143,"column":2},"end":{"line":145,"column":5}},"45":{"start":{"line":144,"column":4},"end":{"line":144,"column":50}},"46":{"start":{"line":146,"column":2},"end":{"line":148,"column":3}},"47":{"start":{"line":147,"column":4},"end":{"line":147,"column":63}},"48":{"start":{"line":152,"column":0},"end":{"line":154,"column":1}},"49":{"start":{"line":153,"column":2},"end":{"line":153,"column":48}},"50":{"start":{"line":157,"column":0},"end":{"line":165,"column":1}},"51":{"start":{"line":158,"column":2},"end":{"line":164,"column":3}},"52":{"start":{"line":159,"column":4},"end":{"line":163,"column":5}},"53":{"start":{"line":160,"column":6},"end":{"line":160,"column":35}},"54":{"start":{"line":162,"column":6},"end":{"line":162,"column":19}},"55":{"start":{"line":168,"column":0},"end":{"line":188,"column":2}},"56":{"start":{"line":169,"column":2},"end":{"line":169,"column":103}},"57":{"start":{"line":173,"column":2},"end":{"line":173,"column":113}},"58":{"start":{"line":175,"column":2},"end":{"line":175,"column":50}},"59":{"start":{"line":176,"column":2},"end":{"line":176,"column":92}},"60":{"start":{"line":180,"column":2},"end":{"line":183,"column":3}},"61":{"start":{"line":181,"column":4},"end":{"line":182,"column":48}},"62":{"start":{"line":185,"column":2},"end":{"line":187,"column":4}},"63":{"start":{"line":190,"column":0},"end":{"line":198,"column":1}},"64":{"start":{"line":191,"column":2},"end":{"line":195,"column":3}},"65":{"start":{"line":192,"column":4},"end":{"line":194,"column":5}},"66":{"start":{"line":193,"column":6},"end":{"line":193,"column":59}},"67":{"start":{"line":193,"column":45},"end":{"line":193,"column":57}},"68":{"start":{"line":197,"column":2},"end":{"line":197,"column":15}},"69":{"start":{"line":200,"column":0},"end":{"line":240,"column":2}},"70":{"start":{"line":201,"column":2},"end":{"line":239,"column":5}},"71":{"start":{"line":202,"column":4},"end":{"line":204,"column":5}},"72":{"start":{"line":203,"column":6},"end":{"line":203,"column":13}},"73":{"start":{"line":206,"column":4},"end":{"line":214,"column":12}},"74":{"start":{"line":211,"column":10},"end":{"line":211,"column":35}},"75":{"start":{"line":216,"column":4},"end":{"line":238,"column":6}},"76":{"start":{"line":218,"column":6},"end":{"line":221,"column":9}},"77":{"start":{"line":220,"column":8},"end":{"line":220,"column":31}},"78":{"start":{"line":223,"column":6},"end":{"line":223,"column":40}},"79":{"start":{"line":225,"column":6},"end":{"line":237,"column":7}},"80":{"start":{"line":227,"column":10},"end":{"line":227,"column":47}},"81":{"start":{"line":229,"column":10},"end":{"line":229,"column":47}},"82":{"start":{"line":231,"column":10},"end":{"line":231,"column":48}},"83":{"start":{"line":233,"column":10},"end":{"line":233,"column":52}},"84":{"start":{"line":233,"column":36},"end":{"line":233,"column":50}},"85":{"start":{"line":236,"column":10},"end":{"line":236,"column":58}},"86":{"start":{"line":244,"column":0},"end":{"line":244,"column":48}}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":9},"end":{"line":39,"column":13}},{"start":{"line":39,"column":17},"end":{"line":39,"column":43}},{"start":{"line":39,"column":47},"end":{"line":39,"column":67}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"3":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"4":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":14}},{"start":{"line":79,"column":18},"end":{"line":79,"column":29}}]},"5":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"6":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"7":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":18}},{"start":{"line":87,"column":22},"end":{"line":87,"column":33}},{"start":{"line":87,"column":37},"end":{"line":87,"column":50}}]},"8":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":23},"end":{"line":112,"column":33}},{"start":{"line":112,"column":37},"end":{"line":112,"column":43}}]},"9":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":114,"column":4}},{"start":{"line":114,"column":4},"end":{"line":114,"column":4}}]},"10":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"11":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":9},"end":{"line":153,"column":14}},{"start":{"line":153,"column":18},"end":{"line":153,"column":47}}]},"12":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"13":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":30},"end":{"line":173,"column":40}},{"start":{"line":173,"column":44},"end":{"line":173,"column":112}}]},"14":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":20},"end":{"line":176,"column":46}},{"start":{"line":176,"column":50},"end":{"line":176,"column":91}}]},"15":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"16":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":6},"end":{"line":180,"column":32}},{"start":{"line":180,"column":36},"end":{"line":180,"column":63}}]},"17":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":4}},{"start":{"line":192,"column":4},"end":{"line":192,"column":4}}]},"18":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":6},"end":{"line":193,"column":6}},{"start":{"line":193,"column":6},"end":{"line":193,"column":6}}]},"19":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"20":{"line":225,"type":"switch","locations":[{"start":{"line":226,"column":8},"end":{"line":227,"column":47}},{"start":{"line":228,"column":8},"end":{"line":229,"column":47}},{"start":{"line":230,"column":8},"end":{"line":231,"column":48}},{"start":{"line":232,"column":8},"end":{"line":233,"column":52}},{"start":{"line":235,"column":8},"end":{"line":236,"column":58}}]},"21":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":10},"end":{"line":233,"column":10}},{"start":{"line":233,"column":10},"end":{"line":233,"column":10}}]}},"code":["/**"," *  class SassEngine"," *"," *  Engine for the SASS/SCSS compiler. You will need `node-sass` Node module installed"," *  in order to use [[Mincer]] with `*.sass` or `*.scss` files:"," *"," *      npm install node-sass"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","// stdlib","var path = require('path');","var util = require('util');","","// 3rd-party","var _ = require('lodash');","var sass; // initialized later","","","// internal","var Template  = require('../template');","var prop      = require('../common').prop;","var logger    = require('../logger');","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var SassEngine = module.exports = function SassEngine() {","  Template.apply(this, arguments);","  sass = sass || Template.libs['node-sass'] || require('node-sass');","","  // Ensure node sass module has renderSync method","  if (!sass.renderSync) {","    throw new Error('node-sass < v0.5 is not supported.');","  }","};","","","require('util').inherits(SassEngine, Template);","","","// Internal (private) options storage","var options = {","  sourceComments: false,","  omitSourceMapUrl: true,","  sourceMapContents: true","};","","/**"," *  SassEngine.configure(opts) -> Void"," *  - opts (Object):"," *"," *  Allows to set Sass compilation opts."," *"," *  Default: `{}`."," *"," *"," *  ##### Example"," *"," *      SassEngine.configure({ sourceComments: true });"," **/","SassEngine.configure = function (opts) {","  options = _.assign({}, options, opts);","};","","","// helper to generate human-friendly errors.","// adapted version from less_engine.js","function sassError(ctx /*, options*/) {","  if (ctx.line && ctx.message) { // libsass 3.x error object","    return new Error('Line ' + ctx.line + ': ' + ctx.message);","  }","  if (typeof ctx === 'string') { // libsass error string format: path:line: error: message","    var error = _.zipObject(","      [ 'path', 'line', 'level', 'message' ],","      ctx.split(':', 4).map(function (str) { return str.trim(); })","    );","    if (error.line && error.level && error.message) {","      return new Error('Line ' + error.line + ': ' + error.message);","    }","  }","","  return new Error(ctx);","}","","","// Render data","SassEngine.prototype.evaluate = function (context, locals) {","  var withSourcemap = context.environment.isEnabled('source_maps');","","  try {","    var result = sass.renderSync(_.assign({}, options, {","      file:           this.file,","      data:           this.data,","      importer:       this.sassImporter.bind(this, context),","      functions:      this.sassFunctions(locals),","      includePaths:   [ path.dirname(this.file) ].concat(context.environment.paths),","      indentedSyntax: /^.*\\.sass$/.test(this.file),","      outFile:        path.basename(this.file).replace(/\\.(sass|scss)$/, ''),","      sourceMap:      withSourcemap","    }));","","    this.data = String(result.css || result);","","    if (withSourcemap) {","      this.map = this.normalizeSourceMap(context, String(result.map));","    }","","  } catch (err) {","    var error = sassError(err);","    throw error;","  }","};","","","SassEngine.prototype.normalizeSourceMap = function (context, map) {","  map = JSON.parse(map);","","  var root = context.environment.root;","  var base = path.dirname(this.file);","","  // Make sure all source paths are relative to the processed file!","  map.sources = map.sources.map(function (source) {","    return path.relative(base, path.join(root, source));","  });","","  return JSON.stringify(map);","};","","","// Returns the argument of the @import() call relative to the asset search paths.","function importArgumentRelativeToSearchPaths(importer, importArgument, searchPaths) {","  var importAbsolutePath = path.resolve(path.dirname(importer), importArgument);","  var importSearchPath = _.find(searchPaths, function (path) {","    return importAbsolutePath.indexOf(path) === 0;","  });","  if (importSearchPath) {","    return path.relative(importSearchPath, importAbsolutePath);","  }","}","","","function isFileNotFound(error) {","  return error && error.code === 'FileNotFound';","}","","","function tryDepend(context, importPath) {","  if (importPath) {","    try {","      context.dependOn(importPath);","    } catch (error) {","      return error;","    }","  }","}","","","SassEngine.prototype.sassImporter = function (context, url, prev) {","  var importPath = importArgumentRelativeToSearchPaths(prev, url, context.environment.__trail__.paths);","  // \"If you have a SCSS or Sass file that you want to import but don't want to compile to a CSS file, you can add an","  // underscore to the beginning of the filename. ... You can then import these files without using the underscore.\"","  // https://github.com/sass/sass/blob/d26e6f/doc-src/SASS_REFERENCE.md#partials-partials","  var underscoredImportPath = importPath && path.join(path.dirname(importPath), '_' + path.basename(importPath));","","  var firstError = tryDepend(context, importPath);","  var secondError = isFileNotFound(firstError) && tryDepend(context, underscoredImportPath);","","  // While @import()ing assets outside of the search paths should be strongly discouraged, it is valid. Because the","  // asset is outside of the search path, there's no way to call depend_on() on it, so we shouldn't throw an error.","  if (isFileNotFound(firstError) && isFileNotFound(secondError)) {","    logger.warn(util.format('%s will not change when %s changes, because the file could not be found.', prev, url,","      firstError.message, secondError.message));","  }","","  return {","    file: url","  };","};","","function isSassType(obj) {","  for (var type in sass.types) {","    if (sass.types.hasOwnProperty(type)) {","      if (obj instanceof sass.types[type]) { return true; }","    }","  }","","  return false;","}","","SassEngine.prototype.sassFunctions = function (locals) {","  return _.transform(locals, function (out, fn, key) {","    if (!_.isFunction(fn)) {","      return;","    }","","    var functionName = key + '('","      + _.range(fn.length)","        .map(function (i) {","          // sass function params","          // add default value to support optional param in helper","          return '$_' + i + ': \"\"';","        })","        .join(',')","      + ')';","","    out[functionName] = function () {","      // drop done() callback","      var args = _.toArray(arguments).slice(0, fn.length)","      .map(function ($arg) {","        return $arg.getValue();","      });","","      var result = fn.apply(null, args);","","      switch (typeof result) {","        case 'string':","          return new sass.types.String(result);","        case 'number':","          return new sass.types.Number(result);","        case 'boolean':","          return new sass.types.Boolean(result);","        case 'object':","          if (isSassType(result)) { return result; }","          // otherwise fall through and throw!","        default:","          throw new Error('Unsupported value: ' + result);","      }","    };","  });","};","","","// Expose default MimeType of an engine","prop(SassEngine, 'defaultMimeType', 'text/css');",""],"l":{"19":1,"20":1,"23":1,"24":1,"28":1,"29":1,"30":1,"37":1,"38":0,"39":0,"42":0,"43":0,"48":1,"52":1,"71":1,"72":0,"78":1,"79":0,"80":0,"82":0,"83":0,"85":0,"87":0,"88":0,"92":0,"97":1,"98":0,"100":0,"101":0,"112":0,"114":0,"115":0,"119":0,"120":0,"125":1,"126":0,"128":0,"129":0,"132":0,"133":0,"136":0,"141":1,"142":0,"143":0,"144":0,"146":0,"147":0,"152":1,"153":0,"157":1,"158":0,"159":0,"160":0,"162":0,"168":1,"169":0,"173":0,"175":0,"176":0,"180":0,"181":0,"185":0,"190":1,"191":0,"192":0,"193":0,"197":0,"200":1,"201":0,"202":0,"203":0,"206":0,"211":0,"216":0,"218":0,"220":0,"223":0,"225":0,"227":0,"229":0,"231":0,"233":0,"236":0,"244":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/logger.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/logger.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":1,"13":5,"14":5,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":5,"5":0},"fnMap":{"1":{"name":"noop","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":16}}},"2":{"name":"(anonymous_2)","line":67,"loc":{"start":{"line":67,"column":23},"end":{"line":67,"column":46}}},"3":{"name":"(anonymous_3)","line":96,"loc":{"start":{"line":96,"column":21},"end":{"line":96,"column":39}}},"4":{"name":"(anonymous_4)","line":140,"loc":{"start":{"line":140,"column":28},"end":{"line":140,"column":52}}},"5":{"name":"(anonymous_5)","line":146,"loc":{"start":{"line":146,"column":26},"end":{"line":146,"column":45}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":21,"column":26}},"2":{"start":{"line":25,"column":0},"end":{"line":25,"column":18}},"3":{"start":{"line":29,"column":0},"end":{"line":35,"column":2}},"4":{"start":{"line":39,"column":0},"end":{"line":39,"column":26}},"5":{"start":{"line":43,"column":0},"end":{"line":43,"column":22}},"6":{"start":{"line":67,"column":0},"end":{"line":70,"column":2}},"7":{"start":{"line":68,"column":2},"end":{"line":68,"column":49}},"8":{"start":{"line":69,"column":2},"end":{"line":69,"column":14}},"9":{"start":{"line":96,"column":0},"end":{"line":99,"column":2}},"10":{"start":{"line":97,"column":2},"end":{"line":97,"column":19}},"11":{"start":{"line":98,"column":2},"end":{"line":98,"column":14}},"12":{"start":{"line":140,"column":0},"end":{"line":160,"column":3}},"13":{"start":{"line":143,"column":2},"end":{"line":143,"column":57}},"14":{"start":{"line":146,"column":2},"end":{"line":159,"column":4}},"15":{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},"16":{"start":{"line":149,"column":6},"end":{"line":149,"column":13}},"17":{"start":{"line":152,"column":4},"end":{"line":155,"column":5}},"18":{"start":{"line":153,"column":6},"end":{"line":153,"column":30}},"19":{"start":{"line":154,"column":6},"end":{"line":154,"column":13}},"20":{"start":{"line":158,"column":4},"end":{"line":158,"column":53}}},"branchMap":{"1":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":18},"end":{"line":68,"column":43}},{"start":{"line":68,"column":47},"end":{"line":68,"column":48}}]},"2":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"3":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"4":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":5},"end":{"line":158,"column":16}},{"start":{"line":158,"column":20},"end":{"line":158,"column":35}}]}},"code":["/**"," *  class Logger"," *"," *  Provides unified logging interface for Mincer."," *"," *      Logger.use({"," *        log: function (msg) {"," *          // my logging generic logic"," *        },"," *        debug: function (msg) {"," *          // logic for debug logging"," *        }"," *      });"," **/","","","'use strict';","","","// 3rd-party","var _ = require('lodash');","","","// deaf logger's log function that does nothing","function noop() {}","","","// deaf logger used to provide just a \"dumb\" interface","var DEAF_LOGGER = {","  log:    noop,","  debug:  noop,","  info:   noop,","  warn:   noop,","  error:  noop","};","","","// active backend","var backend = DEAF_LOGGER;","","","// log level to report","var levelToReport = 0;","","","/**"," *  Logger.level(int) -> Logger"," *  - int (Integer): A number respresenting which levels to log"," *"," *  Allows to mute lower log levels. Any log level less than the number"," *  specified will be ignored."," *"," *  ##### Log levels"," *"," *  - `logger.LOG_LEVEL`    : 0"," *  - `logger.DEBUG_LEVEL`  : 1"," *  - `logger.INFO_LEVEL`   : 2"," *  - `logger.WARN_LEVEL`   : 3"," *  - `logger.ERROR_LEVEL`  : 4"," *"," *  ##### Examples"," *"," *      Logger.level(Logger.WARN_LEVEL);"," *"," *      Logger.Level(4);"," **/","module.exports.level = function (ignoreBelow) {","  levelToReport = parseInt(ignoreBelow, 10) || 0;","  return this;","};","","","/**"," *  Logger.use(logger) -> Logger"," *  - logger (Object): An object that respond to some (or all) log levels"," *"," *  Allows to provide you own logging backend (by default all log messages are"," *  going to \"nowhere\")."," *"," *"," *  ##### Log levels"," *"," *  Your `logger` backend should normally respond to following methods:"," *"," *  - `logger.log(level, message)`  : Used by [[Logger.log]]"," *  - `logger.debug(message)`       : Used by [[Logger.debug]]"," *  - `logger.info(message)`        : Used by [[Logger.info]]"," *  - `logger.warn(message)`        : Used by [[Logger.warn]]"," *  - `logger.error(message)`       : Used by [[Logger.error]]"," *"," *"," *  ##### Example"," *"," *      Logger.use(console);"," **/","module.exports.use = function (logger) {","  backend = logger;","  return this;","};","","","/**"," *  Logger.log(level, message) -> Void"," *"," *  Generic logging method. Used as last resort if `backend` logger (provided"," *  to [[Logger.use]]) have no method for requested level."," **/","","","/**"," *  Logger.debug(message) -> Void"," *"," *  Used for any non-critical information, that might be useful mostly for"," *  development only."," **/","","","/**"," *  Logger.info(message) -> Void"," *"," *  Used for important messages."," **/","","","/**"," *  Logger.warn(message) -> Void"," *"," *  Used for very important messages (e.g. notification about ongoing FS changes"," *  etc)."," **/","","","/**"," *  Logger.error(message) -> Void"," *"," *  Used for logging errors."," **/","","","_.keys(DEAF_LOGGER).forEach(function (level, index) {","","  // e.g. Logger.LOG_LEVEL","  module.exports[level.toUpperCase() + '_LEVEL'] = index;","","  // e.g. Logger.log","  module.exports[level] = function (message) {","    // ignore if level is less then `levelToReport`","    if (index < levelToReport) {","      return;","    }","","    if (_.isFunction(backend[level])) {","      backend[level](message);","      return;","    }","","    // fallback to `backend.log`","    (backend.log || DEAF_LOGGER.log)(level, message);","  };","});",""],"l":{"21":1,"25":1,"29":1,"39":1,"43":1,"67":1,"68":0,"69":0,"96":1,"97":0,"98":0,"140":1,"143":5,"146":5,"148":0,"149":0,"152":0,"153":0,"154":0,"158":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/coffee_engine.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/engines/coffee_engine.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":1,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"CoffeeEngine","line":39,"loc":{"start":{"line":39,"column":36},"end":{"line":39,"column":60}}},"2":{"name":"(anonymous_2)","line":63,"loc":{"start":{"line":63,"column":25},"end":{"line":63,"column":41}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":34},"end":{"line":69,"column":65}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}},"2":{"start":{"line":25,"column":0},"end":{"line":25,"column":26}},"3":{"start":{"line":26,"column":0},"end":{"line":26,"column":27}},"4":{"start":{"line":27,"column":0},"end":{"line":27,"column":11}},"5":{"start":{"line":31,"column":0},"end":{"line":31,"column":39}},"6":{"start":{"line":32,"column":0},"end":{"line":32,"column":42}},"7":{"start":{"line":39,"column":0},"end":{"line":42,"column":2}},"8":{"start":{"line":40,"column":2},"end":{"line":40,"column":34}},"9":{"start":{"line":41,"column":2},"end":{"line":41,"column":70}},"10":{"start":{"line":45,"column":0},"end":{"line":45,"column":49}},"11":{"start":{"line":49,"column":0},"end":{"line":49,"column":29}},"12":{"start":{"line":63,"column":0},"end":{"line":65,"column":2}},"13":{"start":{"line":64,"column":2},"end":{"line":64,"column":26}},"14":{"start":{"line":69,"column":0},"end":{"line":104,"column":2}},"15":{"start":{"line":70,"column":2},"end":{"line":70,"column":31}},"16":{"start":{"line":72,"column":2},"end":{"line":74,"column":5}},"17":{"start":{"line":76,"column":2},"end":{"line":103,"column":3}},"18":{"start":{"line":79,"column":4},"end":{"line":92,"column":5}},"19":{"start":{"line":80,"column":6},"end":{"line":84,"column":9}},"20":{"start":{"line":86,"column":6},"end":{"line":86,"column":54}},"21":{"start":{"line":87,"column":6},"end":{"line":87,"column":28}},"22":{"start":{"line":88,"column":6},"end":{"line":88,"column":36}},"23":{"start":{"line":91,"column":6},"end":{"line":91,"column":57}},"24":{"start":{"line":95,"column":4},"end":{"line":95,"column":23}},"25":{"start":{"line":97,"column":4},"end":{"line":100,"column":5}},"26":{"start":{"line":98,"column":6},"end":{"line":98,"column":70}},"27":{"start":{"line":99,"column":6},"end":{"line":99,"column":34}},"28":{"start":{"line":102,"column":4},"end":{"line":102,"column":14}},"29":{"start":{"line":108,"column":0},"end":{"line":108,"column":64}}},"branchMap":{"1":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":17}},{"start":{"line":41,"column":21},"end":{"line":41,"column":41}},{"start":{"line":41,"column":45},"end":{"line":41,"column":69}}]},"2":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"3":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]}},"code":["/**"," *  class CoffeeEngine"," *"," *  Engine for the CoffeeScript compiler. You will need `coffee-script` Node"," *  module installed in order to use [[Mincer]] with `*.coffee` and"," *  `*.litcoffee` files:"," *"," *      npm install coffee-script"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// stdlib","var extname = require('path').extname;","","","// 3rd-party","var _ = require('lodash');","var path = require('path');","var coffee; // initialized later","","","// internal","var Template  = require('../template');","var prop      = require('../common').prop;","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var CoffeeEngine = module.exports = function CoffeeEngine() {","  Template.apply(this, arguments);","  coffee = coffee || Template.libs.coffee || require('coffee-script');","};","","","require('util').inherits(CoffeeEngine, Template);","","","// Internal (private) options storage","var options = { bare: true };","","","/**"," *  CoffeeEngine.configure(opts) -> Void"," *  - opts (Object):"," *"," *  Allows to set CoffeeScript compilation options."," *  Default: `{bare: true}`."," *"," *  ##### Example"," *"," *      CoffeeScript.configure({bare: true});"," **/","CoffeeEngine.configure = function (opts) {","  options = _.clone(opts);","};","","","// Render data","CoffeeEngine.prototype.evaluate = function (context/*, locals*/) {","  var loc, compileOpts, result;","","  compileOpts = _.assign({}, options, {","    literate: extname(this.file) === '.litcoffee'","  });","","  try {","    // coffescript result change structure, depending on","    // soursemaps option.","    if (context.environment.isEnabled('source_maps')) {","      compileOpts = _.assign(compileOpts, {","        inline:      true,","        sourceMap:   true,","        sourceFiles: [ path.basename(context.pathname) ]","      });","","      result = coffee.compile(this.data, compileOpts);","      this.data = result.js;","      this.map = result.v3SourceMap;","","    } else {","      this.data = coffee.compile(this.data, compileOpts);","    }","","  } catch (err) {","    loc = err.location;","","    if (loc) {","      loc = 'L' + (loc.first_line + 1) + ':' + (loc.first_column + 1);","      err.message += ' at ' + loc;","    }","","    throw err;","  }","};","","","// Expose default MimeType of an engine","prop(CoffeeEngine, 'defaultMimeType', 'application/javascript');",""],"l":{"21":1,"25":1,"26":1,"27":1,"31":1,"32":1,"39":1,"40":0,"41":0,"45":1,"49":1,"63":1,"64":0,"69":1,"70":0,"72":0,"76":0,"79":0,"80":0,"86":0,"87":0,"88":0,"91":0,"95":0,"97":0,"98":0,"99":0,"102":0,"108":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/processors/directive_processor.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/processors/directive_processor.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":1,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":1,"118":0,"119":1,"120":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"fnMap":{"1":{"name":"get_lines","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":24}}},"2":{"name":"(anonymous_2)","line":105,"loc":{"start":{"line":105,"column":11},"end":{"line":105,"column":33}}},"3":{"name":"(anonymous_3)","line":122,"loc":{"start":{"line":122,"column":16},"end":{"line":122,"column":42}}},"4":{"name":"(anonymous_4)","line":141,"loc":{"start":{"line":141,"column":11},"end":{"line":141,"column":33}}},"5":{"name":"(anonymous_5)","line":155,"loc":{"start":{"line":155,"column":21},"end":{"line":155,"column":43}}},"6":{"name":"(anonymous_6)","line":171,"loc":{"start":{"line":171,"column":34},"end":{"line":171,"column":54}}},"7":{"name":"(anonymous_7)","line":188,"loc":{"start":{"line":188,"column":16},"end":{"line":188,"column":38}}},"8":{"name":"(anonymous_8)","line":203,"loc":{"start":{"line":203,"column":25},"end":{"line":203,"column":45}}},"9":{"name":"(anonymous_9)","line":227,"loc":{"start":{"line":227,"column":13},"end":{"line":227,"column":35}}},"10":{"name":"(anonymous_10)","line":242,"loc":{"start":{"line":242,"column":19},"end":{"line":242,"column":41}}},"11":{"name":"(anonymous_11)","line":254,"loc":{"start":{"line":254,"column":8},"end":{"line":254,"column":30}}},"12":{"name":"DirectiveProcessor","line":264,"loc":{"start":{"line":264,"column":42},"end":{"line":264,"column":72}}},"13":{"name":"(anonymous_13)","line":273,"loc":{"start":{"line":273,"column":40},"end":{"line":273,"column":71}}},"14":{"name":"(anonymous_14)","line":304,"loc":{"start":{"line":304,"column":49},"end":{"line":304,"column":61}}},"15":{"name":"(anonymous_15)","line":308,"loc":{"start":{"line":308,"column":29},"end":{"line":308,"column":44}}},"16":{"name":"(anonymous_16)","line":321,"loc":{"start":{"line":321,"column":45},"end":{"line":321,"column":57}}},"17":{"name":"(anonymous_17)","line":331,"loc":{"start":{"line":331,"column":36},"end":{"line":331,"column":56}}},"18":{"name":"is_directive","line":345,"loc":{"start":{"line":345,"column":0},"end":{"line":345,"column":42}}},"19":{"name":"(anonymous_19)","line":346,"loc":{"start":{"line":346,"column":28},"end":{"line":346,"column":43}}},"20":{"name":"(anonymous_20)","line":355,"loc":{"start":{"line":355,"column":56},"end":{"line":355,"column":68}}},"21":{"name":"(anonymous_21)","line":359,"loc":{"start":{"line":359,"column":40},"end":{"line":359,"column":63}}},"22":{"name":"(anonymous_22)","line":382,"loc":{"start":{"line":382,"column":56},"end":{"line":382,"column":68}}},"23":{"name":"(anonymous_23)","line":401,"loc":{"start":{"line":401,"column":51},"end":{"line":401,"column":63}}},"24":{"name":"(anonymous_24)","line":405,"loc":{"start":{"line":405,"column":35},"end":{"line":405,"column":58}}},"25":{"name":"(anonymous_25)","line":423,"loc":{"start":{"line":423,"column":36},"end":{"line":423,"column":56}}},"26":{"name":"(anonymous_26)","line":428,"loc":{"start":{"line":428,"column":39},"end":{"line":428,"column":59}}},"27":{"name":"(anonymous_27)","line":433,"loc":{"start":{"line":433,"column":41},"end":{"line":433,"column":63}}}},"statementMap":{"1":{"start":{"line":30,"column":0},"end":{"line":30,"column":27}},"2":{"start":{"line":34,"column":0},"end":{"line":34,"column":36}},"3":{"start":{"line":35,"column":0},"end":{"line":35,"column":46}},"4":{"start":{"line":39,"column":0},"end":{"line":39,"column":41}},"5":{"start":{"line":40,"column":0},"end":{"line":40,"column":44}},"6":{"start":{"line":41,"column":0},"end":{"line":41,"column":46}},"7":{"start":{"line":42,"column":0},"end":{"line":42,"column":50}},"8":{"start":{"line":43,"column":0},"end":{"line":43,"column":50}},"9":{"start":{"line":52,"column":0},"end":{"line":54,"column":1}},"10":{"start":{"line":53,"column":2},"end":{"line":53,"column":43}},"11":{"start":{"line":62,"column":0},"end":{"line":70,"column":13}},"12":{"start":{"line":82,"column":0},"end":{"line":82,"column":68}},"13":{"start":{"line":86,"column":0},"end":{"line":257,"column":2}},"14":{"start":{"line":106,"column":4},"end":{"line":106,"column":68}},"15":{"start":{"line":108,"column":4},"end":{"line":108,"column":40}},"16":{"start":{"line":123,"column":4},"end":{"line":125,"column":5}},"17":{"start":{"line":124,"column":6},"end":{"line":124,"column":78}},"18":{"start":{"line":127,"column":4},"end":{"line":127,"column":45}},"19":{"start":{"line":128,"column":4},"end":{"line":128,"column":25}},"20":{"start":{"line":130,"column":4},"end":{"line":130,"column":43}},"21":{"start":{"line":131,"column":4},"end":{"line":131,"column":32}},"22":{"start":{"line":142,"column":4},"end":{"line":142,"column":49}},"23":{"start":{"line":144,"column":4},"end":{"line":144,"column":41}},"24":{"start":{"line":145,"column":4},"end":{"line":145,"column":42}},"25":{"start":{"line":156,"column":4},"end":{"line":156,"column":46}},"26":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"27":{"start":{"line":159,"column":6},"end":{"line":159,"column":76}},"28":{"start":{"line":162,"column":4},"end":{"line":162,"column":63}},"29":{"start":{"line":163,"column":4},"end":{"line":163,"column":27}},"30":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"31":{"start":{"line":166,"column":6},"end":{"line":166,"column":72}},"32":{"start":{"line":169,"column":4},"end":{"line":169,"column":32}},"33":{"start":{"line":171,"column":4},"end":{"line":179,"column":7}},"34":{"start":{"line":172,"column":6},"end":{"line":172,"column":43}},"35":{"start":{"line":174,"column":6},"end":{"line":178,"column":7}},"36":{"start":{"line":175,"column":8},"end":{"line":175,"column":15}},"37":{"start":{"line":176,"column":13},"end":{"line":178,"column":7}},"38":{"start":{"line":177,"column":8},"end":{"line":177,"column":44}},"39":{"start":{"line":189,"column":4},"end":{"line":189,"column":46}},"40":{"start":{"line":191,"column":4},"end":{"line":193,"column":5}},"41":{"start":{"line":192,"column":6},"end":{"line":192,"column":71}},"42":{"start":{"line":195,"column":4},"end":{"line":195,"column":63}},"43":{"start":{"line":196,"column":4},"end":{"line":196,"column":27}},"44":{"start":{"line":198,"column":4},"end":{"line":200,"column":5}},"45":{"start":{"line":199,"column":6},"end":{"line":199,"column":67}},"46":{"start":{"line":202,"column":4},"end":{"line":202,"column":32}},"47":{"start":{"line":203,"column":4},"end":{"line":211,"column":7}},"48":{"start":{"line":204,"column":6},"end":{"line":210,"column":7}},"49":{"start":{"line":205,"column":8},"end":{"line":205,"column":15}},"50":{"start":{"line":206,"column":13},"end":{"line":210,"column":7}},"51":{"start":{"line":207,"column":8},"end":{"line":207,"column":40}},"52":{"start":{"line":208,"column":13},"end":{"line":210,"column":7}},"53":{"start":{"line":209,"column":8},"end":{"line":209,"column":44}},"54":{"start":{"line":228,"column":4},"end":{"line":228,"column":35}},"55":{"start":{"line":243,"column":4},"end":{"line":243,"column":40}},"56":{"start":{"line":255,"column":4},"end":{"line":255,"column":36}},"57":{"start":{"line":264,"column":0},"end":{"line":266,"column":2}},"58":{"start":{"line":265,"column":2},"end":{"line":265,"column":34}},"59":{"start":{"line":269,"column":0},"end":{"line":269,"column":55}},"60":{"start":{"line":273,"column":0},"end":{"line":292,"column":2}},"61":{"start":{"line":274,"column":2},"end":{"line":275,"column":69}},"62":{"start":{"line":278,"column":2},"end":{"line":278,"column":30}},"63":{"start":{"line":280,"column":2},"end":{"line":280,"column":47}},"64":{"start":{"line":281,"column":2},"end":{"line":281,"column":44}},"65":{"start":{"line":282,"column":2},"end":{"line":282,"column":76}},"66":{"start":{"line":283,"column":2},"end":{"line":283,"column":60}},"67":{"start":{"line":285,"column":2},"end":{"line":285,"column":45}},"68":{"start":{"line":286,"column":2},"end":{"line":286,"column":60}},"69":{"start":{"line":288,"column":2},"end":{"line":288,"column":27}},"70":{"start":{"line":289,"column":2},"end":{"line":289,"column":23}},"71":{"start":{"line":291,"column":2},"end":{"line":291,"column":26}},"72":{"start":{"line":304,"column":0},"end":{"line":318,"column":2}},"73":{"start":{"line":305,"column":2},"end":{"line":305,"column":18}},"74":{"start":{"line":308,"column":2},"end":{"line":317,"column":5}},"75":{"start":{"line":309,"column":4},"end":{"line":309,"column":35}},"76":{"start":{"line":315,"column":4},"end":{"line":315,"column":45}},"77":{"start":{"line":316,"column":4},"end":{"line":316,"column":33}},"78":{"start":{"line":321,"column":0},"end":{"line":340,"column":2}},"79":{"start":{"line":322,"column":2},"end":{"line":322,"column":18}},"80":{"start":{"line":326,"column":2},"end":{"line":328,"column":3}},"81":{"start":{"line":327,"column":4},"end":{"line":327,"column":40}},"82":{"start":{"line":331,"column":2},"end":{"line":333,"column":5}},"83":{"start":{"line":332,"column":4},"end":{"line":332,"column":55}},"84":{"start":{"line":337,"column":2},"end":{"line":339,"column":3}},"85":{"start":{"line":338,"column":4},"end":{"line":338,"column":29}},"86":{"start":{"line":345,"column":0},"end":{"line":347,"column":1}},"87":{"start":{"line":346,"column":2},"end":{"line":346,"column":74}},"88":{"start":{"line":346,"column":45},"end":{"line":346,"column":70}},"89":{"start":{"line":355,"column":0},"end":{"line":374,"column":3}},"90":{"start":{"line":356,"column":2},"end":{"line":356,"column":13}},"91":{"start":{"line":358,"column":2},"end":{"line":371,"column":3}},"92":{"start":{"line":359,"column":4},"end":{"line":368,"column":24}},"93":{"start":{"line":360,"column":6},"end":{"line":360,"column":16}},"94":{"start":{"line":362,"column":6},"end":{"line":365,"column":7}},"95":{"start":{"line":363,"column":8},"end":{"line":363,"column":32}},"96":{"start":{"line":364,"column":8},"end":{"line":364,"column":56}},"97":{"start":{"line":367,"column":6},"end":{"line":367,"column":18}},"98":{"start":{"line":370,"column":4},"end":{"line":370,"column":46}},"99":{"start":{"line":373,"column":2},"end":{"line":373,"column":34}},"100":{"start":{"line":382,"column":0},"end":{"line":388,"column":3}},"101":{"start":{"line":383,"column":2},"end":{"line":385,"column":3}},"102":{"start":{"line":384,"column":4},"end":{"line":384,"column":64}},"103":{"start":{"line":387,"column":2},"end":{"line":387,"column":34}},"104":{"start":{"line":401,"column":0},"end":{"line":420,"column":3}},"105":{"start":{"line":402,"column":2},"end":{"line":417,"column":3}},"106":{"start":{"line":403,"column":4},"end":{"line":403,"column":37}},"107":{"start":{"line":405,"column":4},"end":{"line":416,"column":13}},"108":{"start":{"line":406,"column":6},"end":{"line":406,"column":61}},"109":{"start":{"line":408,"column":6},"end":{"line":415,"column":7}},"110":{"start":{"line":409,"column":8},"end":{"line":409,"column":38}},"111":{"start":{"line":410,"column":8},"end":{"line":410,"column":28}},"112":{"start":{"line":412,"column":8},"end":{"line":414,"column":9}},"113":{"start":{"line":413,"column":10},"end":{"line":413,"column":62}},"114":{"start":{"line":419,"column":2},"end":{"line":419,"column":29}},"115":{"start":{"line":423,"column":0},"end":{"line":425,"column":2}},"116":{"start":{"line":424,"column":2},"end":{"line":424,"column":49}},"117":{"start":{"line":428,"column":0},"end":{"line":430,"column":2}},"118":{"start":{"line":429,"column":2},"end":{"line":429,"column":52}},"119":{"start":{"line":433,"column":0},"end":{"line":435,"column":2}},"120":{"start":{"line":434,"column":2},"end":{"line":434,"column":56}}},"branchMap":{"1":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":16},"end":{"line":53,"column":19}},{"start":{"line":53,"column":23},"end":{"line":53,"column":25}}]},"2":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":41},"end":{"line":106,"column":48}},{"start":{"line":106,"column":52},"end":{"line":106,"column":66}}]},"3":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"4":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":25},"end":{"line":156,"column":32}},{"start":{"line":156,"column":36},"end":{"line":156,"column":39}}]},"5":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"6":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":165,"column":4}},{"start":{"line":165,"column":4},"end":{"line":165,"column":4}}]},"7":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":8},"end":{"line":165,"column":13}},{"start":{"line":165,"column":17},"end":{"line":165,"column":36}}]},"8":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":6},"end":{"line":174,"column":6}},{"start":{"line":174,"column":6},"end":{"line":174,"column":6}}]},"9":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":13},"end":{"line":176,"column":13}},{"start":{"line":176,"column":13},"end":{"line":176,"column":13}}]},"10":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":25},"end":{"line":189,"column":32}},{"start":{"line":189,"column":36},"end":{"line":189,"column":39}}]},"11":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":191,"column":4}},{"start":{"line":191,"column":4},"end":{"line":191,"column":4}}]},"12":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"13":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":8},"end":{"line":198,"column":13}},{"start":{"line":198,"column":17},"end":{"line":198,"column":36}}]},"14":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":6},"end":{"line":204,"column":6}},{"start":{"line":204,"column":6},"end":{"line":204,"column":6}}]},"15":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":13},"end":{"line":206,"column":13}},{"start":{"line":206,"column":13},"end":{"line":206,"column":13}}]},"16":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":13},"end":{"line":208,"column":13}},{"start":{"line":208,"column":13},"end":{"line":208,"column":13}}]},"17":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":16},"end":{"line":275,"column":62}},{"start":{"line":275,"column":66},"end":{"line":275,"column":68}}]},"18":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":17},"end":{"line":275,"column":47}},{"start":{"line":275,"column":51},"end":{"line":275,"column":53}}]},"19":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":2},"end":{"line":326,"column":2}},{"start":{"line":326,"column":2},"end":{"line":326,"column":2}}]},"20":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":6},"end":{"line":326,"column":30}},{"start":{"line":326,"column":34},"end":{"line":326,"column":65}}]},"21":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":2},"end":{"line":337,"column":2}},{"start":{"line":337,"column":2},"end":{"line":337,"column":2}}]},"22":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":2},"end":{"line":358,"column":2}},{"start":{"line":358,"column":2},"end":{"line":358,"column":2}}]},"23":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":6},"end":{"line":362,"column":6}},{"start":{"line":362,"column":6},"end":{"line":362,"column":6}}]},"24":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":2},"end":{"line":383,"column":2}},{"start":{"line":383,"column":2},"end":{"line":383,"column":2}}]},"25":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":2},"end":{"line":402,"column":2}},{"start":{"line":402,"column":2},"end":{"line":402,"column":2}}]},"26":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":6},"end":{"line":408,"column":6}},{"start":{"line":408,"column":6},"end":{"line":408,"column":6}}]},"27":{"line":408,"type":"binary-expr","locations":[{"start":{"line":408,"column":10},"end":{"line":408,"column":17}},{"start":{"line":408,"column":21},"end":{"line":408,"column":31}}]},"28":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":8},"end":{"line":412,"column":8}},{"start":{"line":412,"column":8},"end":{"line":412,"column":8}}]}},"code":["/**"," *  class DirectiveProcessor"," *"," *  The `DirectiveProcessor` is responsible for parsing and evaluating"," *  directive comments in a source file."," *"," *  A directive comment starts with a comment prefix, followed by an \"=\","," *  then the directive name, then any arguments."," *"," *  - **JavaScript one-line comments:**       `//= require \"foo\""," *  - **CoffeeScript one-line comments:**     `#= require \"baz\""," *  - **JavaScript and CSS block comments:**  `*= require \"bar\""," *"," *  This behavior can be disabled with:"," *"," *      environment.unregisterPreProcessor('text/css', DirectiveProcessor);"," *      environment.unregisterPreProcessor('application/javascript', DirectiveProcessor);"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// stdlib","var path = require('path');","","","// 3rd-party","var _           = require('lodash');","var shellwords  = require('shellwords').split;","","","// internal","var Template    = require('../template');","var prop        = require('../common').prop;","var getter      = require('../common').getter;","var isAbsolute  = require('../common').isAbsolute;","var isRelative  = require('../common').isRelative;","","","////////////////////////////////////////////////////////////////////////////////","","","// Returns an Array of lines.","// Original idea of cross-platform line splitting taken from Sugar.JS:","// https://github.com/andrewplummer/Sugar/blob/f6d1c2e9/lib/string.js#L323","function get_lines(str) {","  return String(str || '').match(/^.*$/gm);","}","","// Directives will only be picked up if they are in the header","// of the source file. C style (/* */), JavaScript (//), and","// Ruby (#) comments are supported.","//","// Directives in comments after the first non-whitespace line","// of code will not be processed.","var HEADER_PATTERN = new RegExp(","  '^(?:\\\\s*' +","    '(' +","      '(?:\\/[*](?:\\\\s*|.+?)*?[*]\\/)' + '|' +","      '(?:###\\n(?:\\\\s*|.+?)*?\\n###)' + '|' +","      '(?:\\/\\/.*\\n?)+' + '|' +","      '(?:#.*\\n?)+' +","    ')*' +","  ')*', 'm');","","","// Directives are denoted by a `=` followed by the name, then","// argument list.","//","// A few different styles are allowed:","//","//     // =require foo","//     //= require foo","//     //= require \"foo\"","//","var DIRECTIVE_PATTERN = new RegExp('^\\\\W*=\\\\s*(\\\\w+.*?)(\\\\*\\\\/)?$');","","","// Real directive processors","var DIRECTIVE_HANDLERS = {","  // The `require` directive functions similar to Ruby's `require`.","  // It provides a way to declare a dependency on a file in your path","  // and ensures it's only loaded once before the source file.","  //","  // `require` works with files in the environment path:","  //","  //     //= require \"foo.js\"","  //","  // Extensions are optional. If your source file is \".js\", it","  // assumes you are requiring another \".js\".","  //","  //     //= require \"foo\"","  //","  // Relative paths work too. Use a leading `./` to denote a relative","  // path:","  //","  //     //= require \"./bar\"","  //","  require: function (self, args) {","    var pathname = isRelative(args[0]) ? args[0] : ('./' + args[0]);","","    self.context.requireAsset(pathname);","  },","","  // `require_self` causes the body of the current file to be","  // inserted before any subsequent `require` or `include`","  // directives. Useful in CSS files, where it's common for the","  // index file to contain global styles that need to be defined","  // before other dependencies are loaded.","  //","  //     /*= require \"reset\"","  //      *= require_self","  //      *= require_tree .","  //      */","  //","  require_self: function (self/*, args*/) {","    if (self.__hasWrittenBody__) {","      throw new Error('require_self can only be called once per source file');","    }","","    self.context.requireAsset(self.pathname);","    self.processSource();","","    prop(self, '__hasWrittenBody__', true);","    self.includedPathnames = [];","  },","","","  // The `include` directive works similar to `require` but","  // inserts the contents of the dependency even if it already","  // has been required.","  //","  //     //= include \"header\"","  //","  include: function (self, args) {","    var pathname = self.context.resolve(args[0]);","","    self.context.dependOnAsset(pathname);","    self.includedPathnames.push(pathname);","  },","","","  // `require_directory` requires all the files inside a single","  // directory. It's similar to `path/*` since it does not follow","  // nested directories.","  //","  //     //= require_directory \"./javascripts\"","  //","  require_directory: function (self, args) {","    var root, pathname = args[0] || '.', stat;","","    if (isAbsolute(pathname)) {","      throw new Error('require_directory argument must be a relative path');","    }","","    root = path.resolve(path.dirname(self.pathname), pathname);","    stat = self.stat(root);","","    if (!stat || !stat.isDirectory()) {","      throw new Error('require_directory argument must be a directory');","    }","","    self.context.dependOn(root);","","    _.forEach(self.entries(root), function (pathname) {","      pathname = path.join(root, pathname);","","      if (self.file === pathname) {","        return;","      } else if (self.context.isAssetRequirable(pathname)) {","        self.context.requireAsset(pathname);","      }","    });","  },","","","  // `require_tree` requires all the nested files in a directory.","  // Its glob equivalent is `path/**/*`.","  //","  //     //= require_tree \"./public\"","  //","  require_tree: function (self, args) {","    var root, pathname = args[0] || '.', stat;","","    if (isAbsolute(pathname)) {","      throw new Error('require_tree argument must be a relative path');","    }","","    root = path.resolve(path.dirname(self.pathname), pathname);","    stat = self.stat(root);","","    if (!stat || !stat.isDirectory()) {","      throw new Error('require_tree argument must be a directory');","    }","","    self.context.dependOn(root);","    self.eachEntry(root, function (pathname) {","      if (self.file === pathname) {","        return;","      } else if (self.stat(pathname).isDirectory()) {","        self.context.dependOn(pathname);","      } else if (self.context.isAssetRequirable(pathname)) {","        self.context.requireAsset(pathname);","      }","    });","  },","","","  // Allows you to state a dependency on a file without","  // including it.","  //","  // This is used for caching purposes. Any changes made to","  // the dependency file will invalidate the cache of the","  // source file.","  //","  // This is useful if you are using ERB and File.read to pull","  // in contents from another file.","  //","  //     //= depend_on \"foo.png\"","  //","  depend_on: function (self, args) {","    self.context.dependOn(args[0]);","  },","","  // Allows you to state a dependency on an asset without including","  // it.","  //","  // This is used for caching purposes. Any changes that would","  // invalid the asset dependency will invalidate the cache our the","  // source file.","  //","  // Unlike `depend_on`, the path must be a requirable asset.","  //","  //     //= depend_on_asset \"bar.js\"","  //","  depend_on_asset: function (self, args) {","    self.context.dependOnAsset(args[0]);","  },","","  // Allows dependency to be excluded from the asset bundle.","  //","  // The `path` must be a valid asset and may or may not already","  // be part of the bundle. Once stubbed, it is blacklisted and","  // can't be brought back by any other `require`.","  //","  //     //= stub \"jquery\"","  //","  stub: function (self, args) {","    self.context.stubAsset(args[0]);","  }","};","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var DirectiveProcessor = module.exports = function DirectiveProcessor() {","  Template.apply(this, arguments);","};","","","require('util').inherits(DirectiveProcessor, Template);","","","// Run processor","DirectiveProcessor.prototype.evaluate = function (context/*, locals*/) {","  var self    = this,","      header  = (HEADER_PATTERN.exec(this.data) || []).shift() || '';","","  // drop trailing spaces and line breaks","  header = header.trimRight();","","  prop(this, 'pathname',            this.file);","  prop(this, 'header',              header);","  prop(this, 'body',                this.data.substr(header.length) + '\\n');","  prop(this, 'includedPathnames',   [], { writable: true });","","  prop(this, 'context',             context);","  prop(this, 'result',              '', { writable: true });","","  self.processDirectives();","  self.processSource();","","  this.data = self.result;","};","","","/**"," *  DirectiveProcessor#processDirectives() -> Void"," *"," *  Executes handlers for found directives."," *"," *  ##### See Also:"," *"," *  - [[DirectiveProcessor#directives]]"," **/","DirectiveProcessor.prototype.processDirectives = function () {","  var self = this;","","  // Execute handler for each found directive","  _.forEach(this.directives, function (arr) {","    self.context.__LINE__ = arr[0];","    // arr = [","    //         10,         # 0: LINE","    //         'require',  # 1: DIRECTIVE","    //         ['foobar']  # 2: [ARGUMENTS]","    //       ]","    DIRECTIVE_HANDLERS[arr[1]](self, arr[2]);","    self.context.__LINE__ = null;","  });","};","","","DirectiveProcessor.prototype.processSource = function () {","  var self = this;","","  // if our own body was not yet appended, and there are header comments,","  // prepend these coments first.","  if (!self.__hasWrittenBody__ && self.processedHeader.length > 0) {","    self.result += self.processedHeader;","  }","","  // process and append body of each path that should be included","  _.forEach(self.includedPathnames, function (pathname) {","    self.result += self.context.evaluate(pathname, {});","  });","","  // append own body of source only, if it was not yet written","  // (with `require_self` directive).","  if (!self.__hasWrittenBody__) {","    self.result += self.body;","  }","};","","","// Tells whenever given line is directive or not by","// comparing found directives line indexes with `lineno`","function is_directive(directives, lineno) {","  return _.some(directives, function (arr) { return arr[0] === lineno; });","}","","","/**"," *  DirectiveProcessor#processedHeader -> String"," *"," *  Returns the header String with any directives stripped."," **/","getter(DirectiveProcessor.prototype, 'processedHeader', function () {","  var header;","","  if (!this.__processedHeader__) {","    header = get_lines(this.header).map(function (line, index) {","      var parts;","","      if (is_directive(this.directives, index + 1)) {","        parts = line.split('=');","        line  = parts.shift() + '(=)' + parts.join('=');","      }","","      return line;","    }, this).join('\\n');","","    prop(this, '__processedHeader__', header);","  }","","  return this.__processedHeader__;","});","","","/**"," *  DirectiveProcessor#processedSource -> String"," *"," *  Returns the source String with any directives stripped."," **/","getter(DirectiveProcessor.prototype, 'processedSource', function () {","  if (!this.__processedSource__) {","    this.__processedSource__ = this.processedHeader + this.body;","  }","","  return this.__processedSource__;","});","","","/**"," *  DirectiveProcessor#directives -> Array"," *"," *  Returns an Array of directive structures. Each structure"," *  is an Array with the line number as the first element, the"," *  directive name as the second element, third is an array of"," *  arguments."," *"," *      [[1, \"require\", [\"foo\"]], [2, \"require\", [\"bar\"]]]"," **/","getter(DirectiveProcessor.prototype, 'directives', function () {","  if (!this.__directives__) {","    prop(this, '__directives__', []);","","    get_lines(this.header).forEach(function (line, index) {","      var matches = DIRECTIVE_PATTERN.exec(line), name, args;","","      if (matches && matches[1]) {","        args = shellwords(matches[1]);","        name = args.shift();","","        if (_.isFunction(DIRECTIVE_HANDLERS[name])) {","          this.__directives__.push([ index + 1, name, args ]);","        }","      }","    }, this);","  }","","  return this.__directives__;","});","","","DirectiveProcessor.prototype.stat = function (pathname) {","  return this.context.environment.stat(pathname);","};","","","DirectiveProcessor.prototype.entries = function (pathname) {","  return this.context.environment.entries(pathname);","};","","","DirectiveProcessor.prototype.eachEntry = function (path, func) {","  return this.context.environment.eachEntry(path, func);","};",""],"l":{"30":1,"34":1,"35":1,"39":1,"40":1,"41":1,"42":1,"43":1,"52":1,"53":0,"62":1,"82":1,"86":1,"106":0,"108":0,"123":0,"124":0,"127":0,"128":0,"130":0,"131":0,"142":0,"144":0,"145":0,"156":0,"158":0,"159":0,"162":0,"163":0,"165":0,"166":0,"169":0,"171":0,"172":0,"174":0,"175":0,"176":0,"177":0,"189":0,"191":0,"192":0,"195":0,"196":0,"198":0,"199":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"228":0,"243":0,"255":0,"264":1,"265":0,"269":1,"273":1,"274":0,"278":0,"280":0,"281":0,"282":0,"283":0,"285":0,"286":0,"288":0,"289":0,"291":0,"304":1,"305":0,"308":0,"309":0,"315":0,"316":0,"321":1,"322":0,"326":0,"327":0,"331":0,"332":0,"337":0,"338":0,"345":1,"346":0,"355":1,"356":0,"358":0,"359":0,"360":0,"362":0,"363":0,"364":0,"367":0,"370":0,"373":0,"382":1,"383":0,"384":0,"387":0,"401":1,"402":0,"403":0,"405":0,"406":0,"408":0,"409":0,"410":0,"412":0,"413":0,"419":0,"423":1,"424":0,"428":1,"429":0,"433":1,"434":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/processors/charset_normalizer.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/processors/charset_normalizer.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"CharsetNormalizer","line":35,"loc":{"start":{"line":35,"column":41},"end":{"line":35,"column":70}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":39},"end":{"line":49,"column":70}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":44},"end":{"line":52,"column":57}}}},"statementMap":{"1":{"start":{"line":28,"column":0},"end":{"line":28,"column":38}},"2":{"start":{"line":35,"column":0},"end":{"line":37,"column":2}},"3":{"start":{"line":36,"column":2},"end":{"line":36,"column":34}},"4":{"start":{"line":40,"column":0},"end":{"line":40,"column":54}},"5":{"start":{"line":44,"column":0},"end":{"line":44,"column":43}},"6":{"start":{"line":49,"column":0},"end":{"line":60,"column":2}},"7":{"start":{"line":50,"column":2},"end":{"line":50,"column":21}},"8":{"start":{"line":52,"column":2},"end":{"line":55,"column":5}},"9":{"start":{"line":53,"column":4},"end":{"line":53,"column":27}},"10":{"start":{"line":54,"column":4},"end":{"line":54,"column":14}},"11":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"12":{"start":{"line":58,"column":4},"end":{"line":58,"column":43}}},"branchMap":{"1":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":14},"end":{"line":53,"column":21}},{"start":{"line":53,"column":25},"end":{"line":53,"column":26}}]},"2":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]}},"code":["/**"," *  class CharsetNormalizer"," *"," *  Some browsers have issues with stylesheets that contain multiple"," *  `@charset` definitions. The `CharsetNormalizer` processor strips"," *  out multiple `@charset` definitions."," *"," *  The current implementation is naive. It picks the first `@charset`"," *  it sees and strips the others. This works for most people because"," *  the other definitions are usually `UTF-8`. A more sophisticated"," *  approach would be to re-encode stylesheets with mixed encodings."," *"," *  This behavior can be disabled with:"," *"," *      environment.unregisterBundleProcessor('text/css', CharsetNormalizer);"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// internal","var Template = require('../template');","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var CharsetNormalizer = module.exports = function CharsetNormalizer() {","  Template.apply(this, arguments);","};","","","require('util').inherits(CharsetNormalizer, Template);","","","// Cached version of RegExp used to find and process charset directives","var CHARSET_RE = /^@charset \"([^\"]+)\";$/gm;","","","","// Process data","CharsetNormalizer.prototype.evaluate = function (/*context, locals*/) {","  var charset = null;","","  this.data = this.data.replace(CHARSET_RE, function (m) {","    charset = charset || m;","    return '';","  });","","  if (charset !== null) {","    this.data = charset + '\\n' + this.data;","  }","};",""],"l":{"28":1,"35":1,"36":0,"40":1,"44":1,"49":1,"50":0,"52":0,"53":0,"54":0,"57":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/processors/safety_colons.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/processors/safety_colons.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"SafetyColons","line":32,"loc":{"start":{"line":32,"column":36},"end":{"line":32,"column":60}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":34},"end":{"line":42,"column":65}}}},"statementMap":{"1":{"start":{"line":25,"column":0},"end":{"line":25,"column":38}},"2":{"start":{"line":32,"column":0},"end":{"line":34,"column":2}},"3":{"start":{"line":33,"column":2},"end":{"line":33,"column":34}},"4":{"start":{"line":37,"column":0},"end":{"line":37,"column":49}},"5":{"start":{"line":42,"column":0},"end":{"line":50,"column":2}},"6":{"start":{"line":43,"column":2},"end":{"line":43,"column":35}},"7":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"8":{"start":{"line":46,"column":4},"end":{"line":46,"column":20}},"9":{"start":{"line":49,"column":2},"end":{"line":49,"column":19}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]}},"code":["/**"," *  class SafetyColons"," *"," *  For JS developers who are colonfobic, concatenating JS files using"," *  the module pattern usually leads to syntax errors."," *"," *  The `SafetyColons` processor will insert missing semicolons to the"," *  end of the file."," *"," *  This behavior can be disabled with:"," *"," *      environment.unregisterPostProcessor('application/javascript', SafetyColons);"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// internal","var Template = require('../template');","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var SafetyColons = module.exports = function SafetyColons() {","  Template.apply(this, arguments);","};","","","require('util').inherits(SafetyColons, Template);","","","","// Process data","SafetyColons.prototype.evaluate = function (/*context, locals*/) {","  var data = this.data.trimRight();","","  if (data[data.length - 1] !== ';') {","    data += '\\n;\\n';","  }","","  this.data = data;","};",""],"l":{"25":1,"32":1,"33":0,"37":1,"42":1,"43":0,"45":0,"46":0,"49":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/processors/autoprefixer.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/processors/autoprefixer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0,0],"2":[0,0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"Autoprefixer","line":34,"loc":{"start":{"line":34,"column":36},"end":{"line":34,"column":60}}},"2":{"name":"(anonymous_2)","line":61,"loc":{"start":{"line":61,"column":25},"end":{"line":61,"column":41}}},"3":{"name":"(anonymous_3)","line":67,"loc":{"start":{"line":67,"column":34},"end":{"line":67,"column":65}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":21,"column":29}},"2":{"start":{"line":22,"column":0},"end":{"line":22,"column":27}},"3":{"start":{"line":23,"column":0},"end":{"line":23,"column":26}},"4":{"start":{"line":27,"column":0},"end":{"line":27,"column":38}},"5":{"start":{"line":34,"column":0},"end":{"line":38,"column":2}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":34}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":87}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":67}},"9":{"start":{"line":41,"column":0},"end":{"line":41,"column":49}},"10":{"start":{"line":45,"column":0},"end":{"line":45,"column":17}},"11":{"start":{"line":61,"column":0},"end":{"line":63,"column":2}},"12":{"start":{"line":62,"column":2},"end":{"line":62,"column":31}},"13":{"start":{"line":67,"column":0},"end":{"line":90,"column":2}},"14":{"start":{"line":68,"column":2},"end":{"line":69,"column":13}},"15":{"start":{"line":71,"column":2},"end":{"line":74,"column":3}},"16":{"start":{"line":72,"column":4},"end":{"line":72,"column":42}},"17":{"start":{"line":73,"column":4},"end":{"line":73,"column":11}},"18":{"start":{"line":77,"column":2},"end":{"line":77,"column":48}},"19":{"start":{"line":79,"column":2},"end":{"line":86,"column":5}},"20":{"start":{"line":88,"column":2},"end":{"line":88,"column":36}},"21":{"start":{"line":89,"column":2},"end":{"line":89,"column":25}}},"branchMap":{"1":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":17},"end":{"line":36,"column":29}},{"start":{"line":36,"column":33},"end":{"line":36,"column":59}},{"start":{"line":36,"column":63},"end":{"line":36,"column":86}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":19}},{"start":{"line":37,"column":23},"end":{"line":37,"column":44}},{"start":{"line":37,"column":48},"end":{"line":37,"column":66}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]}},"code":["/**"," *  class Autoprefixer"," *"," *  Post processor that runs autoprefixer for css. You will need `autoprefixer`"," *  and `postcss` Node modules installed:"," *"," *      npm install autoprefixer"," *      npm install postcss"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// 3rd-party","var _    = require('lodash');","var path = require('path');","var autoprefixer, postcss; // initialized later","","","// internal","var Template = require('../template');","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var Autoprefixer = module.exports = function Autoprefixer() {","  Template.apply(this, arguments);","  autoprefixer = autoprefixer || Template.libs.autoprefixer || require('autoprefixer');","  postcss = postcss || Template.libs.postcss || require('postcss');","};","","","require('util').inherits(Autoprefixer, Template);","","","// Internal (private) requirements storage","var requirements;","","","/**"," *  Autoprefixer.configure(reqs) -> Void"," *  - reqs (Array|String):"," *"," *  Allows to set Autoprefixer requirements."," *"," *  Default: `undefined`."," *"," *"," *  ##### Example"," *"," *      Autoprefixer.configure(['> 1%', 'ie 8']);"," **/","Autoprefixer.configure = function (reqs) {","  requirements = _.clone(reqs);","};","","","// Prefix data","Autoprefixer.prototype.evaluate = function (context/*, locals*/) {","  var ap = postcss([ autoprefixer({ browsers: requirements }) ]),","      result;","","  if (!context.environment.isEnabled('source_maps')) {","    this.data = ap.process(this.data).css;","    return;","  }","","  // Reset sourceRoot bebore process - we work with relative paths","  var map = context.createSourceMapObject(this);","","  result = ap.process(this.data, {","    map: {","      prev:   map,","      inline: false","    },","    from: path.basename(context.pathname),","    to:   path.basename(context.pathname)","  });","","  this.map  = result.map.toString();","  this.data = result.css;","};",""],"l":{"21":1,"22":1,"23":1,"27":1,"34":1,"35":0,"36":0,"37":0,"41":1,"45":1,"61":1,"62":0,"67":1,"68":0,"71":0,"72":0,"73":0,"77":0,"79":0,"88":0,"89":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/processors/macro_processor.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/processors/macro_processor.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"MacroProcessor","line":51,"loc":{"start":{"line":51,"column":38},"end":{"line":51,"column":64}}},"2":{"name":"(anonymous_2)","line":81,"loc":{"start":{"line":81,"column":27},"end":{"line":81,"column":56}}},"3":{"name":"(anonymous_3)","line":85,"loc":{"start":{"line":85,"column":28},"end":{"line":85,"column":43}}},"4":{"name":"(anonymous_4)","line":89,"loc":{"start":{"line":89,"column":20},"end":{"line":89,"column":35}}},"5":{"name":"(anonymous_5)","line":105,"loc":{"start":{"line":105,"column":36},"end":{"line":105,"column":63}}},"6":{"name":"(anonymous_6)","line":112,"loc":{"start":{"line":112,"column":18},"end":{"line":112,"column":39}}},"7":{"name":"(anonymous_7)","line":123,"loc":{"start":{"line":123,"column":32},"end":{"line":123,"column":47}}},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":22},"end":{"line":133,"column":38}}},"9":{"name":"(anonymous_9)","line":134,"loc":{"start":{"line":134,"column":34},"end":{"line":134,"column":72}}}},"statementMap":{"1":{"start":{"line":40,"column":0},"end":{"line":40,"column":36}},"2":{"start":{"line":44,"column":0},"end":{"line":44,"column":38}},"3":{"start":{"line":51,"column":0},"end":{"line":53,"column":2}},"4":{"start":{"line":52,"column":2},"end":{"line":52,"column":34}},"5":{"start":{"line":55,"column":0},"end":{"line":55,"column":51}},"6":{"start":{"line":59,"column":0},"end":{"line":59,"column":16}},"7":{"start":{"line":60,"column":0},"end":{"line":60,"column":75}},"8":{"start":{"line":81,"column":0},"end":{"line":97,"column":2}},"9":{"start":{"line":82,"column":2},"end":{"line":82,"column":67}},"10":{"start":{"line":85,"column":2},"end":{"line":87,"column":5}},"11":{"start":{"line":86,"column":4},"end":{"line":86,"column":44}},"12":{"start":{"line":89,"column":2},"end":{"line":96,"column":5}},"13":{"start":{"line":90,"column":4},"end":{"line":93,"column":5}},"14":{"start":{"line":91,"column":6},"end":{"line":91,"column":25}},"15":{"start":{"line":92,"column":6},"end":{"line":92,"column":13}},"16":{"start":{"line":95,"column":4},"end":{"line":95,"column":32}},"17":{"start":{"line":101,"column":0},"end":{"line":101,"column":24}},"18":{"start":{"line":105,"column":0},"end":{"line":147,"column":2}},"19":{"start":{"line":106,"column":2},"end":{"line":107,"column":43}},"20":{"start":{"line":110,"column":2},"end":{"line":114,"column":16}},"21":{"start":{"line":113,"column":12},"end":{"line":113,"column":39}},"22":{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},"23":{"start":{"line":117,"column":4},"end":{"line":117,"column":11}},"24":{"start":{"line":121,"column":2},"end":{"line":129,"column":3}},"25":{"start":{"line":123,"column":4},"end":{"line":125,"column":7}},"26":{"start":{"line":124,"column":6},"end":{"line":124,"column":58}},"27":{"start":{"line":126,"column":4},"end":{"line":126,"column":35}},"28":{"start":{"line":128,"column":4},"end":{"line":128,"column":65}},"29":{"start":{"line":131,"column":2},"end":{"line":131,"column":25}},"30":{"start":{"line":133,"column":2},"end":{"line":144,"column":5}},"31":{"start":{"line":134,"column":4},"end":{"line":143,"column":7}},"32":{"start":{"line":135,"column":6},"end":{"line":142,"column":7}},"33":{"start":{"line":136,"column":8},"end":{"line":136,"column":50}},"34":{"start":{"line":139,"column":8},"end":{"line":139,"column":71}},"35":{"start":{"line":140,"column":8},"end":{"line":141,"column":50}},"36":{"start":{"line":146,"column":2},"end":{"line":146,"column":21}}},"branchMap":{"1":{"line":82,"type":"cond-expr","locations":[{"start":{"line":82,"column":41},"end":{"line":82,"column":50}},{"start":{"line":82,"column":53},"end":{"line":82,"column":66}}]},"2":{"line":86,"type":"cond-expr","locations":[{"start":{"line":86,"column":28},"end":{"line":86,"column":31}},{"start":{"line":86,"column":34},"end":{"line":86,"column":43}}]},"3":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"4":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"5":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]}},"code":["/**"," *  class MacroProcessor"," *"," *  `MacroProcessor` is simple and effective replacement for EJS, when user"," *  needs just embed constants into file. Macros content is replaced with"," *  evaluated value. You can use all mincer helpers (locals) in expression."," *"," *  ##### Example of use:"," *"," *  ```javascript"," *  var url = \"'$$ asset_path('/vendor/jquery') $$'\";"," *  var str = '\"$$ function () { var foo = my_super_helpers(5) + 23; return foo; } $$\"';"," *  var str = '$$ JSON.stringify(asset_path(\"/vendor/jquery\")) $$';"," *  ```"," *"," *  MacroProcessor processor is always on, but not assigned to any file"," *  extention. You can enable macros with `configure()` method."," *"," *  ##### Example of configure:"," *"," *  ```javascript"," *  var mincer = require('mincer');"," *"," *  // Enable for `.js` / `.css` / `.jade`"," *  mincer.Macro.configure(['.js', '.css', '.jade']);"," *"," *  // Enable for `.js` only"," *  mincer.Macro.configure('.js', true);"," *  ```"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","var format = require('util').format;","","","// internal","var Template = require('../template');","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var MacroProcessor = module.exports = function MacroProcessor() {","  Template.apply(this, arguments);","};","","require('util').inherits(MacroProcessor, Template);","","","// Internal (private) config storage","var config = {};","var DEFAULT_RULES = [ /'\\$\\$([^\\r\\n]+?)\\$\\$'/g, /\"\\$\\$([^\\r\\n]+?)\\$\\$\"/g ];","","/**"," *  MacroProcessor.configure(extention, enable) -> Void"," *  - extention (String|Array): extention or array of extentions to process"," *  - enable (Boolean): `false` - disable, `true` or undefined - enable"," *"," *  on / off macroses for specified extentions."," *"," *"," *  ##### Example"," *"," *  ```javascript"," *  // Enable for `.js` / `.css` / `.jade`"," *  MacroProcessor.configure(['.js', '.css', '.jade']);"," *  MacroProcessor.configure(['.js', '.css', '.jade'], true);"," *"," *  // Enable for `.js` only"," *  MacroProcessor.configure('.js', true);"," *  ```"," **/","MacroProcessor.configure = function (extention, enable) {","  extention = Array.isArray(extention) ? extention : [ extention ];","","  // normalize extention format ('js' -> '.js')","  extention = extention.map(function (ext) {","    return ext[0] === '.' ? ext : '.' + ext;","  });","","  extention.forEach(function (ext) {","    if (enable === false) {","      config[ext] = null;","      return;","    }","","    config[ext] = DEFAULT_RULES;","  });","};","","","// cache generated functions, to buid new one only if `locals` change.","var evaluatorCache = {};","","","// Replace macros","MacroProcessor.prototype.evaluate = function (context, locals) {","  var body = '', ext,","      key = Object.keys(locals).toString();","","  // search nearest extention, that has enabled macros rules","  ext = context.environment.attributesFor(context.pathname).extensions","          .reverse()","          .filter(function (extention) {","            return !!config[extention];","          })[0];","","  if (!ext) {","    return;","  }","","  // create evaluator wrapper","  if (!evaluatorCache.hasOwnProperty(key)) {","    // build function, that allow macro to access `local` keys by name directly.","    Object.keys(locals).forEach(function (key) {","      body += 'var ' + key + ' = __locals.' + key + ';\\n';","    });","    body += 'return eval(data);\\n';","    /*eslint-disable no-new-func*/","    evaluatorCache[key] = new Function('data', '__locals', body);","  }","","  var result = this.data;","","  config[ext].forEach(function (rule) {","    result = result.replace(rule, function (match, value, offset, orig) {","      try {","        return evaluatorCache[key](value, locals);","      } catch (e) {","        // Fill error message","        context.__LINE__ = orig.slice(0, offset).split(/\\r?\\n/).length;","        throw new Error(format('Failed to evaluate macro `%s` [%s]',","                        value.trim(), e.message));","      }","    });","  });","","  this.data = result;","};",""],"l":{"40":1,"44":1,"51":1,"52":0,"55":1,"59":1,"60":1,"81":1,"82":0,"85":0,"86":0,"89":0,"90":0,"91":0,"92":0,"95":0,"101":1,"105":1,"106":0,"110":0,"113":0,"116":0,"117":0,"121":0,"123":0,"124":0,"126":0,"128":0,"131":0,"133":0,"134":0,"135":0,"136":0,"139":0,"140":0,"146":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/compressors/csso_compressor.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/compressors/csso_compressor.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":0,"10":1},"b":{"1":[0,0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"CssoCompressor","line":31,"loc":{"start":{"line":31,"column":38},"end":{"line":31,"column":64}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":36},"end":{"line":41,"column":67}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":9}},"2":{"start":{"line":23,"column":0},"end":{"line":23,"column":38}},"3":{"start":{"line":24,"column":0},"end":{"line":24,"column":41}},"4":{"start":{"line":31,"column":0},"end":{"line":34,"column":2}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":34}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":55}},"7":{"start":{"line":37,"column":0},"end":{"line":37,"column":51}},"8":{"start":{"line":41,"column":0},"end":{"line":44,"column":2}},"9":{"start":{"line":43,"column":2},"end":{"line":43,"column":78}},"10":{"start":{"line":48,"column":0},"end":{"line":48,"column":52}}},"branchMap":{"1":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":9},"end":{"line":33,"column":13}},{"start":{"line":33,"column":17},"end":{"line":33,"column":35}},{"start":{"line":33,"column":39},"end":{"line":33,"column":54}}]},"2":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":28},"end":{"line":43,"column":50}},{"start":{"line":43,"column":53},"end":{"line":43,"column":77}}]}},"code":["/**"," *  class CssoCompressor"," *"," *  Engine for CSS minification. You will need `csso` Node module installed:"," *"," *      npm install csso"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// 3rd-party","var csso; // initialized later","","","// internal","var Template = require('../template');","var prop     = require('../common').prop;","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var CssoCompressor = module.exports = function CssoCompressor() {","  Template.apply(this, arguments);","  csso = csso || Template.libs.csso || require('csso');","};","","","require('util').inherits(CssoCompressor, Template);","","","// Compress data","CssoCompressor.prototype.evaluate = function (/*context, locals*/) {","  // CSSO 2.+ renamed .justDoIt() -> .minify()","  this.data = csso.minify ? csso.minify(this.data) : csso.justDoIt(this.data);","};","","","// Expose default MimeType of an engine","prop(CssoCompressor, 'defaultMimeType', 'text/css');",""],"l":{"19":1,"23":1,"24":1,"31":1,"32":0,"33":0,"37":1,"41":1,"43":0,"48":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/compressors/csswring_compressor.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/compressors/csswring_compressor.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,0,0],"2":[0,0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"CsswringCompressor","line":33,"loc":{"start":{"line":33,"column":42},"end":{"line":33,"column":72}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":40},"end":{"line":44,"column":71}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":20,"column":32}},"2":{"start":{"line":21,"column":0},"end":{"line":21,"column":22}},"3":{"start":{"line":25,"column":0},"end":{"line":25,"column":38}},"4":{"start":{"line":26,"column":0},"end":{"line":26,"column":41}},"5":{"start":{"line":33,"column":0},"end":{"line":37,"column":2}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":34}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":71}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":67}},"9":{"start":{"line":40,"column":0},"end":{"line":40,"column":55}},"10":{"start":{"line":44,"column":0},"end":{"line":74,"column":2}},"11":{"start":{"line":45,"column":2},"end":{"line":45,"column":21}},"12":{"start":{"line":47,"column":2},"end":{"line":54,"column":3}},"13":{"start":{"line":48,"column":4},"end":{"line":51,"column":6}},"14":{"start":{"line":52,"column":4},"end":{"line":52,"column":77}},"15":{"start":{"line":53,"column":4},"end":{"line":53,"column":11}},"16":{"start":{"line":57,"column":2},"end":{"line":57,"column":48}},"17":{"start":{"line":59,"column":2},"end":{"line":68,"column":4}},"18":{"start":{"line":70,"column":2},"end":{"line":70,"column":68}},"19":{"start":{"line":72,"column":2},"end":{"line":72,"column":36}},"20":{"start":{"line":73,"column":2},"end":{"line":73,"column":25}},"21":{"start":{"line":78,"column":0},"end":{"line":78,"column":56}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":13},"end":{"line":35,"column":21}},{"start":{"line":35,"column":25},"end":{"line":35,"column":47}},{"start":{"line":35,"column":51},"end":{"line":35,"column":70}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":19}},{"start":{"line":36,"column":23},"end":{"line":36,"column":44}},{"start":{"line":36,"column":48},"end":{"line":36,"column":66}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]}},"code":["/**"," *  class CsswringCompressor"," *"," *  Engine for CSS minification. Less powerful than CSSO, but with sourcemaps"," *  support. You will need `csswring` Node module installed:"," *"," *      npm install csswring"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// 3rd-party","var path      = require('path');","var csswring, postcss; // initialized later","","","// internal","var Template = require('../template');","var prop     = require('../common').prop;","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var CsswringCompressor = module.exports = function CsswringCompressor() {","  Template.apply(this, arguments);","  csswring = csswring || Template.libs.csswring || require('csswring');","  postcss = postcss || Template.libs.postcss || require('postcss');","};","","","require('util').inherits(CsswringCompressor, Template);","","","// Compress data","CsswringCompressor.prototype.evaluate = function (context/*, locals*/) {","  var config, result;","","  if (!context.environment.isEnabled('source_maps')) {","    config = {","      preserveHacks: true,","      removeAllComments: true","    };","    this.data = postcss([ csswring(config) ]).process(this.data, config).css;","    return;","  }","","  // Reset sourceRoot bebore process - we work with relative paths","  var map = context.createSourceMapObject(this);","","  config = {","    map: {","      prev:   map,","      inline: false","    },","    from: path.basename(context.pathname),","    to:   path.basename(context.pathname),","    preserveHacks: true,","    removeAllComments: true","  };","","  result = postcss([ csswring(config) ]).process(this.data, config);","","  this.map  = result.map.toString();","  this.data = result.css;","};","","","// Expose default MimeType of an engine","prop(CsswringCompressor, 'defaultMimeType', 'text/css');",""],"l":{"20":1,"21":1,"25":1,"26":1,"33":1,"34":0,"35":0,"36":0,"40":1,"44":1,"45":0,"47":0,"48":0,"52":0,"53":0,"57":0,"59":0,"70":0,"72":0,"73":0,"78":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/compressors/uglify_compressor.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/compressors/uglify_compressor.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"UglifyCompressor","line":33,"loc":{"start":{"line":33,"column":40},"end":{"line":33,"column":68}}},"2":{"name":"(anonymous_2)","line":65,"loc":{"start":{"line":65,"column":29},"end":{"line":65,"column":45}}},"3":{"name":"(anonymous_3)","line":71,"loc":{"start":{"line":71,"column":38},"end":{"line":71,"column":69}}},"4":{"name":"(anonymous_4)","line":91,"loc":{"start":{"line":91,"column":32},"end":{"line":91,"column":52}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":29}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":13}},"4":{"start":{"line":25,"column":0},"end":{"line":25,"column":38}},"5":{"start":{"line":26,"column":0},"end":{"line":26,"column":41}},"6":{"start":{"line":33,"column":0},"end":{"line":41,"column":2}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":34}},"8":{"start":{"line":35,"column":2},"end":{"line":35,"column":76}},"9":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":74}},"11":{"start":{"line":44,"column":0},"end":{"line":44,"column":53}},"12":{"start":{"line":48,"column":0},"end":{"line":48,"column":17}},"13":{"start":{"line":65,"column":0},"end":{"line":67,"column":2}},"14":{"start":{"line":66,"column":2},"end":{"line":66,"column":26}},"15":{"start":{"line":71,"column":0},"end":{"line":100,"column":2}},"16":{"start":{"line":72,"column":2},"end":{"line":73,"column":39}},"17":{"start":{"line":75,"column":2},"end":{"line":78,"column":3}},"18":{"start":{"line":76,"column":4},"end":{"line":76,"column":54}},"19":{"start":{"line":77,"column":4},"end":{"line":77,"column":11}},"20":{"start":{"line":83,"column":2},"end":{"line":83,"column":54}},"21":{"start":{"line":86,"column":2},"end":{"line":89,"column":5}},"22":{"start":{"line":91,"column":2},"end":{"line":93,"column":5}},"23":{"start":{"line":92,"column":4},"end":{"line":92,"column":77}},"24":{"start":{"line":95,"column":2},"end":{"line":95,"column":56}},"25":{"start":{"line":96,"column":2},"end":{"line":96,"column":44}},"26":{"start":{"line":98,"column":2},"end":{"line":98,"column":25}},"27":{"start":{"line":99,"column":2},"end":{"line":99,"column":26}},"28":{"start":{"line":104,"column":0},"end":{"line":104,"column":68}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":13},"end":{"line":35,"column":21}},{"start":{"line":35,"column":25},"end":{"line":35,"column":51}},{"start":{"line":35,"column":55},"end":{"line":35,"column":75}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"3":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]}},"code":["/**"," *  class UglifyCompressor"," *"," *  Engine for CSS minification. You will need `uglify-js` Node module installed:"," *"," *      npm install uglify-js"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// 3rd-party","var _    = require('lodash');","var path = require('path');","var UglifyJS; // initialized later","","","// internal","var Template = require('../template');","var prop     = require('../common').prop;","","","////////////////////////////////////////////////////////////////////////////////","","","// Class constructor","var UglifyCompressor = module.exports = function UglifyCompressor() {","  Template.apply(this, arguments);","  UglifyJS = UglifyJS || Template.libs['uglify-js'] || require('uglify-js');","","  // Ensure UglifyJS v2 API","  if (UglifyJS.parser) {","    throw new Error('UglifyJS v1 not supported, please upgrade library.');","  }","};","","","require('util').inherits(UglifyCompressor, Template);","","","// Internal (private) options storage","var options = {};","","","/**"," *  UglifyCompressor.configure(opts) -> Void"," *  - opts (Object):"," *"," *  Allows to set UglifyJS options."," *  See UglifyJS minify options for details."," *"," *  Default: `{}`."," *"," *"," *  ##### Example"," *"," *      UglifyCompressor.configure({mangle: false});"," **/","UglifyCompressor.configure = function (opts) {","  options = _.clone(opts);","};","","","// Compress data","UglifyCompressor.prototype.evaluate = function (context/*, locals*/) {","  var opts = _.merge(options, { fromString: true }),","      result, origSourceMap, sourceMap;","","  if (!context.environment.isEnabled('source_maps')) {","    this.data = UglifyJS.minify(this.data, opts).code;","    return;","  }","","  // Built-in 'UglifyJS.minify' miss sources from input sourcemap","  // (it expect src only from minified files)","  // We create custom source_map object, and push src files manually","  origSourceMap = context.createSourceMapObject(this);","","  /*eslint-disable new-cap*/","  sourceMap     = UglifyJS.SourceMap({","    file: path.basename(context.pathname),","    orig: origSourceMap","  });","","  origSourceMap.sources.forEach(function (src, idx) {","    sourceMap.get().setSourceContent(src, origSourceMap.sourcesContent[idx]);","  });","","  _.assign(opts, { output: { source_map: sourceMap } });","  result = UglifyJS.minify(this.data, opts);","","  this.map  = result.map;","  this.data = result.code;","};","","","// Expose default MimeType of an engine","prop(UglifyCompressor, 'defaultMimeType', 'application/javascript');",""],"l":{"19":1,"20":1,"21":1,"25":1,"26":1,"33":1,"34":0,"35":0,"38":0,"39":0,"44":1,"48":1,"65":1,"66":0,"71":1,"72":0,"75":0,"76":0,"77":0,"83":0,"86":0,"91":0,"92":0,"95":0,"96":0,"98":0,"99":0,"104":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/environment.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/environment.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":0,"25":2,"26":22,"27":2,"28":4,"29":2,"30":2,"31":1,"32":1,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":6,"44":1,"45":0},"b":{"1":[2,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":2,"2":0,"3":22,"4":4,"5":0,"6":0,"7":6,"8":0},"fnMap":{"1":{"name":"Environment","line":36,"loc":{"start":{"line":36,"column":35},"end":{"line":36,"column":62}}},"2":{"name":"(anonymous_2)","line":77,"loc":{"start":{"line":77,"column":26},"end":{"line":77,"column":42}}},"3":{"name":"(anonymous_3)","line":82,"loc":{"start":{"line":82,"column":31},"end":{"line":82,"column":53}}},"4":{"name":"(anonymous_4)","line":87,"loc":{"start":{"line":87,"column":38},"end":{"line":87,"column":59}}},"5":{"name":"(anonymous_5)","line":112,"loc":{"start":{"line":112,"column":39},"end":{"line":112,"column":51}}},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":34},"end":{"line":123,"column":59}}},"7":{"name":"(anonymous_7)","line":146,"loc":{"start":{"line":146,"column":36},"end":{"line":146,"column":48}}},"8":{"name":"(anonymous_8)","line":166,"loc":{"start":{"line":166,"column":39},"end":{"line":166,"column":51}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"3":{"start":{"line":22,"column":0},"end":{"line":22,"column":35}},"4":{"start":{"line":23,"column":0},"end":{"line":23,"column":32}},"5":{"start":{"line":24,"column":0},"end":{"line":24,"column":35}},"6":{"start":{"line":25,"column":0},"end":{"line":25,"column":33}},"7":{"start":{"line":26,"column":0},"end":{"line":26,"column":41}},"8":{"start":{"line":27,"column":0},"end":{"line":27,"column":39}},"9":{"start":{"line":36,"column":0},"end":{"line":97,"column":2}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":18}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":32}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":29}},"13":{"start":{"line":54,"column":2},"end":{"line":54,"column":56}},"14":{"start":{"line":64,"column":2},"end":{"line":64,"column":63}},"15":{"start":{"line":67,"column":2},"end":{"line":67,"column":61}},"16":{"start":{"line":68,"column":2},"end":{"line":68,"column":59}},"17":{"start":{"line":69,"column":2},"end":{"line":69,"column":66}},"18":{"start":{"line":70,"column":2},"end":{"line":70,"column":65}},"19":{"start":{"line":71,"column":2},"end":{"line":71,"column":66}},"20":{"start":{"line":72,"column":2},"end":{"line":72,"column":68}},"21":{"start":{"line":73,"column":2},"end":{"line":73,"column":63}},"22":{"start":{"line":74,"column":2},"end":{"line":74,"column":66}},"23":{"start":{"line":77,"column":2},"end":{"line":79,"column":11}},"24":{"start":{"line":78,"column":4},"end":{"line":78,"column":26}},"25":{"start":{"line":82,"column":2},"end":{"line":84,"column":11}},"26":{"start":{"line":83,"column":4},"end":{"line":83,"column":38}},"27":{"start":{"line":87,"column":2},"end":{"line":89,"column":11}},"28":{"start":{"line":88,"column":4},"end":{"line":88,"column":41}},"29":{"start":{"line":93,"column":2},"end":{"line":93,"column":51}},"30":{"start":{"line":96,"column":2},"end":{"line":96,"column":21}},"31":{"start":{"line":100,"column":0},"end":{"line":100,"column":44}},"32":{"start":{"line":112,"column":0},"end":{"line":114,"column":3}},"33":{"start":{"line":113,"column":2},"end":{"line":113,"column":25}},"34":{"start":{"line":123,"column":0},"end":{"line":138,"column":2}},"35":{"start":{"line":124,"column":2},"end":{"line":124,"column":12}},"36":{"start":{"line":126,"column":2},"end":{"line":126,"column":26}},"37":{"start":{"line":127,"column":2},"end":{"line":127,"column":85}},"38":{"start":{"line":130,"column":2},"end":{"line":130,"column":59}},"39":{"start":{"line":132,"column":2},"end":{"line":134,"column":3}},"40":{"start":{"line":133,"column":4},"end":{"line":133,"column":17}},"41":{"start":{"line":137,"column":2},"end":{"line":137,"column":45}},"42":{"start":{"line":146,"column":0},"end":{"line":148,"column":2}},"43":{"start":{"line":147,"column":2},"end":{"line":147,"column":23}},"44":{"start":{"line":166,"column":0},"end":{"line":168,"column":2}},"45":{"start":{"line":167,"column":2},"end":{"line":167,"column":58}}},"branchMap":{"1":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":47},"end":{"line":67,"column":51}},{"start":{"line":67,"column":55},"end":{"line":67,"column":58}}]},"2":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":12},"end":{"line":126,"column":19}},{"start":{"line":126,"column":23},"end":{"line":126,"column":25}}]},"3":{"line":127,"type":"cond-expr","locations":[{"start":{"line":127,"column":61},"end":{"line":127,"column":65}},{"start":{"line":127,"column":68},"end":{"line":127,"column":84}}]},"4":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"5":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":6},"end":{"line":132,"column":11}},{"start":{"line":132,"column":15},"end":{"line":132,"column":34}}]}},"code":["/**"," *  class Environment"," *"," *  The heart of `Mincer`. Stores registered paths, engines, processors, etc."," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Base]]"," **/","","","'use strict';","","","// 3rd-party","var _       = require('lodash');","var Hike    = require('hike');","","","// internal","var Mincer  = require('../mincer');","var Base    = require('./base');","var Context = require('./context');","var Index   = require('./index');","var getter  = require('./common').getter;","var prop    = require('./common').prop;","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  new Environment(root)"," **/","var Environment = module.exports = function Environment(root) {","  Base.call(this);","","  // set digestAlgorithm an environment version","  this.digestAlgorithm  = 'md5';","  this.version          = '';","","  /**","   *  Environment#ContextClass -> Context","   *","   *  Copy of [[Context]] class, that is safe for any mutations.","   *  Use it to provide your own helpers.","   *","   *","   *  ##### See Also","   *","   *  - [[Environment#registerHelper]]","   **/","  prop(this, 'ContextClass',          Context.subclass);","","  /**","   *  Environment#sourceRoot -> String","   *","   *  `sourceRoot` property for generated source maps.","   *  Can be used to beatify nesting level in dev tools.","   *","   *  Default: '/'.","   **/","  prop(this, 'sourceRoot',            '/', { writable: true });","","  // define internal properties","  prop(this, '__trail__',             new Hike(root || '.'));","  prop(this, '__engines__',           Mincer.getEngines());","  prop(this, '__mimeTypes__',         Mincer.registeredMimeTypes);","  prop(this, '__preProcessors__',     Mincer.getPreProcessors());","  prop(this, '__postProcessors__',    Mincer.getPostProcessors());","  prop(this, '__bundleProcessors__',  Mincer.getBundleProcessors());","  prop(this, '__compressors__',       Mincer.getCompressors());","  prop(this, '__configurations__',    Mincer.getConfigurations());","","  // append paths","  _.forEach(Mincer.paths, function (path) {","    this.appendPath(path);","  }, this);","","  // append default engines","  _.forEach(this.getEngines(), function (klass, ext) {","    this.addEngineToTrail(ext, klass);","  }, this);","","  // register default mimeType extensions","  _.forEach(this.__mimeTypes__.types, function (type, ext) {","    this.__trail__.appendExtensions(ext);","  }, this);","","","  // internal cache","  prop(this, '__assets__', {}, { writable: true });","","  // force drop cache","  this.expireIndex();","};","","","require('util').inherits(Environment, Base);","","","/**"," *  Environment#index -> Index"," *"," *  Returns a cached version of the environment."," *"," *  All its file system calls are cached which makes `index` much"," *  faster. This behavior is ideal in production since the file"," *  system only changes between deploys."," **/","getter(Environment.prototype, 'index', function () {","  return new Index(this);","});","","","/**"," *  Environment#findAsset(path[, options]) -> Asset"," *"," *  Proxies call to [[Index#findAsset]] of the one time [[Environment#index]]"," *  instance. [[Index#findAsset]] automatically pushes cache here."," **/","Environment.prototype.findAsset = function (path, options) {","  var asset;","","  options = options || {};","  options.bundle = (typeof options.bundle === 'undefined') ? true : !!options.bundle;","","  // Ensure inmemory cached assets are still fresh on every lookup","  asset = this.__assets__[this.cacheKeyFor(path, options)];","","  if (asset && asset.isFresh(this)) {","    return asset;","  }","","  // Cache is pushed upstream by Index#find_asset","  return this.index.findAsset(path, options);","};","","","/** internal"," *  Environment#expireIndex() -> Void"," *"," *  Reset assets internal cache."," **/","Environment.prototype.expireIndex = function () {","  this.__assets__ = {};","};","","","/**"," *  Environment#registerHelper(name, func) -> Void"," *  Environment#registerHelper(helpers) -> Void"," *"," *  Proxy to [[Context.registerHelper]] of current [[Environment#ContextClass]]."," *"," *"," *  ##### Example"," *"," *      env.registerHelper('foo', function () {});"," *"," *      // shorthand syntax of"," *"," *      env.ContextClass.registerHelper('foo', function () {});"," **/","Environment.prototype.registerHelper = function () {","  this.ContextClass.registerHelper.apply(null, arguments);","};",""],"l":{"17":1,"18":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"36":1,"37":2,"40":2,"41":2,"54":2,"64":2,"67":2,"68":2,"69":2,"70":2,"71":2,"72":2,"73":2,"74":2,"77":2,"78":0,"82":2,"83":22,"87":2,"88":4,"93":2,"96":2,"100":1,"112":1,"113":0,"123":1,"124":0,"126":0,"127":0,"130":0,"132":0,"133":0,"137":0,"146":1,"147":6,"166":1,"167":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/base.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/base.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":3,"24":3,"25":3,"26":0,"27":4,"28":4,"29":1,"30":1,"31":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":1,"38":11,"39":11,"40":0,"41":0,"42":0,"43":0,"44":1,"45":1,"46":1,"47":1,"48":0,"49":1,"50":0,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":1,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":1,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":1,"160":1,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0]},"f":{"1":2,"2":3,"3":0,"4":4,"5":0,"6":11,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"fnMap":{"1":{"name":"Base","line":47,"loc":{"start":{"line":47,"column":28},"end":{"line":47,"column":44}}},"2":{"name":"attr_with_expire_index","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":45}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":9},"end":{"line":69,"column":21}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":9},"end":{"line":72,"column":24}}},"5":{"name":"(anonymous_5)","line":125,"loc":{"start":{"line":125,"column":33},"end":{"line":125,"column":45}}},"6":{"name":"func_proxy_with_expire_index","line":140,"loc":{"start":{"line":140,"column":0},"end":{"line":140,"column":50}}},"7":{"name":"(anonymous_7)","line":143,"loc":{"start":{"line":143,"column":25},"end":{"line":143,"column":37}}},"8":{"name":"(anonymous_8)","line":165,"loc":{"start":{"line":165,"column":49},"end":{"line":165,"column":74}}},"9":{"name":"(anonymous_9)","line":173,"loc":{"start":{"line":173,"column":47},"end":{"line":173,"column":69}}},"10":{"name":"(anonymous_10)","line":203,"loc":{"start":{"line":203,"column":25},"end":{"line":203,"column":61}}},"11":{"name":"(anonymous_11)","line":208,"loc":{"start":{"line":208,"column":48},"end":{"line":208,"column":68}}},"12":{"name":"(anonymous_12)","line":224,"loc":{"start":{"line":224,"column":30},"end":{"line":224,"column":50}}},"13":{"name":"(anonymous_13)","line":235,"loc":{"start":{"line":235,"column":48},"end":{"line":235,"column":68}}},"14":{"name":"(anonymous_14)","line":256,"loc":{"start":{"line":256,"column":25},"end":{"line":256,"column":45}}},"15":{"name":"(anonymous_15)","line":268,"loc":{"start":{"line":268,"column":22},"end":{"line":268,"column":42}}},"16":{"name":"(anonymous_16)","line":280,"loc":{"start":{"line":280,"column":31},"end":{"line":280,"column":51}}},"17":{"name":"(anonymous_17)","line":299,"loc":{"start":{"line":299,"column":31},"end":{"line":299,"column":51}}},"18":{"name":"(anonymous_18)","line":310,"loc":{"start":{"line":310,"column":31},"end":{"line":310,"column":51}}},"19":{"name":"(anonymous_19)","line":322,"loc":{"start":{"line":322,"column":27},"end":{"line":322,"column":56}}},"20":{"name":"(anonymous_20)","line":367,"loc":{"start":{"line":367,"column":27},"end":{"line":367,"column":53}}},"21":{"name":"(anonymous_21)","line":370,"loc":{"start":{"line":370,"column":29},"end":{"line":370,"column":49}}},"22":{"name":"(anonymous_22)","line":384,"loc":{"start":{"line":384,"column":31},"end":{"line":384,"column":50}}},"23":{"name":"(anonymous_23)","line":400,"loc":{"start":{"line":400,"column":26},"end":{"line":400,"column":46}}},"24":{"name":"(anonymous_24)","line":403,"loc":{"start":{"line":403,"column":21},"end":{"line":403,"column":37}}},"25":{"name":"(anonymous_25)","line":404,"loc":{"start":{"line":404,"column":25},"end":{"line":404,"column":45}}},"26":{"name":"matches_filter","line":414,"loc":{"start":{"line":414,"column":0},"end":{"line":414,"column":56}}},"27":{"name":"(anonymous_27)","line":419,"loc":{"start":{"line":419,"column":25},"end":{"line":419,"column":43}}},"28":{"name":"(anonymous_28)","line":430,"loc":{"start":{"line":430,"column":61},"end":{"line":430,"column":74}}},"29":{"name":"logical_path_for_filename","line":455,"loc":{"start":{"line":455,"column":0},"end":{"line":455,"column":60}}},"30":{"name":"(anonymous_30)","line":482,"loc":{"start":{"line":482,"column":33},"end":{"line":482,"column":62}}},"31":{"name":"(anonymous_31)","line":485,"loc":{"start":{"line":485,"column":16},"end":{"line":485,"column":36}}},"32":{"name":"circular_call_protection","line":501,"loc":{"start":{"line":501,"column":0},"end":{"line":501,"column":54}}},"33":{"name":"(anonymous_33)","line":522,"loc":{"start":{"line":522,"column":28},"end":{"line":522,"column":70}}},"34":{"name":"(anonymous_34)","line":538,"loc":{"start":{"line":538,"column":44},"end":{"line":538,"column":56}}},"35":{"name":"(anonymous_35)","line":545,"loc":{"start":{"line":545,"column":29},"end":{"line":545,"column":58}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}},"2":{"start":{"line":21,"column":0},"end":{"line":21,"column":30}},"3":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}},"4":{"start":{"line":26,"column":0},"end":{"line":26,"column":26}},"5":{"start":{"line":30,"column":0},"end":{"line":30,"column":49}},"6":{"start":{"line":31,"column":0},"end":{"line":31,"column":47}},"7":{"start":{"line":32,"column":0},"end":{"line":32,"column":48}},"8":{"start":{"line":33,"column":0},"end":{"line":33,"column":53}},"9":{"start":{"line":34,"column":0},"end":{"line":34,"column":43}},"10":{"start":{"line":35,"column":0},"end":{"line":35,"column":52}},"11":{"start":{"line":36,"column":0},"end":{"line":36,"column":49}},"12":{"start":{"line":37,"column":0},"end":{"line":37,"column":52}},"13":{"start":{"line":38,"column":0},"end":{"line":38,"column":50}},"14":{"start":{"line":47,"column":0},"end":{"line":47,"column":47}},"15":{"start":{"line":50,"column":0},"end":{"line":50,"column":50}},"16":{"start":{"line":51,"column":0},"end":{"line":51,"column":49}},"17":{"start":{"line":52,"column":0},"end":{"line":52,"column":52}},"18":{"start":{"line":53,"column":0},"end":{"line":53,"column":55}},"19":{"start":{"line":54,"column":0},"end":{"line":54,"column":56}},"20":{"start":{"line":55,"column":0},"end":{"line":55,"column":56}},"21":{"start":{"line":56,"column":0},"end":{"line":56,"column":52}},"22":{"start":{"line":61,"column":0},"end":{"line":77,"column":1}},"23":{"start":{"line":62,"column":2},"end":{"line":62,"column":36}},"24":{"start":{"line":65,"column":2},"end":{"line":65,"column":60}},"25":{"start":{"line":68,"column":2},"end":{"line":76,"column":5}},"26":{"start":{"line":70,"column":6},"end":{"line":70,"column":28}},"27":{"start":{"line":73,"column":6},"end":{"line":73,"column":25}},"28":{"start":{"line":74,"column":6},"end":{"line":74,"column":27}},"29":{"start":{"line":87,"column":0},"end":{"line":87,"column":38}},"30":{"start":{"line":98,"column":0},"end":{"line":98,"column":49}},"31":{"start":{"line":108,"column":0},"end":{"line":108,"column":38}},"32":{"start":{"line":125,"column":0},"end":{"line":135,"column":3}},"33":{"start":{"line":127,"column":2},"end":{"line":127,"column":55}},"34":{"start":{"line":131,"column":2},"end":{"line":131,"column":38}},"35":{"start":{"line":132,"column":2},"end":{"line":132,"column":38}},"36":{"start":{"line":134,"column":2},"end":{"line":134,"column":16}},"37":{"start":{"line":140,"column":0},"end":{"line":150,"column":1}},"38":{"start":{"line":141,"column":2},"end":{"line":141,"column":34}},"39":{"start":{"line":143,"column":2},"end":{"line":149,"column":4}},"40":{"start":{"line":144,"column":4},"end":{"line":144,"column":23}},"41":{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},"42":{"start":{"line":146,"column":6},"end":{"line":146,"column":34}},"43":{"start":{"line":148,"column":4},"end":{"line":148,"column":32}},"44":{"start":{"line":157,"column":0},"end":{"line":157,"column":44}},"45":{"start":{"line":158,"column":0},"end":{"line":158,"column":43}},"46":{"start":{"line":159,"column":0},"end":{"line":159,"column":43}},"47":{"start":{"line":165,"column":0},"end":{"line":167,"column":3}},"48":{"start":{"line":166,"column":2},"end":{"line":166,"column":39}},"49":{"start":{"line":173,"column":0},"end":{"line":175,"column":3}},"50":{"start":{"line":174,"column":2},"end":{"line":174,"column":36}},"51":{"start":{"line":181,"column":0},"end":{"line":181,"column":53}},"52":{"start":{"line":182,"column":0},"end":{"line":182,"column":54}},"53":{"start":{"line":183,"column":0},"end":{"line":183,"column":56}},"54":{"start":{"line":184,"column":0},"end":{"line":184,"column":55}},"55":{"start":{"line":185,"column":0},"end":{"line":185,"column":56}},"56":{"start":{"line":186,"column":0},"end":{"line":186,"column":58}},"57":{"start":{"line":203,"column":0},"end":{"line":246,"column":2}},"58":{"start":{"line":204,"column":2},"end":{"line":204,"column":28}},"59":{"start":{"line":206,"column":2},"end":{"line":233,"column":3}},"60":{"start":{"line":207,"column":4},"end":{"line":207,"column":57}},"61":{"start":{"line":208,"column":4},"end":{"line":232,"column":7}},"62":{"start":{"line":209,"column":6},"end":{"line":209,"column":25}},"63":{"start":{"line":211,"column":6},"end":{"line":213,"column":7}},"64":{"start":{"line":212,"column":8},"end":{"line":212,"column":28}},"65":{"start":{"line":215,"column":6},"end":{"line":215,"column":32}},"66":{"start":{"line":217,"column":6},"end":{"line":219,"column":7}},"67":{"start":{"line":218,"column":8},"end":{"line":218,"column":65}},"68":{"start":{"line":221,"column":6},"end":{"line":229,"column":7}},"69":{"start":{"line":222,"column":8},"end":{"line":222,"column":44}},"70":{"start":{"line":224,"column":8},"end":{"line":228,"column":11}},"71":{"start":{"line":225,"column":10},"end":{"line":227,"column":11}},"72":{"start":{"line":226,"column":12},"end":{"line":226,"column":67}},"73":{"start":{"line":231,"column":6},"end":{"line":231,"column":18}},"74":{"start":{"line":235,"column":2},"end":{"line":237,"column":5}},"75":{"start":{"line":236,"column":4},"end":{"line":236,"column":20}},"76":{"start":{"line":239,"column":2},"end":{"line":243,"column":3}},"77":{"start":{"line":240,"column":4},"end":{"line":240,"column":67}},"78":{"start":{"line":241,"column":4},"end":{"line":241,"column":30}},"79":{"start":{"line":242,"column":4},"end":{"line":242,"column":14}},"80":{"start":{"line":245,"column":2},"end":{"line":245,"column":18}},"81":{"start":{"line":256,"column":0},"end":{"line":258,"column":2}},"82":{"start":{"line":257,"column":2},"end":{"line":257,"column":42}},"83":{"start":{"line":268,"column":0},"end":{"line":270,"column":2}},"84":{"start":{"line":269,"column":2},"end":{"line":269,"column":39}},"85":{"start":{"line":280,"column":0},"end":{"line":290,"column":2}},"86":{"start":{"line":281,"column":2},"end":{"line":281,"column":33}},"87":{"start":{"line":283,"column":2},"end":{"line":286,"column":3}},"88":{"start":{"line":285,"column":4},"end":{"line":285,"column":78}},"89":{"start":{"line":289,"column":2},"end":{"line":289,"column":69}},"90":{"start":{"line":299,"column":0},"end":{"line":301,"column":2}},"91":{"start":{"line":300,"column":2},"end":{"line":300,"column":45}},"92":{"start":{"line":310,"column":0},"end":{"line":312,"column":2}},"93":{"start":{"line":311,"column":2},"end":{"line":311,"column":50}},"94":{"start":{"line":322,"column":0},"end":{"line":349,"column":2}},"95":{"start":{"line":323,"column":2},"end":{"line":323,"column":45}},"96":{"start":{"line":325,"column":2},"end":{"line":346,"column":3}},"97":{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},"98":{"start":{"line":327,"column":6},"end":{"line":327,"column":18}},"99":{"start":{"line":330,"column":4},"end":{"line":330,"column":60}},"100":{"start":{"line":332,"column":4},"end":{"line":345,"column":5}},"101":{"start":{"line":333,"column":6},"end":{"line":333,"column":44}},"102":{"start":{"line":335,"column":6},"end":{"line":338,"column":7}},"103":{"start":{"line":336,"column":8},"end":{"line":336,"column":65}},"104":{"start":{"line":337,"column":8},"end":{"line":337,"column":52}},"105":{"start":{"line":340,"column":6},"end":{"line":342,"column":7}},"106":{"start":{"line":341,"column":8},"end":{"line":341,"column":20}},"107":{"start":{"line":344,"column":6},"end":{"line":344,"column":16}},"108":{"start":{"line":348,"column":2},"end":{"line":348,"column":58}},"109":{"start":{"line":367,"column":0},"end":{"line":391,"column":2}},"110":{"start":{"line":368,"column":2},"end":{"line":368,"column":30}},"111":{"start":{"line":370,"column":2},"end":{"line":388,"column":5}},"112":{"start":{"line":371,"column":4},"end":{"line":372,"column":40}},"113":{"start":{"line":374,"column":4},"end":{"line":379,"column":5}},"114":{"start":{"line":378,"column":6},"end":{"line":378,"column":13}},"115":{"start":{"line":381,"column":4},"end":{"line":381,"column":25}},"116":{"start":{"line":383,"column":4},"end":{"line":387,"column":5}},"117":{"start":{"line":384,"column":6},"end":{"line":386,"column":9}},"118":{"start":{"line":385,"column":8},"end":{"line":385,"column":28}},"119":{"start":{"line":390,"column":2},"end":{"line":390,"column":33}},"120":{"start":{"line":400,"column":0},"end":{"line":410,"column":2}},"121":{"start":{"line":401,"column":2},"end":{"line":401,"column":18}},"122":{"start":{"line":403,"column":2},"end":{"line":409,"column":5}},"123":{"start":{"line":404,"column":4},"end":{"line":408,"column":7}},"124":{"start":{"line":405,"column":6},"end":{"line":407,"column":7}},"125":{"start":{"line":406,"column":8},"end":{"line":406,"column":27}},"126":{"start":{"line":414,"column":0},"end":{"line":451,"column":1}},"127":{"start":{"line":415,"column":2},"end":{"line":417,"column":3}},"128":{"start":{"line":416,"column":4},"end":{"line":416,"column":16}},"129":{"start":{"line":419,"column":2},"end":{"line":450,"column":5}},"130":{"start":{"line":420,"column":4},"end":{"line":422,"column":5}},"131":{"start":{"line":421,"column":6},"end":{"line":421,"column":38}},"132":{"start":{"line":424,"column":4},"end":{"line":426,"column":5}},"133":{"start":{"line":425,"column":6},"end":{"line":425,"column":43}},"134":{"start":{"line":430,"column":4},"end":{"line":445,"column":7}},"135":{"start":{"line":431,"column":6},"end":{"line":433,"column":7}},"136":{"start":{"line":432,"column":8},"end":{"line":432,"column":45}},"137":{"start":{"line":435,"column":6},"end":{"line":437,"column":7}},"138":{"start":{"line":436,"column":8},"end":{"line":436,"column":23}},"139":{"start":{"line":439,"column":6},"end":{"line":441,"column":7}},"140":{"start":{"line":440,"column":8},"end":{"line":440,"column":21}},"141":{"start":{"line":444,"column":6},"end":{"line":444,"column":15}},"142":{"start":{"line":448,"column":4},"end":{"line":448,"column":44}},"143":{"start":{"line":449,"column":4},"end":{"line":449,"column":36}},"144":{"start":{"line":455,"column":0},"end":{"line":469,"column":1}},"145":{"start":{"line":456,"column":2},"end":{"line":456,"column":62}},"146":{"start":{"line":458,"column":2},"end":{"line":460,"column":3}},"147":{"start":{"line":459,"column":4},"end":{"line":459,"column":24}},"148":{"start":{"line":463,"column":2},"end":{"line":468,"column":3}},"149":{"start":{"line":464,"column":4},"end":{"line":464,"column":58}},"150":{"start":{"line":465,"column":4},"end":{"line":467,"column":5}},"151":{"start":{"line":466,"column":6},"end":{"line":466,"column":26}},"152":{"start":{"line":482,"column":0},"end":{"line":492,"column":2}},"153":{"start":{"line":483,"column":2},"end":{"line":483,"column":30}},"154":{"start":{"line":485,"column":2},"end":{"line":491,"column":5}},"155":{"start":{"line":486,"column":4},"end":{"line":486,"column":74}},"156":{"start":{"line":487,"column":4},"end":{"line":490,"column":5}},"157":{"start":{"line":488,"column":6},"end":{"line":488,"column":39}},"158":{"start":{"line":489,"column":6},"end":{"line":489,"column":33}},"159":{"start":{"line":498,"column":0},"end":{"line":498,"column":26}},"160":{"start":{"line":501,"column":0},"end":{"line":518,"column":1}},"161":{"start":{"line":502,"column":2},"end":{"line":503,"column":54}},"162":{"start":{"line":505,"column":2},"end":{"line":517,"column":3}},"163":{"start":{"line":506,"column":4},"end":{"line":509,"column":5}},"164":{"start":{"line":507,"column":6},"end":{"line":508,"column":52}},"165":{"start":{"line":511,"column":4},"end":{"line":511,"column":25}},"166":{"start":{"line":512,"column":4},"end":{"line":512,"column":22}},"167":{"start":{"line":514,"column":4},"end":{"line":516,"column":5}},"168":{"start":{"line":515,"column":6},"end":{"line":515,"column":28}},"169":{"start":{"line":522,"column":0},"end":{"line":541,"column":2}},"170":{"start":{"line":523,"column":2},"end":{"line":523,"column":18}},"171":{"start":{"line":525,"column":2},"end":{"line":525,"column":26}},"172":{"start":{"line":530,"column":2},"end":{"line":532,"column":3}},"173":{"start":{"line":531,"column":4},"end":{"line":531,"column":62}},"174":{"start":{"line":534,"column":2},"end":{"line":536,"column":3}},"175":{"start":{"line":535,"column":4},"end":{"line":535,"column":63}},"176":{"start":{"line":538,"column":2},"end":{"line":540,"column":5}},"177":{"start":{"line":539,"column":4},"end":{"line":539,"column":65}},"178":{"start":{"line":545,"column":0},"end":{"line":547,"column":2}},"179":{"start":{"line":546,"column":2},"end":{"line":546,"column":51}}},"branchMap":{"1":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"2":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"3":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":6},"end":{"line":211,"column":6}},{"start":{"line":211,"column":6},"end":{"line":211,"column":6}}]},"4":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":6},"end":{"line":217,"column":6}},{"start":{"line":217,"column":6},"end":{"line":217,"column":6}}]},"5":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":6},"end":{"line":221,"column":6}},{"start":{"line":221,"column":6},"end":{"line":221,"column":6}}]},"6":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":10},"end":{"line":225,"column":10}},{"start":{"line":225,"column":10},"end":{"line":225,"column":10}}]},"7":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":14},"end":{"line":225,"column":28}},{"start":{"line":225,"column":32},"end":{"line":225,"column":66}}]},"8":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":2},"end":{"line":239,"column":2}},{"start":{"line":239,"column":2},"end":{"line":239,"column":2}}]},"9":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":2},"end":{"line":283,"column":2}},{"start":{"line":283,"column":2},"end":{"line":283,"column":2}}]},"10":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":6},"end":{"line":283,"column":10}},{"start":{"line":283,"column":14},"end":{"line":283,"column":32}}]},"11":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":2},"end":{"line":325,"column":2}},{"start":{"line":325,"column":2},"end":{"line":325,"column":2}}]},"12":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":4},"end":{"line":326,"column":4}},{"start":{"line":326,"column":4},"end":{"line":326,"column":4}}]},"13":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":6},"end":{"line":335,"column":6}},{"start":{"line":335,"column":6},"end":{"line":335,"column":6}}]},"14":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":6},"end":{"line":340,"column":6}},{"start":{"line":340,"column":6},"end":{"line":340,"column":6}}]},"15":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":4},"end":{"line":374,"column":4}},{"start":{"line":374,"column":4},"end":{"line":374,"column":4}}]},"16":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":4},"end":{"line":383,"column":4}},{"start":{"line":383,"column":4},"end":{"line":383,"column":4}}]},"17":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":6},"end":{"line":405,"column":6}},{"start":{"line":405,"column":6},"end":{"line":405,"column":6}}]},"18":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":2},"end":{"line":415,"column":2}},{"start":{"line":415,"column":2},"end":{"line":415,"column":2}}]},"19":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":4},"end":{"line":420,"column":4}},{"start":{"line":420,"column":4},"end":{"line":420,"column":4}}]},"20":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":4},"end":{"line":424,"column":4}},{"start":{"line":424,"column":4},"end":{"line":424,"column":4}}]},"21":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":6},"end":{"line":431,"column":6}},{"start":{"line":431,"column":6},"end":{"line":431,"column":6}}]},"22":{"line":432,"type":"cond-expr","locations":[{"start":{"line":432,"column":28},"end":{"line":432,"column":33}},{"start":{"line":432,"column":36},"end":{"line":432,"column":44}}]},"23":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":6},"end":{"line":435,"column":6}},{"start":{"line":435,"column":6},"end":{"line":435,"column":6}}]},"24":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":6},"end":{"line":439,"column":6}},{"start":{"line":439,"column":6},"end":{"line":439,"column":6}}]},"25":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":2},"end":{"line":458,"column":2}},{"start":{"line":458,"column":2},"end":{"line":458,"column":2}}]},"26":{"line":463,"type":"if","locations":[{"start":{"line":463,"column":2},"end":{"line":463,"column":2}},{"start":{"line":463,"column":2},"end":{"line":463,"column":2}}]},"27":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":4},"end":{"line":465,"column":4}},{"start":{"line":465,"column":4},"end":{"line":465,"column":4}}]},"28":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":4},"end":{"line":487,"column":4}},{"start":{"line":487,"column":4},"end":{"line":487,"column":4}}]},"29":{"line":487,"type":"binary-expr","locations":[{"start":{"line":487,"column":8},"end":{"line":487,"column":20}},{"start":{"line":487,"column":24},"end":{"line":487,"column":44}}]},"30":{"line":503,"type":"binary-expr","locations":[{"start":{"line":503,"column":14},"end":{"line":503,"column":28}},{"start":{"line":503,"column":33},"end":{"line":503,"column":52}}]},"31":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":4},"end":{"line":506,"column":4}},{"start":{"line":506,"column":4},"end":{"line":506,"column":4}}]},"32":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":4},"end":{"line":514,"column":4}},{"start":{"line":514,"column":4},"end":{"line":514,"column":4}}]},"33":{"line":525,"type":"binary-expr","locations":[{"start":{"line":525,"column":12},"end":{"line":525,"column":19}},{"start":{"line":525,"column":23},"end":{"line":525,"column":25}}]},"34":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":2},"end":{"line":530,"column":2}},{"start":{"line":530,"column":2},"end":{"line":530,"column":2}}]},"35":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":2},"end":{"line":534,"column":2}},{"start":{"line":534,"column":2},"end":{"line":534,"column":2}}]},"36":{"line":546,"type":"cond-expr","locations":[{"start":{"line":546,"column":44},"end":{"line":546,"column":45}},{"start":{"line":546,"column":48},"end":{"line":546,"column":49}}]}},"code":["/** internal"," *  class Base"," *"," *  Base class for [[Environment]] and [[Index]]."," *"," *"," *  ##### INCLUDES"," *"," *  - [[Engines]]"," *  - [[Mime]]"," *  - [[Processing]]"," *  - [[Paths]]"," **/","","","'use strict';","","","// stdlib","var fs      = require('fs');","var path    = require('path');","var crypto  = require('crypto');","","","// 3rd-party","var _ = require('lodash');","","","// internal","var getter          = require('./common').getter;","var prop            = require('./common').prop;","var mixin           = require('./common').mixin;","var isAbsolute      = require('./common').isAbsolute;","var VERSION         = require('./version');","var AssetAttributes = require('./asset_attributes');","var StaticAsset     = require('./assets/static');","var ProcessedAsset  = require('./assets/processed');","var BundledAsset    = require('./assets/bundled');","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  new Base()"," **/","var Base = module.exports = function Base() {};","","","mixin(Base.prototype, require('./helpers/paths'));","mixin(Base.prototype, require('./helpers/mime'));","mixin(Base.prototype, require('./helpers/caching'));","mixin(Base.prototype, require('./helpers/processing'));","mixin(Base.prototype, require('./helpers/compressing'));","mixin(Base.prototype, require('./helpers/configuring'));","mixin(Base.prototype, require('./helpers/engines'));","","","// helper that defines property which fires expireIndex()","// each time it gets changed","function attr_with_expire_index(name, value) {","  var __name__ = '__' + name + '__';","","  // set underlying value","  prop(Base.prototype, __name__, value, { writable: true });","","  // provide getters/setter","  Object.defineProperty(Base.prototype, name, {","    get: function () {","      return this[__name__];","    },","    set: function (val) {","      this.expireIndex();","      this[__name__] = val;","    }","  });","}","","","/**"," *  Base#cache -> Mixed"," *"," *  Cache backend."," *"," *  Default: `null`."," **/","attr_with_expire_index('cache', null);","","","/**"," *  Base#digestAlgorithm -> String"," *"," *  Digest algorithm: `sha1` or `md5`."," *  See Node manual on `crypto` module."," *"," *  Default: `md5`."," **/","attr_with_expire_index('digestAlgorithm', 'md5');","","","/**"," *  Base#version -> String"," *"," *  Environment version."," *"," *      environment.version = '2.0'"," **/","attr_with_expire_index('version', '');","","","/**"," *  Base#digest -> crypto.Hash"," *"," *  Returns a `crypto.Hash` instance for the `Environment`."," *"," *  This value serves two purposes. If two `Environment`s have the"," *  same digest value they can be treated as equal. This is more"," *  useful for comparing environment states between processes rather"," *  than in the same. Two equal `Environment`s can share the same"," *  cached assets."," *"," *  The value also provides a seed digest for all `Asset` digests."," *  Any change in the environment digest will affect all of its assets."," **/","getter(Base.prototype, 'digest', function () {","  // Do not cache, so the caller can safely mutate it with `.update`","  var digest = crypto.createHash(this.digestAlgorithm);","","  // Mixin Mincer release version and custom environment version.","  // So any new releases will affect all your assets.","  digest.update(VERSION,      'utf8');","  digest.update(this.version, 'utf8');","","  return digest;","});","","","// helper that overrides defined method `name` with wrapper that expireIndex()","// and calls `func` when provided before calling original method","function func_proxy_with_expire_index(name, func) {","  var orig = Base.prototype[name];","","  Base.prototype[name] = function () {","    this.expireIndex();","    if (func) {","      func.apply(this, arguments);","    }","    orig.apply(this, arguments);","  };","}","","","//","// override [[Paths]] mixin methods","//","","func_proxy_with_expire_index('prependPath');","func_proxy_with_expire_index('appendPath');","func_proxy_with_expire_index('clearPaths');","","//","// override [[Mime]] mixin methods","//","","func_proxy_with_expire_index('registerMimeType', function (mimeType, ext) {","  this.__trail__.appendExtensions(ext);","});","","//","// override [[Engines]] mixin methods","//","","func_proxy_with_expire_index('registerEngine', function (ext, klass) {","  this.addEngineToTrail(ext, klass);","});","","//","// override [[Processing]] mixin methods","//","","func_proxy_with_expire_index('registerPreprocessor');","func_proxy_with_expire_index('registerPostprocessor');","func_proxy_with_expire_index('registerBundleProcessor');","func_proxy_with_expire_index('unregisterPreprocessor');","func_proxy_with_expire_index('unregisterPostprocessor');","func_proxy_with_expire_index('unregisterBundleProcessor');","","","/**"," *  Base#resolve(logicalPath[, options = {}[, fn]]) -> String"," *  - logicalPath (String)"," *  - options (Object)"," *  - fn (Function)"," *"," *  Finds the expanded real path for a given logical path by"," *  searching the environment's paths."," *"," *      env.resolve(\"application.js\")"," *      # => \"/path/to/app/javascripts/application.js.coffee\""," *"," *  An Error with `code = 'FileNotFound'` is raised if the file does not exist."," **/","Base.prototype.resolve = function (logicalPath, options, fn) {","  var err, resolved, search;","","  if (fn) {","    search = this.attributesFor(logicalPath).searchPaths;","    return this.__trail__.find(search, options, function (pathname) {","      var bower, extname;","","      if (!_.contains([ 'component.json', 'bower.json' ], path.basename(pathname))) {","        return fn(pathname);","      }","","      bower = require(pathname);","","      if (_.isString(bower.main)) {","        return fn(path.join(path.dirname(pathname), bower.main));","      }","","      if (_.isArray(bower.main)) {","        extname = path.extname(logicalPath);","","        _.forEach(bower.main, function (mainfile) {","          if (extname === '' || extname === path.extname(mainfile)) {","            return fn(path.join(path.dirname(pathname), mainfile));","          }","        });","      }","","      return null;","    });","  }","","  resolved = this.resolve(logicalPath, options, function (pathname) {","    return pathname;","  });","","  if (!resolved) {","    err = new Error('Could not find file \\'' + logicalPath + '\\'');","    err.code = 'FileNotFound';","    throw err;","  }","","  return resolved;","};","","","/**"," *  Base#entries(pathname) -> Array"," *  - pathname (String)"," *"," *  Proxy to `Hike.Trail#entries`. Works like `fs.readdirSync`."," *  Subclasses may cache this method."," **/","Base.prototype.entries = function (pathname) {","  return this.__trail__.entries(pathname);","};","","","/**"," *  Base#stat(pathname) -> fs.Stats"," *  - pathname (String)"," *"," *  Proxy to `Hike.Trail#stat`. Works like `fs.statSync`."," *  Subclasses may cache this method."," **/","Base.prototype.stat = function (pathname) {","  return this.__trail__.stat(pathname);","};","","","/**"," *  Base#getFileDigest(pathname) -> String"," *  - pathname (String)"," *"," *  Read and compute digest of filename."," *  Subclasses may cache this method."," **/","Base.prototype.getFileDigest = function (pathname) {","  var stat = this.stat(pathname);","","  if (stat && stat.isDirectory()) {","    // If directory, digest the list of filenames","    return this.digest.update(this.entries(pathname).join(',')).digest('hex');","  }","","  // If file, digest the contents","  return this.digest.update(fs.readFileSync(pathname)).digest('hex');","};","","","/** internal"," *  Base#attributesFor(pathname) -> AssetAttributes"," *  - pathname (String)"," *"," *  Returns a `AssetAttributes` for `pathname`"," **/","Base.prototype.attributesFor = function (pathname) {","  return new AssetAttributes(this, pathname);","};","","","/** internal"," *  Base#contentTypeOf(pathname) -> String"," *  - pathname (String)"," *"," *  Returns content type of `pathname`"," **/","Base.prototype.contentTypeOf = function (pathname) {","  return this.attributesFor(pathname).contentType;","};","","","/**"," *  Base#findAsset(pathname[, options = {}]) -> Asset|Null"," *  - pathname (String)"," *  - options (Object)"," *"," *  Find asset by logical path or expanded path."," **/","Base.prototype.findAsset = function (pathname, options) {","  var logical_path = pathname, expanded_path;","","  if (isAbsolute(pathname)) {","    if (!this.stat(pathname)) {","      return null;","    }","","    logical_path = this.attributesFor(pathname).logicalPath;","  } else {","    try {","      pathname = this.resolve(logical_path);","","      if (path.extname(logical_path) === '') {","        expanded_path = this.attributesFor(pathname).logicalPath;","        logical_path += path.extname(expanded_path);","      }","    } catch (err) {","      if (err.code === 'FileNotFound') {","        return null;","      }","","      throw err;","    }","  }","","  return this.buildAsset(logical_path, pathname, options);","};","","","/**"," *  Base#eachEntry(root, iterator) -> Void"," *  - root (String)"," *  - iterator (Function)"," *"," *  Calls `iterator` on each found file or directory in alphabetical order:"," *"," *      env.eachEntry('/some/path', function (entry) {"," *        console.log(entry);"," *      });"," *      // -> \"/some/path/a\""," *      // -> \"/some/path/a/b.txt\""," *      // -> \"/some/path/a/c.txt\""," *      // -> \"/some/path/b.txt\""," **/","Base.prototype.eachEntry = function (root, iterator) {","  var self = this, paths = [];","","  this.entries(root).forEach(function (filename) {","    var pathname  = path.join(root, filename),","        stats     = self.stat(pathname);","","    if (!stats) {","      // File not found - silently skip it.","      // It might happen only if we got \"broken\" symlink in real life.","      // See https://github.com/nodeca/mincer/issues/18","      return;","    }","","    paths.push(pathname);","","    if (stats.isDirectory()) {","      self.eachEntry(pathname, function (subpath) {","        paths.push(subpath);","      });","    }","  });","","  paths.sort().forEach(iterator);","};","","","/**"," *  Base#eachFile(iterator) -> Void"," *  - iterator (Function)"," *"," *  Calls `iterator` for each file found within all registered paths."," **/","Base.prototype.eachFile = function (iterator) {","  var self = this;","","  this.paths.forEach(function (root) {","    self.eachEntry(root, function (pathname) {","      if (!self.stat(pathname).isDirectory()) {","        iterator(pathname);","      }","    });","  });","};","","","// Returns true if there were no filters, or `filename` matches at least one","function matches_filter(filters, logicalPath, filename) {","  if (filters.length === 0) {","    return true;","  }","","  return _.some(filters, function (filter) {","    if (_.isRegExp(filter)) {","      return filter.test(logicalPath);","    }","","    if (_.isFunction(filter)) {","      return filter(logicalPath, filename);","    }","","    // prepare string to become RegExp.","    // mimics shell's globbing","    filter = filter.toString().replace(/\\*\\*|\\*|\\?|\\\\.|\\./g, function (m) {","      if (m[0] === '*') {","        return m === '**' ? '.+?' : '[^/]+?';","      }","","      if (m[0] === '?') {","        return '[^/]?';","      }","","      if (m[0] === '.') {","        return '\\\\.';","      }","","      // handle `\\\\.` part","      return m;","    });","","    // prepare RegExp","    filter = new RegExp('^' + filter + '$');","    return filter.test(logicalPath);","  });","}","","","// Returns logicalPath for `filename` if it matches given filters","function logical_path_for_filename(self, filename, filters) {","  var logical_path = self.attributesFor(filename).logicalPath;","","  if (matches_filter(filters, logical_path, filename)) {","    return logical_path;","  }","","  // If filename is an index file, retest with alias","  if (path.basename(filename).split('.').shift() === 'index') {","    logical_path = logical_path.replace(/\\/index\\./, '.');","    if (matches_filter(filters, logical_path, filename)) {","      return logical_path;","    }","  }","}","","","/**"," *  Base#eachLogicalPath(filters, iterator) -> Void"," *  - filters (Array)"," *  - iterator (Function)"," *"," *  Calls `iterator` on each found logical path (once per unique path) that"," *  matches at least one of the given filters."," *"," *  Each filter might be a `String`, `RegExp` or a `Function`."," **/","Base.prototype.eachLogicalPath = function (filters, iterator) {","  var self = this, files = {};","","  this.eachFile(function (filename) {","    var logical_path = logical_path_for_filename(self, filename, filters);","    if (logical_path && !files[logical_path]) {","      iterator(logical_path, filename);","      files[logical_path] = true;","    }","  });","};","","","// circular call  protection helper.","// keeps array of required pathnames until the function","// that originated protection finishes it's execution","var circular_calls = null;","","","function circular_call_protection(pathname, callback) {","  var reset = (circular_calls === null),","      calls = circular_calls || (circular_calls = []);","","  try {","    if (calls.indexOf(pathname) >= 0) {","      throw new Error('Circular dependency detected: ' + pathname +","                      ' has already been required');","    }","","    calls.push(pathname);","    return callback();","  } finally {","    if (reset) {","      circular_calls = null;","    }","  }","}","","","// creates instance of [[StaticAsset]], [[BundledAsset]] or [[ProcessedAsset]]","Base.prototype.buildAsset = function (logicalPath, pathname, options) {","  var self = this;","","  options = options || {};","","  // If there are any processors to run on the pathname, use","  // `BundledAsset`. Otherwise use `StaticAsset` and treat is as binary.","","  if (this.attributesFor(pathname).processors.length === 0) {","    return new StaticAsset(this.index, logicalPath, pathname);","  }","","  if (options.bundle) {","    return new BundledAsset(this.index, logicalPath, pathname);","  }","","  return circular_call_protection(pathname, function () {","    return new ProcessedAsset(self.index, logicalPath, pathname);","  });","};","","","// Returns cache key for given `pathname` based on options","Base.prototype.cacheKeyFor = function (pathname, options) {","  return pathname + String(options.bundle ? 1 : 0);","};",""],"l":{"20":1,"21":1,"22":1,"26":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"47":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"61":1,"62":3,"65":3,"68":3,"70":0,"73":4,"74":4,"87":1,"98":1,"108":1,"125":1,"127":0,"131":0,"132":0,"134":0,"140":1,"141":11,"143":11,"144":0,"145":0,"146":0,"148":0,"157":1,"158":1,"159":1,"165":1,"166":0,"173":1,"174":0,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"203":1,"204":0,"206":0,"207":0,"208":0,"209":0,"211":0,"212":0,"215":0,"217":0,"218":0,"221":0,"222":0,"224":0,"225":0,"226":0,"231":0,"235":0,"236":0,"239":0,"240":0,"241":0,"242":0,"245":0,"256":1,"257":0,"268":1,"269":0,"280":1,"281":0,"283":0,"285":0,"289":0,"299":1,"300":0,"310":1,"311":0,"322":1,"323":0,"325":0,"326":0,"327":0,"330":0,"332":0,"333":0,"335":0,"336":0,"337":0,"340":0,"341":0,"344":0,"348":0,"367":1,"368":0,"370":0,"371":0,"374":0,"378":0,"381":0,"383":0,"384":0,"385":0,"390":0,"400":1,"401":0,"403":0,"404":0,"405":0,"406":0,"414":1,"415":0,"416":0,"419":0,"420":0,"421":0,"424":0,"425":0,"430":0,"431":0,"432":0,"435":0,"436":0,"439":0,"440":0,"444":0,"448":0,"449":0,"455":1,"456":0,"458":0,"459":0,"463":0,"464":0,"465":0,"466":0,"482":1,"483":0,"485":0,"486":0,"487":0,"488":0,"489":0,"498":1,"501":1,"502":0,"505":0,"506":0,"507":0,"511":0,"512":0,"514":0,"515":0,"522":1,"523":0,"525":0,"530":0,"531":0,"534":0,"535":0,"538":0,"539":0,"545":1,"546":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/version.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}}},"branchMap":{},"code":["'use strict';","","","// Mincer version","module.exports = require('../../package.json').version;",""],"l":{"5":1}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/asset_attributes.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/asset_attributes.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":1,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"AssetAttributes","line":33,"loc":{"start":{"line":33,"column":39},"end":{"line":33,"column":87}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":49},"end":{"line":44,"column":61}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":51},"end":{"line":49,"column":69}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":49},"end":{"line":76,"column":61}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":28},"end":{"line":82,"column":44}}},"6":{"name":"(anonymous_6)","line":94,"loc":{"start":{"line":94,"column":42},"end":{"line":94,"column":60}}},"7":{"name":"(anonymous_7)","line":111,"loc":{"start":{"line":111,"column":50},"end":{"line":111,"column":62}}},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":48},"end":{"line":129,"column":60}}},"9":{"name":"(anonymous_9)","line":134,"loc":{"start":{"line":134,"column":48},"end":{"line":134,"column":63}}},"10":{"name":"(anonymous_10)","line":152,"loc":{"start":{"line":152,"column":53},"end":{"line":152,"column":65}}},"11":{"name":"(anonymous_11)","line":153,"loc":{"start":{"line":153,"column":43},"end":{"line":153,"column":58}}},"12":{"name":"(anonymous_12)","line":167,"loc":{"start":{"line":167,"column":54},"end":{"line":167,"column":66}}},"13":{"name":"(anonymous_13)","line":176,"loc":{"start":{"line":176,"column":24},"end":{"line":176,"column":39}}},"14":{"name":"(anonymous_14)","line":185,"loc":{"start":{"line":185,"column":45},"end":{"line":185,"column":57}}},"15":{"name":"(anonymous_15)","line":187,"loc":{"start":{"line":187,"column":35},"end":{"line":187,"column":50}}},"16":{"name":"(anonymous_16)","line":196,"loc":{"start":{"line":196,"column":48},"end":{"line":196,"column":60}}},"17":{"name":"(anonymous_17)","line":209,"loc":{"start":{"line":209,"column":49},"end":{"line":209,"column":61}}},"18":{"name":"(anonymous_18)","line":234,"loc":{"start":{"line":234,"column":55},"end":{"line":234,"column":67}}},"19":{"name":"(anonymous_19)","line":235,"loc":{"start":{"line":235,"column":46},"end":{"line":235,"column":64}}},"20":{"name":"(anonymous_20)","line":251,"loc":{"start":{"line":251,"column":59},"end":{"line":251,"column":71}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":27}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":26}},"3":{"start":{"line":23,"column":0},"end":{"line":23,"column":38}},"4":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"5":{"start":{"line":33,"column":0},"end":{"line":36,"column":2}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":41}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":38}},"8":{"start":{"line":44,"column":0},"end":{"line":63,"column":3}},"9":{"start":{"line":45,"column":2},"end":{"line":47,"column":30}},"10":{"start":{"line":49,"column":2},"end":{"line":51,"column":20}},"11":{"start":{"line":50,"column":4},"end":{"line":50,"column":30}},"12":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"13":{"start":{"line":55,"column":4},"end":{"line":55,"column":65}},"14":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"15":{"start":{"line":59,"column":4},"end":{"line":59,"column":67}},"16":{"start":{"line":62,"column":2},"end":{"line":62,"column":15}},"17":{"start":{"line":76,"column":0},"end":{"line":103,"column":3}},"18":{"start":{"line":77,"column":2},"end":{"line":80,"column":16}},"19":{"start":{"line":82,"column":2},"end":{"line":85,"column":5}},"20":{"start":{"line":83,"column":4},"end":{"line":83,"column":52}},"21":{"start":{"line":84,"column":4},"end":{"line":84,"column":53}},"22":{"start":{"line":87,"column":2},"end":{"line":90,"column":3}},"23":{"start":{"line":88,"column":4},"end":{"line":89,"column":38}},"24":{"start":{"line":92,"column":2},"end":{"line":92,"column":56}},"25":{"start":{"line":93,"column":2},"end":{"line":93,"column":42}},"26":{"start":{"line":94,"column":2},"end":{"line":96,"column":15}},"27":{"start":{"line":95,"column":4},"end":{"line":95,"column":30}},"28":{"start":{"line":98,"column":2},"end":{"line":100,"column":3}},"29":{"start":{"line":99,"column":4},"end":{"line":99,"column":51}},"30":{"start":{"line":102,"column":2},"end":{"line":102,"column":18}},"31":{"start":{"line":111,"column":0},"end":{"line":118,"column":3}},"32":{"start":{"line":112,"column":2},"end":{"line":112,"column":69}},"33":{"start":{"line":114,"column":2},"end":{"line":116,"column":3}},"34":{"start":{"line":115,"column":4},"end":{"line":115,"column":40}},"35":{"start":{"line":117,"column":2},"end":{"line":117,"column":18}},"36":{"start":{"line":129,"column":0},"end":{"line":141,"column":3}},"37":{"start":{"line":130,"column":2},"end":{"line":130,"column":17}},"38":{"start":{"line":132,"column":2},"end":{"line":137,"column":3}},"39":{"start":{"line":133,"column":4},"end":{"line":133,"column":66}},"40":{"start":{"line":134,"column":4},"end":{"line":136,"column":8}},"41":{"start":{"line":135,"column":6},"end":{"line":135,"column":23}},"42":{"start":{"line":140,"column":2},"end":{"line":140,"column":37}},"43":{"start":{"line":152,"column":0},"end":{"line":156,"column":3}},"44":{"start":{"line":153,"column":2},"end":{"line":155,"column":23}},"45":{"start":{"line":154,"column":4},"end":{"line":154,"column":58}},"46":{"start":{"line":167,"column":0},"end":{"line":177,"column":3}},"47":{"start":{"line":168,"column":2},"end":{"line":170,"column":51}},"48":{"start":{"line":172,"column":2},"end":{"line":174,"column":3}},"49":{"start":{"line":173,"column":4},"end":{"line":173,"column":34}},"50":{"start":{"line":176,"column":2},"end":{"line":176,"column":74}},"51":{"start":{"line":176,"column":41},"end":{"line":176,"column":70}},"52":{"start":{"line":185,"column":0},"end":{"line":188,"column":3}},"53":{"start":{"line":186,"column":2},"end":{"line":186,"column":29}},"54":{"start":{"line":187,"column":2},"end":{"line":187,"column":83}},"55":{"start":{"line":187,"column":52},"end":{"line":187,"column":79}},"56":{"start":{"line":196,"column":0},"end":{"line":200,"column":3}},"57":{"start":{"line":197,"column":2},"end":{"line":199,"column":73}},"58":{"start":{"line":209,"column":0},"end":{"line":223,"column":3}},"59":{"start":{"line":210,"column":2},"end":{"line":210,"column":16}},"60":{"start":{"line":212,"column":2},"end":{"line":220,"column":3}},"61":{"start":{"line":213,"column":4},"end":{"line":213,"column":69}},"62":{"start":{"line":215,"column":4},"end":{"line":217,"column":5}},"63":{"start":{"line":216,"column":6},"end":{"line":216,"column":80}},"64":{"start":{"line":219,"column":4},"end":{"line":219,"column":45}},"65":{"start":{"line":222,"column":2},"end":{"line":222,"column":30}},"66":{"start":{"line":234,"column":0},"end":{"line":240,"column":3}},"67":{"start":{"line":235,"column":2},"end":{"line":237,"column":5}},"68":{"start":{"line":236,"column":4},"end":{"line":236,"column":36}},"69":{"start":{"line":239,"column":2},"end":{"line":239,"column":40}},"70":{"start":{"line":251,"column":0},"end":{"line":256,"column":3}},"71":{"start":{"line":252,"column":2},"end":{"line":252,"column":36}},"72":{"start":{"line":253,"column":2},"end":{"line":255,"column":3}},"73":{"start":{"line":254,"column":4},"end":{"line":254,"column":58}}},"branchMap":{"1":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"2":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"3":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"4":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"5":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":17},"end":{"line":99,"column":43}},{"start":{"line":99,"column":47},"end":{"line":99,"column":49}}]},"6":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"7":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"8":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":11},"end":{"line":154,"column":32}},{"start":{"line":154,"column":36},"end":{"line":154,"column":57}}]},"9":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"10":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"11":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":16},"end":{"line":213,"column":38}},{"start":{"line":213,"column":42},"end":{"line":213,"column":68}}]},"12":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"13":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":10},"end":{"line":239,"column":16}},{"start":{"line":239,"column":20},"end":{"line":239,"column":22}}]},"14":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]}},"code":["/** internal"," *  class AssetAttributes"," *"," *  `AssetAttributes` is a wrapper similar to Rubie's `Pathname` that provides"," *  some helper accessors."," *"," *  These methods should be considered internalish."," **/","","","'use strict';","","","// stdlib","var path = require('path');","","","// 3rd-party","var _ = require('lodash');","","","// internal","var prop   = require('./common').prop;","var getter = require('./common').getter;","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  new AssetAttributes(environment, pathanme)"," **/","var AssetAttributes = module.exports = function AssetAttributes(environment, pathname) {","  prop(this, 'environment', environment);","  prop(this, 'pathname',    pathname);","};","","","/**"," *  AssetAttributes#searchPaths -> Array"," *"," *  Returns paths search the load path for."," **/","getter(AssetAttributes.prototype, 'searchPaths', function () {","  var paths = [ this.pathname ],","      exts  = this.extensions.join(''),","      path_without_extensions;","","  path_without_extensions = this.extensions.reduce(function (p, ext) {","    return p.replace(ext, '');","  }, this.pathname);","","  // optimization: bower.json can only be nested one level deep","  if (path_without_extensions.indexOf(path.sep) === -1) {","    paths.push(path.join(path_without_extensions, 'bower.json'));","  }","","  if (path.basename(this.pathname, exts) !== 'index') {","    paths.push(path.join(path_without_extensions, 'index' + exts));","  }","","  return paths;","});","","","","/**"," *  AssetAttributes#logicalPath -> String"," *"," *  Reverse guess logical path for fully expanded path."," *"," *  This has some known issues. For an example if a file is"," *  shaddowed in the path, but is required relatively, its logical"," *  path will be incorrect."," **/","getter(AssetAttributes.prototype, 'logicalPath', function () {","  var pathname = this.pathname,","      paths = this.environment.paths,","      unix_path = pathname.replace(/\\\\/g, '/'),","      root_path;","","  root_path = _.find(paths, function (root) {","    root = path.join(root, '/').replace(/\\\\/g, '/');","    return root === unix_path.substr(0, root.length);","  });","","  if (!root_path) {","    throw new Error('File outside paths: ' + pathname + ' isn\\'t in paths: ' +","                    paths.join(', '));","  }","","  pathname = pathname.replace(root_path + path.sep, '');","  pathname = pathname.replace(/\\\\/g, '/');","  pathname = this.engineExtensions.reduce(function (p, ext) {","    return p.replace(ext, '');","  }, pathname);","","  if (!this.formatExtension) {","    pathname += (this.engineFormatExtension || '');","  }","","  return pathname;","});","","","/**"," *  AssetAttributes#relativePath -> String"," *"," *  Returns full path name relative to environment's root."," **/","getter(AssetAttributes.prototype, 'relativePath', function () {","  var root = this.environment.root, pathname = String(this.pathname);","","  if (root === pathname.substr(0, root.length)) {","    return pathname.substr(root.length);","  }","  return pathname;","});","","","/**"," *  AssetAttributes#extensions -> Array"," *"," *  Returns `Array` of extension `String`s."," *"," *      \"foo.js.coffee\""," *      // -> [\".js\", \".coffee\"]"," **/","getter(AssetAttributes.prototype, 'extensions', function () {","  var extensions;","","  if (!this.__extensions__) {","    extensions = path.basename(this.pathname).split('.').slice(1);","    prop(this, '__extensions__', extensions.map(function (ext) {","      return '.' + ext;","    }));","  }","","","  return this.__extensions__.slice();","});","","","/**"," *  AssetAttributes#formatExtension -> String"," *"," *  Returns the format extension."," *"," *      \"foo.js.coffee\""," *      // -> \".js\""," **/","getter(AssetAttributes.prototype, 'formatExtension', function () {","  return _.find(this.extensions.reverse(), function (ext) {","    return this.getMimeType(ext) && !this.getEngines(ext);","  }, this.environment);","});","","","/**"," *  AssetAttributes#engineExtension -> Array"," *"," *  Returns an `Array` of engine extensions."," *"," *      \"foo.js.coffee.ejs\""," *      // -> [\".coffee\", \".ejs\"]"," **/","getter(AssetAttributes.prototype, 'engineExtensions', function () {","  var env     = this.environment,","      exts    = this.extensions,","      offset  = exts.indexOf(this.formatExtension);","","  if (offset >= 0) {","    exts = exts.slice(offset + 1);","  }","","  return _.filter(exts, function (ext) { return !!env.getEngines(ext); });","});","","","/**"," *  AssetAttributes#engines -> Array"," *"," *  Returns an array of engine classes."," **/","getter(AssetAttributes.prototype, 'engines', function () {","  var env = this.environment;","  return this.engineExtensions.map(function (ext) { return env.getEngines(ext); });","});","","","/**"," *  AssetAttributes#processors -> Array"," *"," *  Returns all processors to run on the path."," **/","getter(AssetAttributes.prototype, 'processors', function () {","  return [].concat(this.environment.getPreProcessors(this.contentType),","                   this.engines.reverse(),","                   this.environment.getPostProcessors(this.contentType));","});","","","/**"," *  AssetAttributes#contentType -> String"," *"," *  Returns the content type for the pathname."," *  Falls back to `application/octet-stream`."," **/","getter(AssetAttributes.prototype, 'contentType', function () {","  var mime_type;","","  if (!this.__contentType__) {","    mime_type = this.engineContentType || 'application/octet-stream';","","    if (this.formatExtension) {","      mime_type = this.environment.getMimeType(this.formatExtension, mime_type);","    }","","    prop(this, '__contentType__', mime_type);","  }","","  return this.__contentType__;","});","","","/**"," *  AssetAttributes#engineContentType -> String"," *"," *  Returns implicit engine content type."," *"," *  `.coffee` files carry an implicit `application/javascript`"," *  content type."," **/","getter(AssetAttributes.prototype, 'engineContentType', function () {","  var engine = _.find(this.engines.reverse(), function (engine) {","    return !!engine.defaultMimeType;","  });","","  return (engine || {}).defaultMimeType;","});","","","/**"," *  AssetAttributes#engineFormatExtension -> String"," *"," *  Returns implicit engine extension."," *"," *  `.coffee` files carry an implicit `.js` extension (due to it's implicit"," *  content type of `application/javascript`)."," **/","getter(AssetAttributes.prototype, 'engineFormatExtension', function () {","  var type = this.engineContentType;","  if (type) {","    return this.environment.getExtensionForMimeType(type);","  }","});",""],"l":{"15":1,"19":1,"23":1,"24":1,"33":1,"34":0,"35":0,"44":1,"45":0,"49":0,"50":0,"54":0,"55":0,"58":0,"59":0,"62":0,"76":1,"77":0,"82":0,"83":0,"84":0,"87":0,"88":0,"92":0,"93":0,"94":0,"95":0,"98":0,"99":0,"102":0,"111":1,"112":0,"114":0,"115":0,"117":0,"129":1,"130":0,"132":0,"133":0,"134":0,"135":0,"140":0,"152":1,"153":0,"154":0,"167":1,"168":0,"172":0,"173":0,"176":0,"185":1,"186":0,"187":0,"196":1,"197":0,"209":1,"210":0,"212":0,"213":0,"215":0,"216":0,"219":0,"222":0,"234":1,"235":0,"236":0,"239":0,"251":1,"252":0,"253":0,"254":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/assets/static.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/assets/static.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"StaticAsset","line":34,"loc":{"start":{"line":34,"column":35},"end":{"line":34,"column":58}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":40},"end":{"line":44,"column":52}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":40},"end":{"line":53,"column":52}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":23}},"2":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}},"3":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}},"4":{"start":{"line":23,"column":0},"end":{"line":23,"column":33}},"5":{"start":{"line":34,"column":0},"end":{"line":37,"column":2}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":31}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":31}},"8":{"start":{"line":40,"column":0},"end":{"line":40,"column":45}},"9":{"start":{"line":44,"column":0},"end":{"line":49,"column":3}},"10":{"start":{"line":48,"column":2},"end":{"line":48,"column":59}},"11":{"start":{"line":53,"column":0},"end":{"line":55,"column":3}},"12":{"start":{"line":54,"column":2},"end":{"line":54,"column":40}}},"branchMap":{"1":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":9},"end":{"line":48,"column":24}},{"start":{"line":48,"column":28},"end":{"line":48,"column":58}}]}},"code":["/** internal"," *  class StaticAsset"," *"," *  Represents static asset the one that has no any processors associated with."," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Asset]]"," **/","","","'use strict';","","","// stdlib","var fs = require('fs');","","","// internal","var prop    = require('../common').prop;","var getter  = require('../common').getter;","var Asset   = require('./asset');","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  new StaticAsset()"," *"," *  See [[Asset.new]] for details."," **/","var StaticAsset = module.exports = function StaticAsset() {","  Asset.apply(this, arguments);","  prop(this, 'type', 'static');","};","","","require('util').inherits(StaticAsset, Asset);","","","// See apidoc of [[Asset#buffer]]","getter(StaticAsset.prototype, 'buffer', function () {","  // No caching to avoid memory bloating by default.","  // Caching might be implemented on the higher level (e.g. in [[Server]])","  // by simply setting `__buffer__` property.","  return this.__buffer__ || fs.readFileSync(this.pathname);","});","","","// See apidoc of [[Asset#source]]","getter(StaticAsset.prototype, 'source', function () {","  return this.buffer.toString('binary');","});",""],"l":{"17":1,"21":1,"22":1,"23":1,"34":1,"35":0,"36":0,"40":1,"44":1,"48":0,"53":1,"54":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/assets/asset.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/assets/asset.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":2,"28":0,"29":1,"30":1,"31":1,"32":0,"33":0,"34":1,"35":0,"36":1,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":1,"48":0,"49":1,"50":0,"51":1,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"typeToClass","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":27}}},"2":{"name":"Asset","line":45,"loc":{"start":{"line":45,"column":29},"end":{"line":45,"column":80}}},"3":{"name":"stub_getter","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":27}}},"4":{"name":"(anonymous_4)","line":73,"loc":{"start":{"line":73,"column":32},"end":{"line":73,"column":44}}},"5":{"name":"(anonymous_5)","line":104,"loc":{"start":{"line":104,"column":38},"end":{"line":104,"column":50}}},"6":{"name":"(anonymous_6)","line":119,"loc":{"start":{"line":119,"column":26},"end":{"line":119,"column":38}}},"7":{"name":"(anonymous_7)","line":127,"loc":{"start":{"line":127,"column":27},"end":{"line":127,"column":39}}},"8":{"name":"(anonymous_8)","line":140,"loc":{"start":{"line":140,"column":26},"end":{"line":140,"column":54}}},"9":{"name":"(anonymous_9)","line":175,"loc":{"start":{"line":175,"column":26},"end":{"line":175,"column":49}}},"10":{"name":"(anonymous_10)","line":186,"loc":{"start":{"line":186,"column":43},"end":{"line":186,"column":55}}},"11":{"name":"(anonymous_11)","line":197,"loc":{"start":{"line":197,"column":42},"end":{"line":197,"column":54}}},"12":{"name":"(anonymous_12)","line":207,"loc":{"start":{"line":207,"column":40},"end":{"line":207,"column":52}}},"13":{"name":"(anonymous_13)","line":212,"loc":{"start":{"line":212,"column":37},"end":{"line":212,"column":57}}},"14":{"name":"(anonymous_14)","line":223,"loc":{"start":{"line":223,"column":33},"end":{"line":223,"column":53}}},"15":{"name":"(anonymous_15)","line":228,"loc":{"start":{"line":228,"column":29},"end":{"line":228,"column":45}}},"16":{"name":"(anonymous_16)","line":239,"loc":{"start":{"line":239,"column":27},"end":{"line":239,"column":56}}},"17":{"name":"(anonymous_17)","line":254,"loc":{"start":{"line":254,"column":17},"end":{"line":254,"column":46}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":26}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":39}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}},"5":{"start":{"line":27,"column":0},"end":{"line":27,"column":29}},"6":{"start":{"line":30,"column":0},"end":{"line":36,"column":1}},"7":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"8":{"start":{"line":32,"column":4},"end":{"line":32,"column":53}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":35}},"10":{"start":{"line":45,"column":0},"end":{"line":68,"column":2}},"11":{"start":{"line":46,"column":2},"end":{"line":46,"column":12}},"12":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"13":{"start":{"line":49,"column":4},"end":{"line":49,"column":75}},"14":{"start":{"line":54,"column":2},"end":{"line":54,"column":43}},"15":{"start":{"line":55,"column":2},"end":{"line":55,"column":64}},"16":{"start":{"line":57,"column":2},"end":{"line":57,"column":48}},"17":{"start":{"line":58,"column":2},"end":{"line":58,"column":43}},"18":{"start":{"line":59,"column":2},"end":{"line":59,"column":43}},"19":{"start":{"line":60,"column":2},"end":{"line":60,"column":40}},"20":{"start":{"line":61,"column":2},"end":{"line":61,"column":67}},"21":{"start":{"line":62,"column":2},"end":{"line":62,"column":57}},"22":{"start":{"line":63,"column":2},"end":{"line":63,"column":83}},"23":{"start":{"line":64,"column":2},"end":{"line":64,"column":87}},"24":{"start":{"line":66,"column":2},"end":{"line":66,"column":60}},"25":{"start":{"line":67,"column":2},"end":{"line":67,"column":60}},"26":{"start":{"line":72,"column":0},"end":{"line":78,"column":1}},"27":{"start":{"line":73,"column":2},"end":{"line":77,"column":5}},"28":{"start":{"line":76,"column":4},"end":{"line":76,"column":88}},"29":{"start":{"line":86,"column":0},"end":{"line":86,"column":22}},"30":{"start":{"line":94,"column":0},"end":{"line":94,"column":22}},"31":{"start":{"line":104,"column":0},"end":{"line":108,"column":3}},"32":{"start":{"line":105,"column":2},"end":{"line":106,"column":36}},"33":{"start":{"line":107,"column":2},"end":{"line":107,"column":62}},"34":{"start":{"line":119,"column":0},"end":{"line":121,"column":2}},"35":{"start":{"line":120,"column":2},"end":{"line":120,"column":18}},"36":{"start":{"line":127,"column":0},"end":{"line":129,"column":2}},"37":{"start":{"line":128,"column":2},"end":{"line":128,"column":21}},"38":{"start":{"line":140,"column":0},"end":{"line":163,"column":2}},"39":{"start":{"line":141,"column":2},"end":{"line":141,"column":44}},"40":{"start":{"line":144,"column":2},"end":{"line":146,"column":3}},"41":{"start":{"line":145,"column":4},"end":{"line":145,"column":17}},"42":{"start":{"line":156,"column":2},"end":{"line":158,"column":3}},"43":{"start":{"line":157,"column":4},"end":{"line":157,"column":16}},"44":{"start":{"line":162,"column":2},"end":{"line":162,"column":66}},"45":{"start":{"line":175,"column":0},"end":{"line":177,"column":2}},"46":{"start":{"line":176,"column":2},"end":{"line":176,"column":52}},"47":{"start":{"line":186,"column":0},"end":{"line":188,"column":3}},"48":{"start":{"line":187,"column":2},"end":{"line":187,"column":42}},"49":{"start":{"line":197,"column":0},"end":{"line":199,"column":3}},"50":{"start":{"line":198,"column":2},"end":{"line":198,"column":41}},"51":{"start":{"line":207,"column":0},"end":{"line":209,"column":3}},"52":{"start":{"line":208,"column":2},"end":{"line":208,"column":68}},"53":{"start":{"line":212,"column":0},"end":{"line":219,"column":2}},"54":{"start":{"line":213,"column":2},"end":{"line":213,"column":30}},"55":{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},"56":{"start":{"line":216,"column":4},"end":{"line":216,"column":55}},"57":{"start":{"line":218,"column":2},"end":{"line":218,"column":18}},"58":{"start":{"line":223,"column":0},"end":{"line":225,"column":2}},"59":{"start":{"line":224,"column":2},"end":{"line":224,"column":56}},"60":{"start":{"line":228,"column":0},"end":{"line":236,"column":2}},"61":{"start":{"line":229,"column":2},"end":{"line":229,"column":31}},"62":{"start":{"line":230,"column":2},"end":{"line":230,"column":38}},"63":{"start":{"line":231,"column":2},"end":{"line":231,"column":60}},"64":{"start":{"line":232,"column":2},"end":{"line":232,"column":38}},"65":{"start":{"line":233,"column":2},"end":{"line":233,"column":42}},"66":{"start":{"line":234,"column":2},"end":{"line":234,"column":33}},"67":{"start":{"line":235,"column":2},"end":{"line":235,"column":33}},"68":{"start":{"line":239,"column":0},"end":{"line":251,"column":2}},"69":{"start":{"line":240,"column":2},"end":{"line":240,"column":48}},"70":{"start":{"line":241,"column":2},"end":{"line":241,"column":43}},"71":{"start":{"line":242,"column":2},"end":{"line":242,"column":48}},"72":{"start":{"line":243,"column":2},"end":{"line":243,"column":66}},"73":{"start":{"line":244,"column":2},"end":{"line":244,"column":48}},"74":{"start":{"line":245,"column":2},"end":{"line":245,"column":72}},"75":{"start":{"line":246,"column":2},"end":{"line":246,"column":63}},"76":{"start":{"line":247,"column":2},"end":{"line":247,"column":63}},"77":{"start":{"line":249,"column":2},"end":{"line":249,"column":60}},"78":{"start":{"line":250,"column":2},"end":{"line":250,"column":60}},"79":{"start":{"line":254,"column":0},"end":{"line":277,"column":2}},"80":{"start":{"line":255,"column":2},"end":{"line":276,"column":3}},"81":{"start":{"line":256,"column":4},"end":{"line":256,"column":21}},"82":{"start":{"line":258,"column":4},"end":{"line":266,"column":5}},"83":{"start":{"line":259,"column":6},"end":{"line":259,"column":37}},"84":{"start":{"line":261,"column":6},"end":{"line":265,"column":7}},"85":{"start":{"line":262,"column":8},"end":{"line":262,"column":47}},"86":{"start":{"line":263,"column":8},"end":{"line":263,"column":39}},"87":{"start":{"line":264,"column":8},"end":{"line":264,"column":42}},"88":{"start":{"line":268,"column":4},"end":{"line":268,"column":17}},"89":{"start":{"line":270,"column":4},"end":{"line":273,"column":5}},"90":{"start":{"line":272,"column":6},"end":{"line":272,"column":18}},"91":{"start":{"line":275,"column":4},"end":{"line":275,"column":12}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"3":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]},"4":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"5":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"6":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":4},"end":{"line":258,"column":4}},{"start":{"line":258,"column":4},"end":{"line":258,"column":4}}]},"7":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":6},"end":{"line":261,"column":6}},{"start":{"line":261,"column":6},"end":{"line":261,"column":6}}]},"8":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":4},"end":{"line":270,"column":4}},{"start":{"line":270,"column":4},"end":{"line":270,"column":4}}]}},"code":["/** internal"," *  class Asset"," *"," *  The base class for [[BundledAsset]], [[ProcessedAsset]] and [[StaticAsset]]."," **/","","","'use strict';","","","// stdlib","var path = require('path');","","","// 3rd-party","var _ = require('lodash');","","","// internal","var prop   = require('../common').prop;","var getter = require('../common').getter;","","","////////////////////////////////////////////////////////////////////////////////","","","var TYPE_TO_KLASS_CACHE = {};","","","function typeToClass(type) {","  if (!TYPE_TO_KLASS_CACHE[type]) {","    TYPE_TO_KLASS_CACHE[type] = require('./' + type);","  }","","  return TYPE_TO_KLASS_CACHE[type];","}","","","/**"," *  new Asset(environment, logicalPath, pathname)"," *  - environment (Environment)"," *  - logicalPath (String)"," *  - pathname (String)"," **/","var Asset = module.exports = function Asset(environment, logicalPath, pathname) {","  var mtime;","","  if (path.extname(logicalPath) === '') {","    throw new Error('Asset logical path has no extension: ' + logicalPath);","  }","","","  // drop mtime to 1 second","  mtime = environment.stat(pathname).mtime;","  mtime = new Date(parseInt(mtime.getTime() / 1000, 10) * 1000);","","  prop(this, 'root',          environment.root);","  prop(this, 'environment',   environment);","  prop(this, 'logicalPath',   logicalPath);","  prop(this, 'pathname',      pathname);","  prop(this, 'contentType',   environment.contentTypeOf(pathname));","  prop(this, 'mtime',         mtime, { writable: true });","  prop(this, 'length',        environment.stat(pathname).size, { writable: true });","  prop(this, 'digest',        environment.getFileDigest(pathname), { writable: true });","","  prop(this, '__requiredAssets__',  [], { writable: true });","  prop(this, '__dependencyPaths__', [], { writable: true });","};","","","// helper to sub-out getters of Asset.prototype","function stub_getter(name) {","  getter(Asset.prototype, name, function () {","    // this should never happen, as Asset is an abstract class and not","    // supposed to be used directly. subclasses must override this getters","    throw new Error(this.constructor.name + '#' + name + ' getter is not implemented.');","  });","}","","","/**"," *  Asset#buffer -> Buffer"," *"," *  `Buffer` content of asset."," **/","stub_getter('buffer');","","","/**"," *  Asset#source -> String"," *"," *  `String` (concatenated) content of asset."," **/","stub_getter('source');","","","/**"," *  Asset#digestPath -> String"," *"," *  Return logical path with digest spliced in."," *"," *      \"foo/bar-ce09b59f734f7f5641f2962a5cf94bd1.js\""," **/","getter(Asset.prototype, 'digestPath', function () {","  var ext = path.extname(this.logicalPath),","      sfx = '-' + this.digest + ext;","  return this.logicalPath.replace(new RegExp(ext + '$'), sfx);","});","","","/**"," *  Asset#toArray() -> Array"," *"," *  Expand asset into an `Array` of parts."," *"," *  Appending all of an assets body parts together should give you"," *  the asset's contents as a whole."," **/","Asset.prototype.toArray = function () {","  return [ this ];","};","","","/** alias of: Asset#source"," *  Asset#toString() -> String"," **/","Asset.prototype.toString = function () {","  return this.source;","};","","","/**"," *  Asset.isDependencyFresh(environment, dep) -> Boolean"," *  - environment (Environment|Index)"," *  - dep (Asset)"," *"," *  Returns whenever given `dep` asset is fresh by checking it's mtime, and"," *  contents if it's match."," **/","Asset.isDependencyFresh = function (environment, dep) {","  var stat = environment.stat(dep.pathname);","","  // If path no longer exists, its definitely stale.","  if (!stat) {","    return false;","  }","","  // Compare dependency mime to the actual mtime. If the","  // dependency mtime is newer than the actual mtime, the file","  // hasn't changed since we created this `Asset` instance.","  //","  // However, if the mtime is newer it doesn't mean the asset is","  // stale. Many deployment environments may recopy or recheckout","  // assets on each deploy. In this case the mtime would be the","  // time of deploy rather than modified time.","  if (dep.mtime.getTime() >= stat.mtime.getTime()) {","    return true;","  }","","  // If the mtime is newer, do a full digest comparsion.","  // Return fresh if the digests match. Otherwise, its stale.","  return (dep.digest === environment.getFileDigest(dep.pathname));","};","","","/**"," *  Asset#isFresh(environment) -> Boolean"," *  - environment (Environment|Index)"," *"," *  Checks if Asset is fresh by comparing the actual mtime and"," *  digest to the inmemory model."," *"," *  Used to test if cached models need to be rebuilt."," **/","Asset.prototype.isFresh = function (environment) {","  return Asset.isDependencyFresh(environment, this);","};","","","/** internal"," *  Asset#dependencyPaths -> Array"," *"," *  String paths that are marked as dependencies after processing."," *  Default to an empty `Array`."," **/","getter(Asset.prototype, 'dependencyPaths', function () {","  return this.__dependencyPaths__.slice();","});","","","/** internal"," *  Asset#requiredAssets -> Array"," *"," *  `ProcessedAsset`s that are required after processing."," *  Default to an empty `Array`."," **/","getter(Asset.prototype, 'requiredAssets', function () {","  return this.__requiredAssets__.slice();","});","","","/**"," *  Asset#relativePath -> String"," *"," *  Returns AssetAttributes#relativePath of current file."," **/","getter(Asset.prototype, 'relativePath', function () {","  return this.environment.attributesFor(this.pathname).relativePath;","});","","","Asset.prototype.relativizeRootPath = function (pathname) {","  pathname = String(pathname);","","  if (this.root === pathname.substr(0, this.root.length)) {","    return '$root' + pathname.substr(this.root.length);","  }","  return pathname;","};","","","","Asset.prototype.expandRootPath = function (pathname) {","  return String(pathname).replace(/^\\$root/, this.root);","};","","","Asset.prototype.encodeWith = function (hash) {","  hash.type        = this.type;","  hash.logicalPath = this.logicalPath;","  hash.pathname    = this.relativizeRootPath(this.pathname);","  hash.contentType = this.contentType;","  hash.mtime       = this.mtime.getTime();","  hash.length      = this.length;","  hash.digest      = this.digest;","};","","","Asset.prototype.initWith = function (environment, hash) {","  prop(this, 'root',          environment.root);","  prop(this, 'environment',   environment);","  prop(this, 'logicalPath',   hash.logicalPath);","  prop(this, 'pathname',      this.expandRootPath(hash.pathname));","  prop(this, 'contentType',   hash.contentType);","  prop(this, 'mtime',         new Date(hash.mtime), { writable: true });","  prop(this, 'length',        hash.length, { writable: true });","  prop(this, 'digest',        hash.digest, { writable: true });","","  prop(this, '__requiredAssets__',  [], { writable: true });","  prop(this, '__dependencyPaths__', [], { writable: true });","};","","","Asset.fromHash = function (environment, hash) {","  try {","    var asset, klass;","","    if (_.isPlainObject(hash)) {","      klass = typeToClass(hash.type);","","      if (klass) {","        asset = Object.create(klass.prototype);","        prop(asset, 'type', hash.type); // KLUDGE: Use constructor.name","        asset.initWith(environment, hash);","      }","    }","","    return asset;","  } catch (e) {","    if (e.code === 'unserialize_error') {","      // do nothing","      return null;","    }","","    throw e;","  }","};",""],"l":{"12":1,"16":1,"20":1,"21":1,"27":1,"30":1,"31":0,"32":0,"35":0,"45":1,"46":0,"48":0,"49":0,"54":0,"55":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"66":0,"67":0,"72":1,"73":2,"76":0,"86":1,"94":1,"104":1,"105":0,"107":0,"119":1,"120":0,"127":1,"128":0,"140":1,"141":0,"144":0,"145":0,"156":0,"157":0,"162":0,"175":1,"176":0,"186":1,"187":0,"197":1,"198":0,"207":1,"208":0,"212":1,"213":0,"215":0,"216":0,"218":0,"223":1,"224":0,"228":1,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"239":1,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"249":0,"250":0,"254":1,"255":0,"256":0,"258":0,"259":0,"261":0,"262":0,"263":0,"264":0,"268":0,"270":0,"272":0,"275":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/assets/processed.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/assets/processed.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":1,"66":0,"67":0,"68":1,"69":0,"70":1,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"DependencyFile","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":49}}},"2":{"name":"resolveDependencies","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":42}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":19},"end":{"line":42,"column":32}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":39},"end":{"line":56,"column":67}}},"5":{"name":"buildRequiredAssets","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":44}}},"6":{"name":"(anonymous_6)","line":77,"loc":{"start":{"line":77,"column":30},"end":{"line":77,"column":46}}},"7":{"name":"buildDependencyPaths","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":45}}},"8":{"name":"(anonymous_8)","line":90,"loc":{"start":{"line":90,"column":38},"end":{"line":90,"column":51}}},"9":{"name":"(anonymous_9)","line":96,"loc":{"start":{"line":96,"column":42},"end":{"line":96,"column":55}}},"10":{"name":"(anonymous_10)","line":109,"loc":{"start":{"line":109,"column":36},"end":{"line":109,"column":51}}},"11":{"name":"computeDependencyDigest","line":120,"loc":{"start":{"line":120,"column":0},"end":{"line":120,"column":39}}},"12":{"name":"(anonymous_12)","line":121,"loc":{"start":{"line":121,"column":39},"end":{"line":121,"column":64}}},"13":{"name":"ProcessedAsset","line":135,"loc":{"start":{"line":135,"column":38},"end":{"line":135,"column":64}}},"14":{"name":"(anonymous_14)","line":169,"loc":{"start":{"line":169,"column":35},"end":{"line":169,"column":58}}},"15":{"name":"(anonymous_15)","line":170,"loc":{"start":{"line":170,"column":43},"end":{"line":170,"column":58}}},"16":{"name":"(anonymous_16)","line":177,"loc":{"start":{"line":177,"column":43},"end":{"line":177,"column":55}}},"17":{"name":"(anonymous_17)","line":183,"loc":{"start":{"line":183,"column":43},"end":{"line":183,"column":55}}},"18":{"name":"(anonymous_18)","line":188,"loc":{"start":{"line":188,"column":38},"end":{"line":188,"column":54}}},"19":{"name":"(anonymous_19)","line":195,"loc":{"start":{"line":195,"column":51},"end":{"line":195,"column":68}}},"20":{"name":"(anonymous_20)","line":200,"loc":{"start":{"line":200,"column":54},"end":{"line":200,"column":69}}},"21":{"name":"(anonymous_21)","line":211,"loc":{"start":{"line":211,"column":36},"end":{"line":211,"column":65}}},"22":{"name":"(anonymous_22)","line":219,"loc":{"start":{"line":219,"column":58},"end":{"line":219,"column":71}}},"23":{"name":"(anonymous_23)","line":223,"loc":{"start":{"line":223,"column":38},"end":{"line":223,"column":54}}},"24":{"name":"(anonymous_24)","line":237,"loc":{"start":{"line":237,"column":61},"end":{"line":237,"column":74}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":26}},"2":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}},"3":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}},"4":{"start":{"line":23,"column":0},"end":{"line":23,"column":33}},"5":{"start":{"line":30,"column":0},"end":{"line":34,"column":1}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":27}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"8":{"start":{"line":33,"column":2},"end":{"line":33,"column":25}},"9":{"start":{"line":39,"column":0},"end":{"line":66,"column":1}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":30}},"11":{"start":{"line":42,"column":2},"end":{"line":63,"column":5}},"12":{"start":{"line":43,"column":4},"end":{"line":43,"column":14}},"13":{"start":{"line":45,"column":4},"end":{"line":51,"column":5}},"14":{"start":{"line":46,"column":6},"end":{"line":49,"column":7}},"15":{"start":{"line":47,"column":8},"end":{"line":47,"column":24}},"16":{"start":{"line":48,"column":8},"end":{"line":48,"column":26}},"17":{"start":{"line":50,"column":6},"end":{"line":50,"column":13}},"18":{"start":{"line":53,"column":4},"end":{"line":53,"column":61}},"19":{"start":{"line":55,"column":4},"end":{"line":62,"column":5}},"20":{"start":{"line":56,"column":6},"end":{"line":61,"column":9}},"21":{"start":{"line":57,"column":8},"end":{"line":60,"column":9}},"22":{"start":{"line":58,"column":10},"end":{"line":58,"column":50}},"23":{"start":{"line":59,"column":10},"end":{"line":59,"column":40}},"24":{"start":{"line":65,"column":2},"end":{"line":65,"column":16}},"25":{"start":{"line":70,"column":0},"end":{"line":83,"column":1}},"26":{"start":{"line":71,"column":2},"end":{"line":73,"column":69}},"27":{"start":{"line":75,"column":2},"end":{"line":80,"column":3}},"28":{"start":{"line":77,"column":4},"end":{"line":79,"column":7}},"29":{"start":{"line":78,"column":6},"end":{"line":78,"column":40}},"30":{"start":{"line":82,"column":2},"end":{"line":82,"column":43}},"31":{"start":{"line":87,"column":0},"end":{"line":116,"column":1}},"32":{"start":{"line":88,"column":2},"end":{"line":88,"column":24}},"33":{"start":{"line":90,"column":2},"end":{"line":94,"column":5}},"34":{"start":{"line":91,"column":4},"end":{"line":92,"column":68}},"35":{"start":{"line":93,"column":4},"end":{"line":93,"column":44}},"36":{"start":{"line":96,"column":2},"end":{"line":113,"column":5}},"37":{"start":{"line":97,"column":4},"end":{"line":97,"column":19}},"38":{"start":{"line":99,"column":4},"end":{"line":104,"column":5}},"39":{"start":{"line":100,"column":6},"end":{"line":101,"column":66}},"40":{"start":{"line":102,"column":6},"end":{"line":102,"column":46}},"41":{"start":{"line":103,"column":6},"end":{"line":103,"column":13}},"42":{"start":{"line":106,"column":4},"end":{"line":106,"column":61}},"43":{"start":{"line":108,"column":4},"end":{"line":112,"column":5}},"44":{"start":{"line":109,"column":6},"end":{"line":111,"column":9}},"45":{"start":{"line":110,"column":8},"end":{"line":110,"column":48}},"46":{"start":{"line":115,"column":2},"end":{"line":115,"column":60}},"47":{"start":{"line":120,"column":0},"end":{"line":124,"column":1}},"48":{"start":{"line":121,"column":2},"end":{"line":123,"column":44}},"49":{"start":{"line":122,"column":4},"end":{"line":122,"column":39}},"50":{"start":{"line":135,"column":0},"end":{"line":156,"column":2}},"51":{"start":{"line":136,"column":2},"end":{"line":136,"column":29}},"52":{"start":{"line":138,"column":2},"end":{"line":138,"column":31}},"53":{"start":{"line":139,"column":2},"end":{"line":139,"column":34}},"54":{"start":{"line":142,"column":2},"end":{"line":142,"column":46}},"55":{"start":{"line":143,"column":2},"end":{"line":143,"column":77}},"56":{"start":{"line":145,"column":2},"end":{"line":145,"column":52}},"57":{"start":{"line":146,"column":2},"end":{"line":146,"column":32}},"58":{"start":{"line":147,"column":2},"end":{"line":147,"column":31}},"59":{"start":{"line":149,"column":2},"end":{"line":149,"column":47}},"60":{"start":{"line":150,"column":2},"end":{"line":150,"column":74}},"61":{"start":{"line":152,"column":2},"end":{"line":152,"column":37}},"62":{"start":{"line":153,"column":2},"end":{"line":153,"column":38}},"63":{"start":{"line":155,"column":2},"end":{"line":155,"column":64}},"64":{"start":{"line":159,"column":0},"end":{"line":159,"column":48}},"65":{"start":{"line":169,"column":0},"end":{"line":173,"column":2}},"66":{"start":{"line":170,"column":2},"end":{"line":172,"column":5}},"67":{"start":{"line":171,"column":4},"end":{"line":171,"column":53}},"68":{"start":{"line":177,"column":0},"end":{"line":179,"column":3}},"69":{"start":{"line":178,"column":2},"end":{"line":178,"column":52}},"70":{"start":{"line":183,"column":0},"end":{"line":185,"column":3}},"71":{"start":{"line":184,"column":2},"end":{"line":184,"column":25}},"72":{"start":{"line":188,"column":0},"end":{"line":207,"column":2}},"73":{"start":{"line":189,"column":2},"end":{"line":189,"column":46}},"74":{"start":{"line":191,"column":2},"end":{"line":191,"column":43}},"75":{"start":{"line":192,"column":2},"end":{"line":192,"column":42}},"76":{"start":{"line":193,"column":2},"end":{"line":193,"column":49}},"77":{"start":{"line":195,"column":2},"end":{"line":197,"column":11}},"78":{"start":{"line":196,"column":4},"end":{"line":196,"column":51}},"79":{"start":{"line":200,"column":2},"end":{"line":206,"column":11}},"80":{"start":{"line":201,"column":4},"end":{"line":205,"column":6}},"81":{"start":{"line":211,"column":0},"end":{"line":240,"column":2}},"82":{"start":{"line":212,"column":2},"end":{"line":212,"column":57}},"83":{"start":{"line":214,"column":2},"end":{"line":214,"column":32}},"84":{"start":{"line":215,"column":2},"end":{"line":215,"column":35}},"85":{"start":{"line":217,"column":2},"end":{"line":217,"column":56}},"86":{"start":{"line":219,"column":2},"end":{"line":235,"column":12}},"87":{"start":{"line":220,"column":4},"end":{"line":220,"column":13}},"88":{"start":{"line":222,"column":4},"end":{"line":222,"column":35}},"89":{"start":{"line":223,"column":4},"end":{"line":225,"column":13}},"90":{"start":{"line":224,"column":6},"end":{"line":224,"column":47}},"91":{"start":{"line":227,"column":4},"end":{"line":232,"column":5}},"92":{"start":{"line":228,"column":6},"end":{"line":231,"column":8}},"93":{"start":{"line":234,"column":4},"end":{"line":234,"column":84}},"94":{"start":{"line":237,"column":2},"end":{"line":239,"column":12}},"95":{"start":{"line":238,"column":4},"end":{"line":238,"column":88}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"5":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"6":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"7":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"8":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":9},"end":{"line":178,"column":24}},{"start":{"line":178,"column":28},"end":{"line":178,"column":51}}]},"9":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":227,"column":4}},{"start":{"line":227,"column":4},"end":{"line":227,"column":4}}]},"10":{"line":234,"type":"cond-expr","locations":[{"start":{"line":234,"column":33},"end":{"line":234,"column":37}},{"start":{"line":234,"column":40},"end":{"line":234,"column":83}}]}},"code":["/** internal"," *  class ProcessedAsset"," *"," *  `ProcessedAsset`s are internal representation of processable files."," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Asset]]"," **/","","","'use strict';","","","// 3rd-party","var _ = require('lodash');","","","// internal","var prop    = require('../common').prop;","var getter  = require('../common').getter;","var Asset   = require('./asset');","","","////////////////////////////////////////////////////////////////////////////////","","","// internal class used to build dependency graph","function DependencyFile(pathname, mtime, digest) {","  this.pathname = pathname;","  this.mtime    = mtime;","  this.digest   = digest;","}","","","// recursively iterate over all requried assets,","// gather a list of (compiling if needed) assets that should be required","function resolveDependencies(self, paths) {","  var assets = [], cache = {};","","  _.forEach(paths, function (p) {","    var asset;","","    if (p === self.pathname) {","      if (!cache[p]) {","        cache[p] = true;","        assets.push(self);","      }","      return;","    }","","    asset = self.environment.findAsset(p, { bundle: false });","","    if (asset) {","      asset.__requiredAssets__.forEach(function (asset_dependency) {","        if (!cache[asset_dependency.pathname]) {","          cache[asset_dependency.pathname] = true;","          assets.push(asset_dependency);","        }","      });","    }","  });","","  return assets;","}","","","// build all required assets","function buildRequiredAssets(self, context) {","  var paths   = context.__requiredPaths__.concat([ self.pathname ]),","      assets  = resolveDependencies(self, paths),","      stubs   = resolveDependencies(self, context.__stubbedAssets__);","","  if (stubs.length > 0) {","    // exclude stubbed assets if any","    assets = _.filter(assets, function (path) {","      return stubs.indexOf(path) === -1;","    });","  }","","  prop(self, '__requiredAssets__', assets);","}","","","// prepare an ordered list (map) of dependencies","function buildDependencyPaths(self, context) {","  var dependencies = {};","","  context.__dependencyPaths__.forEach(function (p) {","    var dep = new DependencyFile(p, self.environment.stat(p).mtime,","                                 self.environment.getFileDigest(p));","    dependencies[JSON.stringify(dep)] = dep;","  });","","  _.forEach(context.__dependencyAssets__, function (p) {","    var dep, asset;","","    if (p === self.pathname) {","      dep = new DependencyFile(p, self.environment.stat(p).mtime,","                               self.environment.getFileDigest(p));","      dependencies[JSON.stringify(dep)] = dep;","      return;","    }","","    asset = self.environment.findAsset(p, { bundle: false });","","    if (asset) {","      asset.dependencyPaths.forEach(function (dep) {","        dependencies[JSON.stringify(dep)] = dep;","      });","    }","  });","","  prop(self, '__dependencyPaths__', _.values(dependencies));","}","","","// return digest based on digests of all dependencies","function computeDependencyDigest(self) {","  return _.reduce(self.requiredAssets, function (digest, asset) {","    return digest.update(asset.digest);","  }, self.environment.digest).digest('hex');","}","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  new ProcessedAsset()"," *"," *  See [[Asset.new]] for details."," **/","var ProcessedAsset = module.exports = function ProcessedAsset() {","  var Klass, context, result;","","  Asset.apply(this, arguments);","  prop(this, 'type', 'processed');","","  // prepare to build ourself","  Klass       = this.environment.ContextClass;","  context     = new Klass(this.environment, this.logicalPath, this.pathname);","","  result          = context.evaluate(this.pathname);","  this.__source__ = result.data;","  this.sourceMap  = result.map;","","  this.length = Buffer.byteLength(this.source);","  this.digest = this.environment.digest.update(this.source).digest('hex');","","  buildRequiredAssets(this, context);","  buildDependencyPaths(this, context);","","  prop(this, 'dependencyDigest', computeDependencyDigest(this));","};","","","require('util').inherits(ProcessedAsset, Asset);","","","/**"," *  ProcessedAsset#isFresh(environment) -> Boolean"," *  - environment (Environment|Index)"," *"," *  Checks if Asset is stale by comparing the actual mtime and"," *  digest to the inmemory model."," **/","ProcessedAsset.prototype.isFresh = function (environment) {","  return _.every(this.__dependencyPaths__, function (dep) {","    return Asset.isDependencyFresh(environment, dep);","  });","};","","","// See apidoc of [[Asset#buffer]]","getter(ProcessedAsset.prototype, 'buffer', function () {","  return this.__buffer__ || new Buffer(this.source);","});","","","// See apidoc of [[Asset#source]]","getter(ProcessedAsset.prototype, 'source', function () {","  return this.__source__;","});","","","ProcessedAsset.prototype.encodeWith = function (hash) {","  Asset.prototype.encodeWith.call(this, hash);","","  hash.source            = this.__source__;","  hash.sourceMap         = this.sourceMap;","  hash.dependencyDigest  = this.dependencyDigest;","","  hash.requiredPaths = this.__requiredAssets__.map(function (asset) {","    return this.relativizeRootPath(asset.pathname);","  }, this);","","","  hash.dependencyPaths = this.__dependencyPaths__.map(function (dep) {","    return {","      path:   this.relativizeRootPath(dep.pathname),","      mtime:  dep.mtime.getTime(),","      digest: dep.digest","    };","  }, this);","};","","","","ProcessedAsset.prototype.initWith = function (environment, hash) {","  Asset.prototype.initWith.call(this, environment, hash);","","  this.__source__ = hash.source;","  this.sourceMap  = hash.sourceMap;","","  prop(this, 'dependencyDigest', hash.dependencyDigest);","","  prop(this, '__requiredAssets__', hash.requiredPaths.map(function (p) {","    var root;","","    p     = this.expandRootPath(p);","    root  = _.find(environment.paths, function (path) {","      return path === p.substr(0, path.length);","    }, this);","","    if (!root) {","      throw {","        code:     'unserialize_error',","        message:  p + ' isn\\'t in paths'","      };","    }","","    return p === this.pathname ? this : environment.findAsset(p, { bundle: false });","  }, this));","","  prop(this, '__dependencyPaths__', hash.dependencyPaths.map(function (h) {","    return new DependencyFile(this.expandRootPath(h.path), new Date(h.mtime), h.digest);","  }, this));","};",""],"l":{"17":1,"21":1,"22":1,"23":1,"30":1,"31":0,"32":0,"33":0,"39":1,"40":0,"42":0,"43":0,"45":0,"46":0,"47":0,"48":0,"50":0,"53":0,"55":0,"56":0,"57":0,"58":0,"59":0,"65":0,"70":1,"71":0,"75":0,"77":0,"78":0,"82":0,"87":1,"88":0,"90":0,"91":0,"93":0,"96":0,"97":0,"99":0,"100":0,"102":0,"103":0,"106":0,"108":0,"109":0,"110":0,"115":0,"120":1,"121":0,"122":0,"135":1,"136":0,"138":0,"139":0,"142":0,"143":0,"145":0,"146":0,"147":0,"149":0,"150":0,"152":0,"153":0,"155":0,"159":1,"169":1,"170":0,"171":0,"177":1,"178":0,"183":1,"184":0,"188":1,"189":0,"191":0,"192":0,"193":0,"195":0,"196":0,"200":0,"201":0,"211":1,"212":0,"214":0,"215":0,"217":0,"219":0,"220":0,"222":0,"223":0,"224":0,"227":0,"228":0,"234":0,"237":0,"238":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/assets/bundled.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/assets/bundled.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":0,"52":1,"53":0,"54":1,"55":0,"56":0,"57":1,"58":0,"59":1,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"mapify","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}}},"2":{"name":"shiftPaths","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":39}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":22},"end":{"line":33,"column":43}}},"4":{"name":"BundledAsset","line":46,"loc":{"start":{"line":46,"column":36},"end":{"line":46,"column":60}}},"5":{"name":"(anonymous_5)","line":65,"loc":{"start":{"line":65,"column":27},"end":{"line":65,"column":42}}},"6":{"name":"(anonymous_6)","line":77,"loc":{"start":{"line":77,"column":27},"end":{"line":77,"column":42}}},"7":{"name":"(anonymous_7)","line":119,"loc":{"start":{"line":119,"column":9},"end":{"line":119,"column":26}}},"8":{"name":"(anonymous_8)","line":132,"loc":{"start":{"line":132,"column":41},"end":{"line":132,"column":53}}},"9":{"name":"(anonymous_9)","line":138,"loc":{"start":{"line":138,"column":41},"end":{"line":138,"column":53}}},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":47},"end":{"line":148,"column":59}}},"11":{"name":"(anonymous_11)","line":149,"loc":{"start":{"line":149,"column":34},"end":{"line":149,"column":51}}},"12":{"name":"(anonymous_12)","line":160,"loc":{"start":{"line":160,"column":33},"end":{"line":160,"column":45}}},"13":{"name":"(anonymous_13)","line":172,"loc":{"start":{"line":172,"column":33},"end":{"line":172,"column":56}}},"14":{"name":"(anonymous_14)","line":177,"loc":{"start":{"line":177,"column":36},"end":{"line":177,"column":52}}},"15":{"name":"(anonymous_15)","line":186,"loc":{"start":{"line":186,"column":34},"end":{"line":186,"column":63}}},"16":{"name":"(anonymous_16)","line":204,"loc":{"start":{"line":204,"column":43},"end":{"line":204,"column":55}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":38}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":32}},"4":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"5":{"start":{"line":25,"column":0},"end":{"line":25,"column":42}},"6":{"start":{"line":26,"column":0},"end":{"line":26,"column":33}},"7":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"8":{"start":{"line":29,"column":2},"end":{"line":29,"column":60}},"9":{"start":{"line":32,"column":0},"end":{"line":36,"column":1}},"10":{"start":{"line":33,"column":2},"end":{"line":35,"column":5}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":77}},"12":{"start":{"line":46,"column":0},"end":{"line":125,"column":2}},"13":{"start":{"line":47,"column":2},"end":{"line":48,"column":52}},"14":{"start":{"line":50,"column":2},"end":{"line":50,"column":31}},"15":{"start":{"line":51,"column":2},"end":{"line":51,"column":32}},"16":{"start":{"line":53,"column":2},"end":{"line":53,"column":80}},"17":{"start":{"line":55,"column":2},"end":{"line":55,"column":52}},"18":{"start":{"line":56,"column":2},"end":{"line":56,"column":71}},"19":{"start":{"line":57,"column":2},"end":{"line":57,"column":72}},"20":{"start":{"line":60,"column":2},"end":{"line":60,"column":46}},"21":{"start":{"line":61,"column":2},"end":{"line":61,"column":77}},"22":{"start":{"line":64,"column":2},"end":{"line":97,"column":3}},"23":{"start":{"line":65,"column":4},"end":{"line":67,"column":7}},"24":{"start":{"line":66,"column":6},"end":{"line":66,"column":31}},"25":{"start":{"line":70,"column":4},"end":{"line":70,"column":46}},"26":{"start":{"line":71,"column":4},"end":{"line":75,"column":30}},"27":{"start":{"line":77,"column":4},"end":{"line":92,"column":7}},"28":{"start":{"line":78,"column":6},"end":{"line":82,"column":9}},"29":{"start":{"line":85,"column":6},"end":{"line":85,"column":74}},"30":{"start":{"line":87,"column":6},"end":{"line":90,"column":28}},"31":{"start":{"line":91,"column":6},"end":{"line":91,"column":42}},"32":{"start":{"line":94,"column":4},"end":{"line":94,"column":54}},"33":{"start":{"line":95,"column":4},"end":{"line":95,"column":38}},"34":{"start":{"line":96,"column":4},"end":{"line":96,"column":25}},"35":{"start":{"line":100,"column":2},"end":{"line":100,"column":71}},"36":{"start":{"line":101,"column":2},"end":{"line":101,"column":73}},"37":{"start":{"line":103,"column":2},"end":{"line":103,"column":61}},"38":{"start":{"line":104,"column":2},"end":{"line":104,"column":32}},"39":{"start":{"line":106,"column":2},"end":{"line":106,"column":22}},"40":{"start":{"line":108,"column":2},"end":{"line":116,"column":3}},"41":{"start":{"line":111,"column":4},"end":{"line":111,"column":39}},"42":{"start":{"line":112,"column":4},"end":{"line":112,"column":93}},"43":{"start":{"line":114,"column":4},"end":{"line":114,"column":55}},"44":{"start":{"line":115,"column":4},"end":{"line":115,"column":48}},"45":{"start":{"line":118,"column":2},"end":{"line":121,"column":13}},"46":{"start":{"line":119,"column":28},"end":{"line":119,"column":69}},"47":{"start":{"line":123,"column":2},"end":{"line":123,"column":47}},"48":{"start":{"line":124,"column":2},"end":{"line":124,"column":74}},"49":{"start":{"line":128,"column":0},"end":{"line":128,"column":46}},"50":{"start":{"line":132,"column":0},"end":{"line":134,"column":3}},"51":{"start":{"line":133,"column":2},"end":{"line":133,"column":52}},"52":{"start":{"line":138,"column":0},"end":{"line":140,"column":3}},"53":{"start":{"line":139,"column":2},"end":{"line":139,"column":25}},"54":{"start":{"line":148,"column":0},"end":{"line":152,"column":3}},"55":{"start":{"line":149,"column":2},"end":{"line":151,"column":11}},"56":{"start":{"line":150,"column":4},"end":{"line":150,"column":45}},"57":{"start":{"line":160,"column":0},"end":{"line":162,"column":2}},"58":{"start":{"line":161,"column":2},"end":{"line":161,"column":33}},"59":{"start":{"line":172,"column":0},"end":{"line":174,"column":2}},"60":{"start":{"line":173,"column":2},"end":{"line":173,"column":54}},"61":{"start":{"line":177,"column":0},"end":{"line":183,"column":2}},"62":{"start":{"line":178,"column":2},"end":{"line":178,"column":46}},"63":{"start":{"line":180,"column":2},"end":{"line":180,"column":47}},"64":{"start":{"line":181,"column":2},"end":{"line":181,"column":46}},"65":{"start":{"line":182,"column":2},"end":{"line":182,"column":72}},"66":{"start":{"line":186,"column":0},"end":{"line":201,"column":2}},"67":{"start":{"line":187,"column":2},"end":{"line":187,"column":57}},"68":{"start":{"line":189,"column":2},"end":{"line":189,"column":32}},"69":{"start":{"line":190,"column":2},"end":{"line":190,"column":35}},"70":{"start":{"line":192,"column":2},"end":{"line":192,"column":93}},"71":{"start":{"line":193,"column":2},"end":{"line":193,"column":80}},"72":{"start":{"line":195,"column":2},"end":{"line":200,"column":3}},"73":{"start":{"line":196,"column":4},"end":{"line":199,"column":6}},"74":{"start":{"line":204,"column":0},"end":{"line":212,"column":2}},"75":{"start":{"line":205,"column":2},"end":{"line":207,"column":3}},"76":{"start":{"line":206,"column":4},"end":{"line":206,"column":87}},"77":{"start":{"line":208,"column":2},"end":{"line":210,"column":3}},"78":{"start":{"line":209,"column":4},"end":{"line":209,"column":79}},"79":{"start":{"line":211,"column":2},"end":{"line":211,"column":12}}},"branchMap":{"1":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":29},"end":{"line":29,"column":52}},{"start":{"line":29,"column":55},"end":{"line":29,"column":59}}]},"2":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"3":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"4":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":9},"end":{"line":133,"column":24}},{"start":{"line":133,"column":28},"end":{"line":133,"column":51}}]},"5":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"6":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"7":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":2},"end":{"line":208,"column":2}},{"start":{"line":208,"column":2},"end":{"line":208,"column":2}}]}},"code":["/** internal"," *  class BundledAsset"," *"," *  `BundledAsset`s are used for files that need to be processed and"," *  concatenated with other assets, e.g. .js` and `.css` files."," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Asset]]"," **/","","","'use strict';","","","// 3rd-party","var _         = require('lodash');","var sourcemap = require('source-map');","var path      = require('path');","","","// internal","var prop    = require('../common').prop;","var getter  = require('../common').getter;","var Asset   = require('./asset');","","function mapify(path) {","  return path.sep === '\\\\' ? path.replace('\\\\', '/') : path;","}","","function shiftPaths(map, relativePath) {","  map.sources.forEach(function (file, idx) {","    map.sources[idx] = mapify(path.normalize(path.join(relativePath, file)));","  });","}","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  new BundledAsset()"," *"," *  See [[Asset.new]] for details."," **/","var BundledAsset = module.exports = function BundledAsset() {","  var processedAsset, Klass, context, processors, options, result,","      source = '', sourceMap = '', resultSourceNode;","","  Asset.apply(this, arguments);","  prop(this, 'type', 'bundled');","","  processedAsset = this.environment.findAsset(this.pathname, { bundle: false });","","  prop(this, '__processedAsset__',  processedAsset);","  prop(this, '__requiredAssets__',  processedAsset.__requiredAssets__);","  prop(this, '__dependencyPaths__', processedAsset.__dependencyPaths__);","","  // moved from the end just to use context helper function","  Klass       = this.environment.ContextClass;","  context     = new Klass(this.environment, this.logicalPath, this.pathname);","","","  if (!this.environment.isEnabled('source_maps')) {","    this.toArray().forEach(function (dep) {","      source += dep.toString();","    });","  } else {","","    var baseDir = path.dirname(this.pathname);","    resultSourceNode = new sourcemap.SourceNode(","                              null,","                              null,","                              path.basename(this.pathname)","                            );","","    this.toArray().forEach(function (dep) {","      var map = context.createSourceMapObject({","        data: dep.toString(),","        map:  dep.sourceMap,","        file: dep.pathname","      });","","      // Convert dependency paths to be relative to current dir","      shiftPaths(map, path.relative(baseDir, path.dirname(dep.pathname)));","","      var depSourceNone = sourcemap.SourceNode.fromStringWithSourceMap(","                            dep.toString(),","                            new sourcemap.SourceMapConsumer(map)","                          );","      resultSourceNode.add(depSourceNone);","    });","","    result = resultSourceNode.toStringWithSourceMap();","    sourceMap = result.map.toString();","    source = result.code;","  }","","  // prepare to build ourself","  processors  = this.environment.getBundleProcessors(this.contentType);","  options     = { data: source, map: sourceMap, processors: processors };","","  result          = context.evaluate(this.pathname, options);","  this.__source__ = result.data;","","  this.sourceMap = '';","","  if (result.map) {","    // Here we have final map. Need to shift paths again,","    // because all bundled assets are placed to env root","    sourceMap = JSON.parse(result.map);","    shiftPaths(sourceMap, path.dirname(path.relative(this.environment.root, this.pathname)));","    // Set default root to avoid shifting. This var is easy to manipulate later.","    sourceMap.sourceRoot = this.environment.sourceRoot;","    this.sourceMap  = JSON.stringify(sourceMap);","  }","","  this.mtime  = _.chain(this.toArray().concat(this.__dependencyPaths__))","    .map(function (asset) { return new Date(Date.parse(asset.mtime)); })","    .max()","    .value();","","  this.length = Buffer.byteLength(this.source);","  this.digest = this.environment.digest.update(this.source).digest('hex');","};","","","require('util').inherits(BundledAsset, Asset);","","","// See apidoc of [[Asset#buffer]]","getter(BundledAsset.prototype, 'buffer', function () {","  return this.__buffer__ || new Buffer(this.source);","});","","","// See apidoc of [[Asset#source]]","getter(BundledAsset.prototype, 'source', function () {","  return this.__source__;","});","","","/**"," *  BundledAsset#dependencies -> Array"," *"," *  Return an `Array` of `Asset` files that are declared dependencies."," **/","getter(BundledAsset.prototype, 'dependencies', function () {","  return _.reject(this.toArray(), function (asset) {","    return this.__processedAsset__ === asset;","  }, this);","});","","","/**"," *  BundledAsset#toArray() -> Array"," *"," *  Return array of porcessed assets this asset contains of."," **/","BundledAsset.prototype.toArray = function () {","  return this.__requiredAssets__;","};","","","/**"," *  BundledAsset#isFresh(environment) -> Boolean"," *  - environment (Environment|Index)"," *"," *  Checks if Asset is stale by comparing the actual mtime and"," *  digest to the inmemory model."," **/","BundledAsset.prototype.isFresh = function (environment) {","  return this.__processedAsset__.isFresh(environment);","};","","","BundledAsset.prototype.encodeWith = function (hash) {","  Asset.prototype.encodeWith.call(this, hash);","","  hash.source                = this.__source__;","  hash.sourceMap             = this.sourceMap;","  hash.requiredAssetsDigest  = this.__processedAsset__.dependencyDigest;","};","","","BundledAsset.prototype.initWith = function (environment, hash) {","  Asset.prototype.initWith.call(this, environment, hash);","","  this.__source__ = hash.source;","  this.sourceMap  = hash.sourceMap;","","  prop(this, '__processedAsset__',  environment.findAsset(this.pathname, { bundle: false }));","  prop(this, '__requiredAssets__',  this.__processedAsset__.__requiredAssets__);","","  if (this.__processedAsset__.dependencyDigest !== hash.requiredAssetsDigest) {","    throw {","      code:     'unserialize_error',","      message:  'processed asset belongs to a stale environment'","    };","  }","};","","","BundledAsset.prototype.mappingUrlComment = function () {","  if (this.contentType === 'text/css') {","    return '\\n/*# sourceMappingURL=' + path.basename(this.digestPath) + '.map' + ' */';","  }","  if (this.contentType === 'application/javascript') {","    return '\\n//# sourceMappingURL=' + path.basename(this.digestPath) + '.map';","  }","  return '';","};",""],"l":{"18":1,"19":1,"20":1,"24":1,"25":1,"26":1,"28":1,"29":0,"32":1,"33":0,"34":0,"46":1,"47":0,"50":0,"51":0,"53":0,"55":0,"56":0,"57":0,"60":0,"61":0,"64":0,"65":0,"66":0,"70":0,"71":0,"77":0,"78":0,"85":0,"87":0,"91":0,"94":0,"95":0,"96":0,"100":0,"101":0,"103":0,"104":0,"106":0,"108":0,"111":0,"112":0,"114":0,"115":0,"118":0,"119":0,"123":0,"124":0,"128":1,"132":1,"133":0,"138":1,"139":0,"148":1,"149":0,"150":0,"160":1,"161":0,"172":1,"173":0,"177":1,"178":0,"180":0,"181":0,"182":0,"186":1,"187":0,"189":0,"190":0,"192":0,"193":0,"195":0,"196":0,"204":1,"205":0,"206":0,"208":0,"209":0,"211":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/paths.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/paths.js","s":{"1":1,"2":1,"3":0,"4":1,"5":2,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0},"b":{},"f":{"1":0,"2":2,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":36,"loc":{"start":{"line":36,"column":31},"end":{"line":36,"column":43}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":32},"end":{"line":52,"column":44}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":29},"end":{"line":63,"column":45}}},"4":{"name":"(anonymous_4)","line":74,"loc":{"start":{"line":74,"column":28},"end":{"line":74,"column":44}}},"5":{"name":"(anonymous_5)","line":90,"loc":{"start":{"line":90,"column":28},"end":{"line":90,"column":40}}},"6":{"name":"(anonymous_6)","line":104,"loc":{"start":{"line":104,"column":37},"end":{"line":104,"column":49}}}},"statementMap":{"1":{"start":{"line":22,"column":0},"end":{"line":22,"column":41}},"2":{"start":{"line":36,"column":0},"end":{"line":38,"column":3}},"3":{"start":{"line":37,"column":2},"end":{"line":37,"column":33}},"4":{"start":{"line":52,"column":0},"end":{"line":54,"column":3}},"5":{"start":{"line":53,"column":2},"end":{"line":53,"column":30}},"6":{"start":{"line":63,"column":0},"end":{"line":65,"column":2}},"7":{"start":{"line":64,"column":2},"end":{"line":64,"column":36}},"8":{"start":{"line":74,"column":0},"end":{"line":76,"column":2}},"9":{"start":{"line":75,"column":2},"end":{"line":75,"column":35}},"10":{"start":{"line":90,"column":0},"end":{"line":92,"column":2}},"11":{"start":{"line":91,"column":2},"end":{"line":91,"column":38}},"12":{"start":{"line":104,"column":0},"end":{"line":106,"column":3}},"13":{"start":{"line":105,"column":2},"end":{"line":105,"column":50}}},"branchMap":{},"code":["/** internal"," *  mixin Paths"," *"," *  An internal mixin whose public methods are exposed on the [[Environment]]"," *  and [[Index]] classes."," *"," *  Provides helpers to work with `Hike.Trail` instance."," **/","","","// REQUIRED PROPERTIES /////////////////////////////////////////////////////////","//","// - `__trail__` (Hike.Trail)","//","////////////////////////////////////////////////////////////////////////////////","","","'use strict';","","","// internal","var getter = require('../common').getter;","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  Paths#root -> String"," *"," *  Returns [[Environment]] root."," *"," *  All relative paths are expanded with root as its base."," *  To be useful set this to your applications root directory."," **/","getter(module.exports, 'root', function () {","  return this.__trail__.__root__;","});","","","/**"," *  Paths#paths -> Array"," *"," *  Returns an `Array` of path `String`s."," *"," *  These paths will be used for asset logical path lookups."," *"," *  Note that a copy of the `Array` is returned so mutating will"," *  have no affect on the environment. See [[Paths#appendPath]],"," *  [[Paths#prependPath]], and [[Paths#clearPaths]]."," **/","getter(module.exports, 'paths', function () {","  return this.__trail__.paths;","});","","","/**"," *  Paths#prependPath(path) -> Void"," *"," *  Prepend a `path` to the `paths` list."," *  Paths at the end have the least priority."," **/","module.exports.prependPath = function (path) {","  this.__trail__.prependPaths(path);","};","","","/**"," *  Paths#appendPath(path) -> Void"," *"," *  Append a `path` to the `paths` list."," *  Paths at the beginning have a higher priority."," **/","module.exports.appendPath = function (path) {","  this.__trail__.appendPaths(path);","};","","","/**"," *  Paths#clearPaths() -> Array"," *"," *  Clear all paths and start fresh."," *"," *  There is no mechanism for reordering paths, so its best to"," *  completely wipe the paths list and reappend them in the order"," *  you want."," *"," *  Returns list of previously registered paths."," **/","module.exports.clearPaths = function () {","  return this.__trail__.removePaths();","};","","","/**"," *  Paths#extensions -> Array"," *"," *  Returns an `Array` of extensions."," *"," *  These extensions maybe omitted from logical path searches."," *"," *      [\".js\", \".css\", \".coffee\", \".sass\", ...]"," **/","getter(module.exports, 'extensions', function () {","  return [].concat(this.__trail__.__extensions__);","});",""],"l":{"22":1,"36":1,"37":0,"52":1,"53":2,"63":1,"64":0,"74":1,"75":0,"90":1,"91":0,"104":1,"105":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/mime.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/mime.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":2,"7":1,"8":14,"9":1,"10":2},"b":{"1":[0,0],"2":[14,0]},"f":{"1":0,"2":2,"3":14,"4":2},"fnMap":{"1":{"name":"(anonymous_1)","line":37,"loc":{"start":{"line":37,"column":29},"end":{"line":37,"column":44}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":46},"end":{"line":47,"column":58}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":41},"end":{"line":57,"column":57}}},"4":{"name":"(anonymous_4)","line":67,"loc":{"start":{"line":67,"column":34},"end":{"line":67,"column":59}}}},"statementMap":{"1":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}},"2":{"start":{"line":26,"column":0},"end":{"line":26,"column":42}},"3":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"4":{"start":{"line":38,"column":2},"end":{"line":38,"column":72}},"5":{"start":{"line":47,"column":0},"end":{"line":49,"column":3}},"6":{"start":{"line":48,"column":2},"end":{"line":48,"column":36}},"7":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"8":{"start":{"line":58,"column":2},"end":{"line":58,"column":76}},"9":{"start":{"line":67,"column":0},"end":{"line":69,"column":2}},"10":{"start":{"line":68,"column":2},"end":{"line":68,"column":45}}},"branchMap":{"1":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":9},"end":{"line":38,"column":44}},{"start":{"line":38,"column":48},"end":{"line":38,"column":71}}]},"2":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":9},"end":{"line":58,"column":46}},{"start":{"line":58,"column":50},"end":{"line":58,"column":75}}]}},"code":["/** internal"," *  mixin Mime"," *"," *  An internal mixin whose public methods are exposed on the [[Environment]]"," *  and [[Index]] classes."," *"," *  Provides helpers to deal with mime types."," **/","","","// REQUIRED PROPERTIES /////////////////////////////////////////////////////////","//","// - `__mimeTypes__` (Mimoza)","//","////////////////////////////////////////////////////////////////////////////////","","","'use strict';","","","// 3rd-party","var Mimoza  = require('mimoza');","","","// internal","var getter  = require('../common').getter;","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  Mime#getMimeType(ext) -> String"," *"," *  Returns the mime type for the `extension`."," **/","module.exports.getMimeType = function (ext) {","  return this.__mimeTypes__.getMimeType(ext) || Mimoza.getMimeType(ext);","};","","","/**"," *  Mime#registeredMimeTypes -> Mimoza"," *"," *  Returns a copy of `Mimoza` instance with explicitly registered mime types."," **/","getter(module.exports, 'registeredMimeTypes', function () {","  return this.__mimeTypes__.clone();","});","","","/**"," *  Mime#getExtensionForMimeType(type) -> String"," *"," *  Returns extension for mime `type`."," **/","module.exports.getExtensionForMimeType = function (type) {","  return this.__mimeTypes__.getExtension(type) || Mimoza.getExtension(type);","};","","","/**"," *  Mime#registerMimeType(type, ext) -> Void"," *"," *  Register new mime type."," **/","module.exports.registerMimeType = function (mimeType, ext) {","  this.__mimeTypes__.register(mimeType, ext);","};",""],"l":{"22":1,"26":1,"37":1,"38":0,"47":1,"48":2,"57":1,"58":14,"67":1,"68":2}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/caching.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/caching.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"expandKey","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":30}}},"2":{"name":"cacheSet","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":35}}},"3":{"name":"cacheGet","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":29}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":28},"end":{"line":48,"column":48}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":35}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":39}},"4":{"start":{"line":27,"column":0},"end":{"line":31,"column":1}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":43}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":67}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":29}},"8":{"start":{"line":34,"column":0},"end":{"line":37,"column":1}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":44}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":45}},"11":{"start":{"line":40,"column":0},"end":{"line":45,"column":1}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":50}},"13":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":16}},"15":{"start":{"line":48,"column":0},"end":{"line":76,"column":2}},"16":{"start":{"line":49,"column":2},"end":{"line":49,"column":18}},"17":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":16}},"19":{"start":{"line":55,"column":2},"end":{"line":55,"column":53}},"20":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"21":{"start":{"line":57,"column":4},"end":{"line":57,"column":17}},"22":{"start":{"line":60,"column":2},"end":{"line":60,"column":15}},"23":{"start":{"line":61,"column":2},"end":{"line":75,"column":3}},"24":{"start":{"line":62,"column":4},"end":{"line":62,"column":14}},"25":{"start":{"line":63,"column":4},"end":{"line":63,"column":27}},"26":{"start":{"line":66,"column":4},"end":{"line":66,"column":31}},"27":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"28":{"start":{"line":71,"column":6},"end":{"line":71,"column":43}},"29":{"start":{"line":74,"column":4},"end":{"line":74,"column":17}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":10}},{"start":{"line":42,"column":14},"end":{"line":42,"column":57}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"5":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":11}},{"start":{"line":56,"column":15},"end":{"line":56,"column":34}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]}},"code":["/** internal"," *  mixin Caching"," *"," *  An internal mixin whose public methods are exposed on the [[Environment]]"," *  and [[Index]] classes."," **/","","","////////////////////////////////////////////////////////////////////////////////","","","'use strict';","","","// stdlib","var join    = require('path').join;","var crypto  = require('crypto');","","","// internal","var Asset = require('../assets/asset');","","","////////////////////////////////////////////////////////////////////////////////","","","function expandKey(self, key) {","  key = String(key).replace(self.root, '');","  key = crypto.createHash('md5').update(key, 'utf8').digest('hex');","  return join('mincer', key);","}","","","function cacheSet(self, key, hash) {","  hash._version = self.digest.digest('hex');","  self.cache.set(expandKey(self, key), hash);","}","","","function cacheGet(self, key) {","  var hash = self.cache.get(expandKey(self, key));","  if (hash && hash._version === self.digest.digest('hex')) {","    return hash;","  }","}","","","module.exports.cacheAsset = function (path, fn) {","  var asset, hash;","","  if (!this.cache) {","    return fn();","  }","","  asset = Asset.fromHash(this, cacheGet(this, path));","  if (asset && asset.isFresh(this)) {","    return asset;","  }","","  asset = fn();","  if (asset) {","    hash = {};","    asset.encodeWith(hash);","","    // Save the asset to its path","    cacheSet(this, path, hash);","","    // Since path maybe a logical or full pathname, save the","    // asset its its full path too","    if (path !== asset.pathname) {","      cacheSet(this, asset.pathname, hash);","    }","","    return asset;","  }","};",""],"l":{"16":1,"17":1,"21":1,"27":1,"28":0,"29":0,"30":0,"34":1,"35":0,"36":0,"40":1,"41":0,"42":0,"43":0,"48":1,"49":0,"51":0,"52":0,"55":0,"56":0,"57":0,"60":0,"61":0,"62":0,"63":0,"66":0,"70":0,"71":0,"74":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/processing.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/processing.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":2,"8":0,"9":2,"10":1,"11":2,"12":0,"13":2,"14":1,"15":2,"16":0,"17":2,"18":1,"19":4,"20":4,"21":0,"22":0,"23":4,"24":1,"25":1,"26":1,"27":0,"28":0,"29":1,"30":1,"31":1,"32":1,"33":0,"34":0,"35":1,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":22,"56":22,"57":22,"58":14,"59":14,"60":14},"b":{"1":[0,2],"2":[0,2],"3":[0,2],"4":[0,4],"5":[0,1],"6":[0,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[14,8],"13":[14,0]},"f":{"1":0,"2":2,"3":2,"4":2,"5":4,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":22},"fnMap":{"1":{"name":"(anonymous_1)","line":46,"loc":{"start":{"line":46,"column":42},"end":{"line":46,"column":54}}},"2":{"name":"(anonymous_2)","line":61,"loc":{"start":{"line":61,"column":34},"end":{"line":61,"column":54}}},"3":{"name":"(anonymous_3)","line":78,"loc":{"start":{"line":78,"column":35},"end":{"line":78,"column":55}}},"4":{"name":"(anonymous_4)","line":99,"loc":{"start":{"line":99,"column":37},"end":{"line":99,"column":57}}},"5":{"name":"(anonymous_5)","line":120,"loc":{"start":{"line":120,"column":38},"end":{"line":120,"column":69}}},"6":{"name":"(anonymous_6)","line":145,"loc":{"start":{"line":145,"column":39},"end":{"line":145,"column":70}}},"7":{"name":"(anonymous_7)","line":170,"loc":{"start":{"line":170,"column":41},"end":{"line":170,"column":72}}},"8":{"name":"(anonymous_8)","line":189,"loc":{"start":{"line":189,"column":40},"end":{"line":189,"column":67}}},"9":{"name":"(anonymous_9)","line":193,"loc":{"start":{"line":193,"column":31},"end":{"line":193,"column":45}}},"10":{"name":"(anonymous_10)","line":209,"loc":{"start":{"line":209,"column":41},"end":{"line":209,"column":68}}},"11":{"name":"(anonymous_11)","line":213,"loc":{"start":{"line":213,"column":31},"end":{"line":213,"column":45}}},"12":{"name":"(anonymous_12)","line":229,"loc":{"start":{"line":229,"column":43},"end":{"line":229,"column":70}}},"13":{"name":"(anonymous_13)","line":233,"loc":{"start":{"line":233,"column":31},"end":{"line":233,"column":45}}},"14":{"name":"(anonymous_14)","line":248,"loc":{"start":{"line":248,"column":34},"end":{"line":248,"column":56}}}},"statementMap":{"1":{"start":{"line":28,"column":0},"end":{"line":28,"column":26}},"2":{"start":{"line":32,"column":0},"end":{"line":32,"column":40}},"3":{"start":{"line":33,"column":0},"end":{"line":33,"column":44}},"4":{"start":{"line":46,"column":0},"end":{"line":48,"column":3}},"5":{"start":{"line":47,"column":2},"end":{"line":47,"column":61}},"6":{"start":{"line":61,"column":0},"end":{"line":66,"column":2}},"7":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"8":{"start":{"line":63,"column":4},"end":{"line":63,"column":56}},"9":{"start":{"line":65,"column":2},"end":{"line":65,"column":40}},"10":{"start":{"line":78,"column":0},"end":{"line":83,"column":2}},"11":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"12":{"start":{"line":80,"column":4},"end":{"line":80,"column":57}},"13":{"start":{"line":82,"column":2},"end":{"line":82,"column":41}},"14":{"start":{"line":99,"column":0},"end":{"line":104,"column":2}},"15":{"start":{"line":100,"column":2},"end":{"line":102,"column":3}},"16":{"start":{"line":101,"column":4},"end":{"line":101,"column":59}},"17":{"start":{"line":103,"column":2},"end":{"line":103,"column":43}},"18":{"start":{"line":120,"column":0},"end":{"line":129,"column":2}},"19":{"start":{"line":121,"column":2},"end":{"line":121,"column":11}},"20":{"start":{"line":123,"column":2},"end":{"line":126,"column":3}},"21":{"start":{"line":124,"column":4},"end":{"line":124,"column":18}},"22":{"start":{"line":125,"column":4},"end":{"line":125,"column":39}},"23":{"start":{"line":128,"column":2},"end":{"line":128,"column":51}},"24":{"start":{"line":145,"column":0},"end":{"line":154,"column":2}},"25":{"start":{"line":146,"column":2},"end":{"line":146,"column":11}},"26":{"start":{"line":148,"column":2},"end":{"line":151,"column":3}},"27":{"start":{"line":149,"column":4},"end":{"line":149,"column":18}},"28":{"start":{"line":150,"column":4},"end":{"line":150,"column":39}},"29":{"start":{"line":153,"column":2},"end":{"line":153,"column":52}},"30":{"start":{"line":170,"column":0},"end":{"line":179,"column":2}},"31":{"start":{"line":171,"column":2},"end":{"line":171,"column":11}},"32":{"start":{"line":173,"column":2},"end":{"line":176,"column":3}},"33":{"start":{"line":174,"column":4},"end":{"line":174,"column":18}},"34":{"start":{"line":175,"column":4},"end":{"line":175,"column":39}},"35":{"start":{"line":178,"column":2},"end":{"line":178,"column":54}},"36":{"start":{"line":189,"column":0},"end":{"line":199,"column":2}},"37":{"start":{"line":190,"column":2},"end":{"line":190,"column":56}},"38":{"start":{"line":192,"column":2},"end":{"line":196,"column":3}},"39":{"start":{"line":193,"column":4},"end":{"line":195,"column":7}},"40":{"start":{"line":194,"column":6},"end":{"line":194,"column":59}},"41":{"start":{"line":198,"column":2},"end":{"line":198,"column":69}},"42":{"start":{"line":209,"column":0},"end":{"line":219,"column":2}},"43":{"start":{"line":210,"column":2},"end":{"line":210,"column":57}},"44":{"start":{"line":212,"column":2},"end":{"line":216,"column":3}},"45":{"start":{"line":213,"column":4},"end":{"line":215,"column":7}},"46":{"start":{"line":214,"column":6},"end":{"line":214,"column":59}},"47":{"start":{"line":218,"column":2},"end":{"line":218,"column":70}},"48":{"start":{"line":229,"column":0},"end":{"line":239,"column":2}},"49":{"start":{"line":230,"column":2},"end":{"line":230,"column":59}},"50":{"start":{"line":232,"column":2},"end":{"line":236,"column":3}},"51":{"start":{"line":233,"column":4},"end":{"line":235,"column":7}},"52":{"start":{"line":234,"column":6},"end":{"line":234,"column":48}},"53":{"start":{"line":238,"column":2},"end":{"line":238,"column":72}},"54":{"start":{"line":248,"column":0},"end":{"line":259,"column":2}},"55":{"start":{"line":249,"column":2},"end":{"line":249,"column":17}},"56":{"start":{"line":251,"column":2},"end":{"line":251,"column":39}},"57":{"start":{"line":253,"column":2},"end":{"line":258,"column":3}},"58":{"start":{"line":254,"column":4},"end":{"line":254,"column":69}},"59":{"start":{"line":255,"column":4},"end":{"line":257,"column":5}},"60":{"start":{"line":256,"column":6},"end":{"line":256,"column":53}}},"branchMap":{"1":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"2":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"3":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"4":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"5":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"6":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"7":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"8":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":14},"end":{"line":194,"column":21}},{"start":{"line":194,"column":25},"end":{"line":194,"column":57}}]},"9":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"10":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":14},"end":{"line":214,"column":21}},{"start":{"line":214,"column":25},"end":{"line":214,"column":57}}]},"11":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":2},"end":{"line":232,"column":2}},{"start":{"line":232,"column":2},"end":{"line":232,"column":2}}]},"12":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"13":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":4},"end":{"line":255,"column":4}},{"start":{"line":255,"column":4},"end":{"line":255,"column":4}}]}},"code":["/** internal"," *  mixin Processing"," *"," *  An internal mixin whose public methods are exposed on the [[Environment]]"," *  and [[Index]] classes."," **/","","","// REQUIRED MIXINS /////////////////////////////////////////////////////////////","//","// - [[Mime]]","// - [[Paths]]","//","// REQUIRED PROPERTIES /////////////////////////////////////////////////////////","//","// - `__trail__` (Hike.Trail)","// - `__preProcessors__` (Hash)","// - `__postProcessors__` (Hash)","// - `__bundleProcessors__` (Hash)","//","////////////////////////////////////////////////////////////////////////////////","","","'use strict';","","","// 3rd-party","var _ = require('lodash');","","","// internal","var Processor = require('../processor');","var getter    = require('../common').getter;","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  Processing#formatExtension -> Array"," *"," *  Returns an `Array` of format extension `String`s."," *"," *      // => ['.js', '.css']"," **/","getter(module.exports, 'formatExtension', function () {","  return _.difference(this.extensions, _.keys(this.engines));","});","","","/**"," *  Processing#getPreProcessors(mimeType = null) -> Array|Types.Hash"," *"," *  Returns an `Array` of `Processor` classes. If a `mime_type`"," *  argument is supplied, the processors registered under that"," *  extension will be returned."," *"," *  Preprocessors are ran before Postprocessors and Engine"," *  processors."," **/","module.exports.getPreProcessors = function (mimeType) {","  if (mimeType) {","    return this.__preProcessors__.get(mimeType).slice();","  }","  return this.__preProcessors__.clone();","};","","","/**"," *  Processing#getPostProcessors(mimeType = null) -> Array|Types.Hash"," *"," *  Returns an `Array` of `Processor` classes. If a `mime_type`"," *  argument is supplied, the processors registered under that"," *  extension will be returned."," *"," *  Postprocessors are ran after Preprocessors and Engine processors."," **/","module.exports.getPostProcessors = function (mimeType) {","  if (mimeType) {","    return this.__postProcessors__.get(mimeType).slice();","  }","  return this.__postProcessors__.clone();","};","","","/**"," *  Processing#getBundleProcessors(mimeType = null) -> Array|Types.Hash"," *"," *  Returns an `Array` of `Processor` classes. If a `mimeType`"," *  argument is supplied, the processors registered under that"," *  extension will be returned."," *"," *  Bundle Processors are ran on concatenated assets rather than"," *  individual files."," *"," *  All `Processor`s must follow the [[Template]] interface. It is"," *  recommended to subclass [[Template]]."," **/","module.exports.getBundleProcessors = function (mimeType) {","  if (mimeType) {","    return this.__bundleProcessors__.get(mimeType).slice();","  }","  return this.__bundleProcessors__.clone();","};","","","/**"," *  Processing#registerPreProcessor(mimeType, klass[, fn]) -> Void"," *"," *  Registers a new preprocessor `klass` for `mime_type`."," *"," *      registerPreprocessor('text/css', DirectiveProcessor);"," *"," *  A function can be passed for to create a shorthand processor."," *"," *      registerPreProcessor('text/css', 'my_processor', function (context, data, callback) {"," *        callback(null, data.replace(...));"," *      });"," **/","module.exports.registerPreProcessor = function (mimeType, klass, fn) {","  var name;","","  if (fn) {","    name  = klass;","    klass = Processor.create(name, fn);","  }","","  this.__preProcessors__.get(mimeType).push(klass);","};","","","/**"," *  Processing#registerPostProcessor(mimeType, klass[, fn]) -> Void"," *"," *  Registers a new Postprocessor `klass` for `mime_type`."," *"," *      registerPostprocessor('text/css', DirectiveProcessor);"," *"," *  A function can be passed for to create a shorthand processor."," *"," *      registerPostprocessor('text/css', 'my_processor', function (context, data, callback) {"," *        callback(null, data.replace(...));"," *      });"," **/","module.exports.registerPostProcessor = function (mimeType, klass, fn) {","  var name;","","  if (fn) {","    name  = klass;","    klass = Processor.create(name, fn);","  }","","  this.__postProcessors__.get(mimeType).push(klass);","};","","","/**"," *  Processing#registerBundleProcessor(mimeType, klass[, fn]) -> Void"," *"," *  Registers a new BundleProcessor `klass` for `mime_type`."," *"," *      registerBundleProcessor('text/css', CharsetNormalizer);"," *"," *  A function can be passed for to create a shorthand processor."," *"," *      registerBundleProcessor('text/css', 'my_processor', function (context, data, callback) {"," *        callback(null, data.replace(...));"," *      });"," **/","module.exports.registerBundleProcessor = function (mimeType, klass, fn) {","  var name;","","  if (fn) {","    name  = klass;","    klass = Processor.create(name, fn);","  }","","  this.__bundleProcessors__.get(mimeType).push(klass);","};","","","/**"," *  Processing#unregisterPreProcessor(mimeType, klass) -> Void"," *"," *  Remove Preprocessor `klass` for `mime_type`."," *"," *      unregisterPreprocessor('text/css', DirectiveProcessor);"," **/","module.exports.unregisterPreProcessor = function (mimeType, klass) {","  var processors = this.__preProcessors__.get(mimeType);","","  if (_.isString(klass)) {","    klass = _.find(processors, function (fn) {","      return (fn.name && fn.name === 'Processor:' + klass);","    });","  }","","  this.__preProcessors__.set(mimeType, _.without(processors, klass));","};","","","/**"," *  Processing#unregisterPostProcessor(mimeType, klass) -> Void"," *"," *  Remove Postprocessor `klass` for `mime_type`."," *"," *      unregisterPostprocessor('text/css', DirectiveProcessor);"," **/","module.exports.unregisterPostProcessor = function (mimeType, klass) {","  var processors = this.__postProcessors__.get(mimeType);","","  if (_.isString(klass)) {","    klass = _.find(processors, function (fn) {","      return (fn.name && fn.name === 'Processor:' + klass);","    });","  }","","  this.__postProcessors__.set(mimeType, _.without(processors, klass));","};","","","/**"," *  Processing#unregisterBundleProcessor(mimeType, klass) -> Void"," *"," *  Remove BundleProcessor `klass` for `mime_type`."," *"," *      unregisterBundleProcessor('text/css', CharsetNormalizer);"," **/","module.exports.unregisterBundleProcessor = function (mimeType, klass) {","  var processors = this.__bundleProcessors__.get(mimeType);","","  if (_.isString(klass)) {","    klass = _.find(processors, function (fn) {","      return (fn.name === 'Processor:' + klass);","    });","  }","","  this.__bundleProcessors__.set(mimeType, _.without(processors, klass));","};","","","/** internal"," *  Processing#addEngineToTrail(ext, klass) -> Void"," *"," *  Registers extension (and corresponding aliases) for given `klass` in"," *  the `trail`."," **/","module.exports.addEngineToTrail = function (ext, klass) {","  var format_ext;","","  this.__trail__.appendExtensions(ext);","","  if (klass.defaultMimeType) {","    format_ext = this.getExtensionForMimeType(klass.defaultMimeType);","    if (format_ext) {","      this.__trail__.aliasExtension(format_ext, ext);","    }","  }","};",""],"l":{"28":1,"32":1,"33":1,"46":1,"47":0,"61":1,"62":2,"63":0,"65":2,"78":1,"79":2,"80":0,"82":2,"99":1,"100":2,"101":0,"103":2,"120":1,"121":4,"123":4,"124":0,"125":0,"128":4,"145":1,"146":1,"148":1,"149":0,"150":0,"153":1,"170":1,"171":1,"173":1,"174":0,"175":0,"178":1,"189":1,"190":0,"192":0,"193":0,"194":0,"198":0,"209":1,"210":0,"212":0,"213":0,"214":0,"218":0,"229":1,"230":0,"232":0,"233":0,"234":0,"238":0,"248":1,"249":22,"251":22,"253":22,"254":14,"255":14,"256":14}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/processor.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/processor.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"Processor","line":48,"loc":{"start":{"line":48,"column":33},"end":{"line":48,"column":54}}},"2":{"name":"(anonymous_2)","line":58,"loc":{"start":{"line":58,"column":31},"end":{"line":58,"column":50}}},"3":{"name":"(anonymous_3)","line":72,"loc":{"start":{"line":72,"column":19},"end":{"line":72,"column":41}}},"4":{"name":"(anonymous_4)","line":79,"loc":{"start":{"line":79,"column":10},"end":{"line":79,"column":22}}}},"statementMap":{"1":{"start":{"line":35,"column":0},"end":{"line":35,"column":40}},"2":{"start":{"line":39,"column":0},"end":{"line":39,"column":26}},"3":{"start":{"line":43,"column":0},"end":{"line":43,"column":37}},"4":{"start":{"line":44,"column":0},"end":{"line":44,"column":40}},"5":{"start":{"line":48,"column":0},"end":{"line":50,"column":2}},"6":{"start":{"line":49,"column":2},"end":{"line":49,"column":34}},"7":{"start":{"line":53,"column":0},"end":{"line":53,"column":30}},"8":{"start":{"line":58,"column":0},"end":{"line":64,"column":2}},"9":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"10":{"start":{"line":60,"column":4},"end":{"line":60,"column":84}},"11":{"start":{"line":63,"column":2},"end":{"line":63,"column":55}},"12":{"start":{"line":72,"column":0},"end":{"line":86,"column":2}},"13":{"start":{"line":73,"column":2},"end":{"line":73,"column":12}},"14":{"start":{"line":75,"column":2},"end":{"line":77,"column":3}},"15":{"start":{"line":76,"column":4},"end":{"line":76,"column":84}},"16":{"start":{"line":79,"column":2},"end":{"line":79,"column":60}},"17":{"start":{"line":79,"column":24},"end":{"line":79,"column":57}},"18":{"start":{"line":80,"column":2},"end":{"line":80,"column":29}},"19":{"start":{"line":82,"column":2},"end":{"line":82,"column":53}},"20":{"start":{"line":83,"column":2},"end":{"line":83,"column":32}},"21":{"start":{"line":85,"column":2},"end":{"line":85,"column":15}}},"branchMap":{"1":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"2":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]}},"code":["/** internal"," *  class Processor"," *"," *  Used to create custom processors without need to extend [[Template]] by"," *  simply providing a function to the processor registration methods:"," *"," *      var name = 'my-pre-processor';"," *      var func = function (context, data, callback) {"," *        callback(null, data.toLowerCase());"," *      };"," *"," *      // register custom pre-processor"," *      environment.registerPreProcessor('text/css', name, func);"," *"," *      // unregister custom pre-processor"," *      environment.unregisterPreProcessor('text/css', name);"," *"," *"," *  ##### See Also:"," *"," *  - [[Context]]"," *  - [[Processing]]"," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Template]]"," **/","","","'use strict';","","","// stdlib","var inherits = require('util').inherits;","","","// 3rd-party","var _ = require('lodash');","","","// internal","var Template = require('./template');","var prop     = require('./common').prop;","","","// Class constructor","var Processor = module.exports = function Processor() {","  Template.apply(this, arguments);","};","","","inherits(Processor, Template);","","","","// Run processor","Processor.prototype.evaluate = function (context) {","  if (Processor === this.constructor) {","    throw new Error('Processor can\\'t be used directly. Use `Processor.create()`.');","  }","","  return this.constructor.__func__(context, this.data);","};","","","/**"," *  Processor.create(name, func) -> Function"," *"," *  Returns new `Processor` subclass."," **/","Processor.create = function (name, func) {","  var Klass;","","  if (!_.isFunction(func)) {","    throw new Error('Processor#create() expects second argument to be a function.');","  }","","  Klass = function () { Processor.apply(this, arguments); };","  inherits(Klass, Processor);","","  prop(Klass, '__name__', 'Processor(' + name + ')');","  prop(Klass, '__func__', func);","","  return Klass;","};",""],"l":{"35":1,"39":1,"43":1,"44":1,"48":1,"49":0,"53":1,"58":1,"59":0,"60":0,"63":0,"72":1,"73":0,"75":0,"76":0,"79":0,"80":0,"82":0,"83":0,"85":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/compressing.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/compressing.js","s":{"1":1,"2":1,"3":2,"4":1,"5":3,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":2,"2":3,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":31,"loc":{"start":{"line":31,"column":32},"end":{"line":31,"column":44}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":36},"end":{"line":43,"column":69}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":7},"end":{"line":73,"column":19}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":7},"end":{"line":78,"column":29}}},"5":{"name":"(anonymous_5)","line":126,"loc":{"start":{"line":126,"column":7},"end":{"line":126,"column":19}}},"6":{"name":"(anonymous_6)","line":131,"loc":{"start":{"line":131,"column":7},"end":{"line":131,"column":29}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":20,"column":26}},"2":{"start":{"line":31,"column":0},"end":{"line":33,"column":2}},"3":{"start":{"line":32,"column":2},"end":{"line":32,"column":38}},"4":{"start":{"line":43,"column":0},"end":{"line":45,"column":2}},"5":{"start":{"line":44,"column":2},"end":{"line":44,"column":51}},"6":{"start":{"line":71,"column":0},"end":{"line":99,"column":3}},"7":{"start":{"line":74,"column":4},"end":{"line":74,"column":42}},"8":{"start":{"line":79,"column":4},"end":{"line":79,"column":26}},"9":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"10":{"start":{"line":82,"column":6},"end":{"line":82,"column":67}},"11":{"start":{"line":85,"column":4},"end":{"line":89,"column":5}},"12":{"start":{"line":86,"column":6},"end":{"line":86,"column":42}},"13":{"start":{"line":87,"column":6},"end":{"line":87,"column":71}},"14":{"start":{"line":88,"column":6},"end":{"line":88,"column":13}},"15":{"start":{"line":91,"column":4},"end":{"line":95,"column":5}},"16":{"start":{"line":92,"column":6},"end":{"line":92,"column":74}},"17":{"start":{"line":93,"column":6},"end":{"line":93,"column":65}},"18":{"start":{"line":94,"column":6},"end":{"line":94,"column":13}},"19":{"start":{"line":97,"column":4},"end":{"line":97,"column":57}},"20":{"start":{"line":124,"column":0},"end":{"line":152,"column":3}},"21":{"start":{"line":127,"column":4},"end":{"line":127,"column":41}},"22":{"start":{"line":132,"column":4},"end":{"line":132,"column":40}},"23":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"24":{"start":{"line":135,"column":6},"end":{"line":135,"column":66}},"25":{"start":{"line":138,"column":4},"end":{"line":142,"column":5}},"26":{"start":{"line":139,"column":6},"end":{"line":139,"column":41}},"27":{"start":{"line":140,"column":6},"end":{"line":140,"column":70}},"28":{"start":{"line":141,"column":6},"end":{"line":141,"column":13}},"29":{"start":{"line":144,"column":4},"end":{"line":148,"column":5}},"30":{"start":{"line":145,"column":6},"end":{"line":145,"column":73}},"31":{"start":{"line":146,"column":6},"end":{"line":146,"column":64}},"32":{"start":{"line":147,"column":6},"end":{"line":147,"column":13}},"33":{"start":{"line":150,"column":4},"end":{"line":150,"column":57}}},"branchMap":{"1":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":11},"end":{"line":74,"column":33}},{"start":{"line":74,"column":37},"end":{"line":74,"column":41}}]},"2":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"3":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"4":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"5":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":11},"end":{"line":127,"column":32}},{"start":{"line":127,"column":36},"end":{"line":127,"column":40}}]},"6":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"7":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"8":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]}},"code":["/** internal"," *  mixin Compressing"," *"," *  An internal mixin whose public methods are exposed on the [[Environment]]"," *  and [[Index]] classes."," **/","","","// REQUIRED PROPERTIES /////////////////////////////////////////////////////////","//","// - `__compressors__` (Hash)","//","////////////////////////////////////////////////////////////////////////////////","","","'use strict';","","","// 3rd-party","var _ = require('lodash');","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  Compressing#getCompressors() -> Object"," *"," *  Returns compressors groupped by mime-type."," **/","module.exports.getCompressors = function () {","  return this.__compressors__.clone();","};","","","/**"," *  Compressing#registerCompressor(mimeType, name, klass) -> Void"," *"," *  Registers a compressor `klass` as `name` for `mimeType`."," *"," *      environment.registerCompressor('text/css', 'sass', SassCompressor);"," **/","module.exports.registerCompressor = function (mimeType, name, klass) {","  this.__compressors__.get(mimeType)[name] = klass;","};","","","","/**"," *  Compressing#cssCompressor -> Template"," *"," *  CSS compression function."," *"," *  This is a magical property, when you assign your function, it automagically"," *  creates an instance of [[Processor]] with provided function as internal"," *  worker. The function you provide expected to have follwoing signature:"," *"," *      env.cssCompressor = function (context, data) {"," *        var compressed_data;"," *        // ... do something with data..."," *        return compressed_data;"," *      };"," *"," *  Also you can use predifined CSS compressor [CssoCompressor] by passing it's"," *  identifier as a string:"," *"," *      env.cssCompressor = 'csso';"," *"," *  Throws Error if compressor is not a function or not registered one."," **/","Object.defineProperty(module.exports, 'cssCompressor', {","  // Return JS compressor or nil if none is set","  get: function () {","    return this.__cssCompressor__ || null;","  },","","  // Assign a compressor to run on `text/css` assets.","  set: function (compressor) {","    var mime = 'text/css';","","    if (this.__cssCompressor__) {","      this.unregisterBundleProcessor(mime, this.__cssCompressor__);","    }","","    if (_.isFunction(compressor)) {","      this.__cssCompressor__ = compressor;","      this.registerBundleProcessor(mime, 'css_compressor', compressor);","      return;","    }","","    if (this.__compressors__.get(mime)[compressor]) {","      this.__cssCompressor__ = this.__compressors__.get(mime)[compressor];","      this.registerBundleProcessor(mime, this.__cssCompressor__);","      return;","    }","","    throw new Error('Unknown compressor: ' + compressor);","  }","});","","","/**"," *  Compressing#jsCompressor -> Template"," *"," *  JavaScript compression function."," *"," *  This is a magical property, when you assign your function, it automagically"," *  creates an instance of [[Processor]] with provided function as internal"," *  worker. The function you provide expected to have follwoing signature:"," *"," *      env.jsCompressor = function (context, data) {"," *        var compressed_data;"," *        // ... do something with data..."," *        return compressed_data;"," *      };"," *"," *  Also you can use predifined JS compressor [UglifyCompressor] by passing it's"," *  identifier as a string:"," *"," *      env.jsCompressor = 'uglify';"," *"," *  Throws Error if compressor is not a function or not registered one."," **/","Object.defineProperty(module.exports, 'jsCompressor', {","  // Return JS compressor or nil if none is set","  get: function () {","    return this.__jsCompressor__ || null;","  },","","  // Assign a compressor to run on `application/javascript` assets.","  set: function (compressor) {","    var mime = 'application/javascript';","","    if (this.__jsCompressor__) {","      this.unregisterBundleProcessor(mime, this.__jsCompressor__);","    }","","    if (_.isFunction(compressor)) {","      this.__jsCompressor__ = compressor;","      this.registerBundleProcessor(mime, 'js_compressor', compressor);","      return;","    }","","    if (this.__compressors__.get(mime)[compressor]) {","      this.__jsCompressor__ = this.__compressors__.get(mime)[compressor];","      this.registerBundleProcessor(mime, this.__jsCompressor__);","      return;","    }","","    throw new Error('Unknown compressor: ' + compressor);","  }","});",""],"l":{"20":1,"31":1,"32":2,"43":1,"44":3,"71":1,"74":0,"79":0,"81":0,"82":0,"85":0,"86":0,"87":0,"88":0,"91":0,"92":0,"93":0,"94":0,"97":0,"124":1,"127":0,"132":0,"134":0,"135":0,"138":0,"139":0,"140":0,"141":0,"144":0,"145":0,"146":0,"147":0,"150":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/configuring.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/configuring.js","s":{"1":1,"2":1,"3":2,"4":1,"5":3,"6":3,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":2,"2":3,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":31,"loc":{"start":{"line":31,"column":35},"end":{"line":31,"column":47}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":39},"end":{"line":50,"column":64}}},"3":{"name":"configuration","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":35}}},"4":{"name":"(anonymous_4)","line":77,"loc":{"start":{"line":77,"column":27},"end":{"line":77,"column":43}}},"5":{"name":"(anonymous_5)","line":91,"loc":{"start":{"line":91,"column":24},"end":{"line":91,"column":40}}},"6":{"name":"(anonymous_6)","line":111,"loc":{"start":{"line":111,"column":25},"end":{"line":111,"column":41}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":20,"column":26}},"2":{"start":{"line":31,"column":0},"end":{"line":33,"column":2}},"3":{"start":{"line":32,"column":2},"end":{"line":32,"column":46}},"4":{"start":{"line":50,"column":0},"end":{"line":53,"column":2}},"5":{"start":{"line":51,"column":2},"end":{"line":51,"column":53}},"6":{"start":{"line":52,"column":2},"end":{"line":52,"column":42}},"7":{"start":{"line":57,"column":0},"end":{"line":63,"column":1}},"8":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"9":{"start":{"line":59,"column":4},"end":{"line":59,"column":54}},"10":{"start":{"line":62,"column":2},"end":{"line":62,"column":39}},"11":{"start":{"line":77,"column":0},"end":{"line":79,"column":2}},"12":{"start":{"line":78,"column":2},"end":{"line":78,"column":55}},"13":{"start":{"line":91,"column":0},"end":{"line":99,"column":2}},"14":{"start":{"line":92,"column":2},"end":{"line":92,"column":41}},"15":{"start":{"line":94,"column":2},"end":{"line":96,"column":3}},"16":{"start":{"line":95,"column":4},"end":{"line":95,"column":24}},"17":{"start":{"line":98,"column":2},"end":{"line":98,"column":27}},"18":{"start":{"line":111,"column":0},"end":{"line":119,"column":2}},"19":{"start":{"line":112,"column":2},"end":{"line":112,"column":41}},"20":{"start":{"line":114,"column":2},"end":{"line":116,"column":3}},"21":{"start":{"line":115,"column":4},"end":{"line":115,"column":25}},"22":{"start":{"line":118,"column":2},"end":{"line":118,"column":28}}},"branchMap":{"1":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"2":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":2},"end":{"line":94,"column":2}},{"start":{"line":94,"column":2},"end":{"line":94,"column":2}}]},"3":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]}},"code":["/** internal"," *  mixin Configuring"," *"," *  An internal mixin whose public methods are exposed on the [[Environment]]"," *  and [[Index]] classes."," **/","","","// REQUIRED PROPERTIES /////////////////////////////////////////////////////////","//","// - `__configurations__` (Hash)","//","////////////////////////////////////////////////////////////////////////////////","","","'use strict';","","","// 3rd-party","var _ = require('lodash');","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  Configuring#getConfigurations() -> Object"," *"," *  Returns copy of registered configurations."," **/","module.exports.getConfigurations = function () {","  return _.cloneDeep(this.__configurations__);","};","","","/**"," *  Configuring#registerConfiguration(name, options) -> Void"," *"," *  ##### Example"," *"," *      Mincer.registerConfiguration('autoprefixer', {"," *        enable: function (self) {"," *          self.registerPostProcessor('text/css', Mincer.Autoprefixer);"," *        },"," *        disable: function (self) {"," *          self.unregisterPostProcessor('text/css', Mincer.Autoprefixer);"," *        }"," *      });"," **/","module.exports.registerConfiguration = function (name, options) {","  options = _.assign({ state: 'disabled' }, options);","  this.__configurations__[name] = options;","};","","","// unified access to a config hash by name","function configuration(self, name) {","  if (!self.__configurations__[name]) {","    throw new Error('Unknown configuration: ' + name);","  }","","  return self.__configurations__[name];","}","","","/**"," *  Configuring#isEnabled(name) -> Void"," *"," *  Tells whenever given configuration enabled or not."," *"," *  ##### Example"," *"," *      if (env.isEnabled('source_maps')) {"," *        // ..."," *      }"," **/","module.exports.isEnabled = function (name) {","  return configuration(this, name).state === 'enabled';","};","","","/**"," *  Configuring#enable(name) -> Void"," *"," *  Enable configuration."," *"," *  ##### Example"," *"," *      env.enable('autoprefixer');"," **/","module.exports.enable = function (name) {","  var config = configuration(this, name);","","  if (config.enable) {","    config.enable(this);","  }","","  config.state = 'enabled';","};","","","/**"," *  Configuring#disable(name) -> Void"," *"," *  Disable configuration."," *"," *  ##### Example"," *"," *      env.disable('autoprefixer');"," **/","module.exports.disable = function (name) {","  var config = configuration(this, name);","","  if (config.disable) {","    config.disable(this);","  }","","  config.state = 'disabled';","};",""],"l":{"20":1,"31":1,"32":2,"50":1,"51":3,"52":3,"57":1,"58":0,"59":0,"62":0,"77":1,"78":0,"91":1,"92":0,"94":0,"95":0,"98":0,"111":1,"112":0,"114":0,"115":0,"118":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/engines.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/helpers/engines.js","s":{"1":1,"2":1,"3":1,"4":1,"5":11,"6":1,"7":4,"8":0,"9":4,"10":1,"11":0,"12":1,"13":11},"b":{"1":[0,4]},"f":{"1":11,"2":4,"3":0,"4":11},"fnMap":{"1":{"name":"normalizeExtension","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":39}}},"2":{"name":"(anonymous_2)","line":77,"loc":{"start":{"line":77,"column":28},"end":{"line":77,"column":43}}},"3":{"name":"(anonymous_3)","line":93,"loc":{"start":{"line":93,"column":43},"end":{"line":93,"column":55}}},"4":{"name":"(anonymous_4)","line":106,"loc":{"start":{"line":106,"column":32},"end":{"line":106,"column":54}}}},"statementMap":{"1":{"start":{"line":40,"column":0},"end":{"line":40,"column":27}},"2":{"start":{"line":44,"column":0},"end":{"line":44,"column":26}},"3":{"start":{"line":48,"column":0},"end":{"line":48,"column":41}},"4":{"start":{"line":59,"column":0},"end":{"line":61,"column":1}},"5":{"start":{"line":60,"column":2},"end":{"line":60,"column":60}},"6":{"start":{"line":77,"column":0},"end":{"line":82,"column":2}},"7":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"8":{"start":{"line":79,"column":4},"end":{"line":79,"column":53}},"9":{"start":{"line":81,"column":2},"end":{"line":81,"column":35}},"10":{"start":{"line":93,"column":0},"end":{"line":95,"column":3}},"11":{"start":{"line":94,"column":2},"end":{"line":94,"column":34}},"12":{"start":{"line":106,"column":0},"end":{"line":108,"column":2}},"13":{"start":{"line":107,"column":2},"end":{"line":107,"column":52}}},"branchMap":{"1":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]}},"code":["/** internal"," *  mixin Engines"," *"," *  An internal mixin whose public methods are exposed on the [[Environment]]"," *  and [[Index]] classes."," *"," *  An engine is a type of processor that is bound to an filename"," *  extension. `application.js.coffee` indicates that the"," *  [[CoffeeEngine]] engine will be ran on the file."," *"," *  Extensions can be stacked and will be evaulated from right to"," *  left. `application.js.coffee.ejs` will first run `EjsEngine`"," *  then [[CoffeeEngine]]."," *"," *  All `Engine`s must follow the [[Template]] interface. It is"," *  recommended to subclass [[Template]]."," *"," *  Its recommended that you register engine changes on your local"," *  `Environment` instance."," *"," *      environment.registerEngine('.foo', FooProcessor);"," *"," *  The global registry is exposed for plugins to register themselves."," *"," *      Mincer.registerEngine('.ejs', EjsEngine);"," **/","","","// REQUIRED PROPERTIES /////////////////////////////////////////////////////////","//","// - `__engines__` (Object)","//","////////////////////////////////////////////////////////////////////////////////","","","'use strict';","","","// stdlib","var path = require('path');","","","// 3rd-party","var _ = require('lodash');","","","// internal","var getter = require('../common').getter;","","","////////////////////////////////////////////////////////////////////////////////","","","// Normalize extension with a leading `.`.","//","//  js          -> .js","//  foo.js      -> .js","//  foo/bar.js  -> .js","function normalizeExtension(extension) {","  return path.extname('foobar.' + path.basename(extension));","}","","","/**"," *  Engines#getEngines(ext) -> Object|Function"," *"," *  Returns an `Object` map of `extension => Engine`s registered on the"," *  `Environment`. If an `ext` argument is supplied, the `Engine` register"," *  under that extension will be returned."," *"," *      environment.getEngines()"," *      // -> { \".styl\": StylusEngine, ... }"," *"," *      environment.getEngines('.styl')"," *      // -> StylusEngine"," **/","module.exports.getEngines = function (ext) {","  if (ext) {","    return this.__engines__[normalizeExtension(ext)];","  }","  return _.clone(this.__engines__);","};","","","/**"," *  Engines#engineExtensions -> Array"," *"," *  Returns an `Array` of engine extension `String`s."," *"," *      environment.engineExtensions;"," *      // -> ['.coffee', '.sass', ...]"," **/","getter(module.exports, 'engineExtensions', function () {","  return _.keys(this.__engines__);","});","","","/**"," *  Engines#registerEngine(ext, klass) -> Void"," *"," *  Registers a new Engine `klass` for `ext`. If the `ext` already"," *  has an engine registered, it will be overridden."," *"," *      environment.registerEngine('.coffee', CoffeeScriptTemplate);"," **/","module.exports.registerEngine = function (ext, klass) {","  this.__engines__[normalizeExtension(ext)] = klass;","};",""],"l":{"40":1,"44":1,"48":1,"59":1,"60":11,"77":1,"78":4,"79":0,"81":4,"93":1,"94":0,"106":1,"107":11}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/context.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/context.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":0,"20":1,"21":6,"22":0,"23":1,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":1,"60":0,"61":1,"62":0,"63":0,"64":0,"65":1,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":3,"114":9,"115":8,"116":8,"117":8,"118":1,"119":8,"120":1,"121":1,"122":1,"123":0,"124":0,"125":1,"126":1,"127":0,"128":2,"129":2,"130":2,"131":2,"132":2,"133":1,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[8,1],"23":[0,0]},"f":{"1":0,"2":0,"3":6,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":3,"24":9,"25":8,"26":0,"27":2,"28":0,"29":0,"30":0},"fnMap":{"1":{"name":"Context","line":56,"loc":{"start":{"line":56,"column":31},"end":{"line":56,"column":84}}},"2":{"name":"assetPath","line":96,"loc":{"start":{"line":96,"column":30},"end":{"line":96,"column":51}}},"3":{"name":"(anonymous_3)","line":149,"loc":{"start":{"line":149,"column":74},"end":{"line":149,"column":95}}},"4":{"name":"(anonymous_4)","line":150,"loc":{"start":{"line":150,"column":42},"end":{"line":150,"column":62}}},"5":{"name":"(anonymous_5)","line":165,"loc":{"start":{"line":165,"column":38},"end":{"line":165,"column":50}}},"6":{"name":"(anonymous_6)","line":168,"loc":{"start":{"line":168,"column":40},"end":{"line":168,"column":56}}},"7":{"name":"(anonymous_7)","line":183,"loc":{"start":{"line":183,"column":41},"end":{"line":183,"column":53}}},"8":{"name":"(anonymous_8)","line":197,"loc":{"start":{"line":197,"column":41},"end":{"line":197,"column":53}}},"9":{"name":"(anonymous_9)","line":207,"loc":{"start":{"line":207,"column":37},"end":{"line":207,"column":49}}},"10":{"name":"(anonymous_10)","line":217,"loc":{"start":{"line":217,"column":42},"end":{"line":217,"column":54}}},"11":{"name":"(anonymous_11)","line":245,"loc":{"start":{"line":245,"column":28},"end":{"line":245,"column":61}}},"12":{"name":"(anonymous_12)","line":272,"loc":{"start":{"line":272,"column":42},"end":{"line":272,"column":63}}},"13":{"name":"(anonymous_13)","line":300,"loc":{"start":{"line":300,"column":29},"end":{"line":300,"column":49}}},"14":{"name":"(anonymous_14)","line":315,"loc":{"start":{"line":315,"column":34},"end":{"line":315,"column":54}}},"15":{"name":"(anonymous_15)","line":332,"loc":{"start":{"line":332,"column":33},"end":{"line":332,"column":53}}},"16":{"name":"(anonymous_16)","line":346,"loc":{"start":{"line":346,"column":30},"end":{"line":346,"column":50}}},"17":{"name":"(anonymous_17)","line":357,"loc":{"start":{"line":357,"column":38},"end":{"line":357,"column":58}}},"18":{"name":"(anonymous_18)","line":382,"loc":{"start":{"line":382,"column":33},"end":{"line":382,"column":53}}},"19":{"name":"(anonymous_19)","line":396,"loc":{"start":{"line":396,"column":34},"end":{"line":396,"column":56}}},"20":{"name":"(anonymous_20)","line":422,"loc":{"start":{"line":422,"column":29},"end":{"line":422,"column":58}}},"21":{"name":"(anonymous_21)","line":434,"loc":{"start":{"line":434,"column":30},"end":{"line":434,"column":55}}},"22":{"name":"(anonymous_22)","line":445,"loc":{"start":{"line":445,"column":24},"end":{"line":445,"column":55}}},"23":{"name":"define_helpers_registrator","line":467,"loc":{"start":{"line":467,"column":0},"end":{"line":467,"column":43}}},"24":{"name":"(anonymous_24)","line":468,"loc":{"start":{"line":468,"column":25},"end":{"line":468,"column":58}}},"25":{"name":"(anonymous_25)","line":480,"loc":{"start":{"line":480,"column":20},"end":{"line":480,"column":44}}},"26":{"name":"(anonymous_26)","line":541,"loc":{"start":{"line":541,"column":26},"end":{"line":541,"column":42}}},"27":{"name":"(anonymous_27)","line":552,"loc":{"start":{"line":552,"column":28},"end":{"line":552,"column":40}}},"28":{"name":"Klass","line":553,"loc":{"start":{"line":553,"column":2},"end":{"line":553,"column":19}}},"29":{"name":"(anonymous_29)","line":577,"loc":{"start":{"line":577,"column":42},"end":{"line":577,"column":57}}},"30":{"name":"(anonymous_30)","line":589,"loc":{"start":{"line":589,"column":31},"end":{"line":589,"column":52}}}},"statementMap":{"1":{"start":{"line":32,"column":0},"end":{"line":32,"column":30}},"2":{"start":{"line":33,"column":0},"end":{"line":33,"column":32}},"3":{"start":{"line":34,"column":0},"end":{"line":34,"column":41}},"4":{"start":{"line":38,"column":0},"end":{"line":38,"column":34}},"5":{"start":{"line":41,"column":0},"end":{"line":41,"column":44}},"6":{"start":{"line":42,"column":0},"end":{"line":42,"column":42}},"7":{"start":{"line":43,"column":0},"end":{"line":43,"column":48}},"8":{"start":{"line":44,"column":0},"end":{"line":44,"column":39}},"9":{"start":{"line":56,"column":0},"end":{"line":66,"column":2}},"10":{"start":{"line":57,"column":2},"end":{"line":57,"column":51}},"11":{"start":{"line":58,"column":2},"end":{"line":58,"column":48}},"12":{"start":{"line":60,"column":2},"end":{"line":60,"column":51}},"13":{"start":{"line":62,"column":2},"end":{"line":62,"column":42}},"14":{"start":{"line":63,"column":2},"end":{"line":63,"column":42}},"15":{"start":{"line":64,"column":2},"end":{"line":64,"column":42}},"16":{"start":{"line":65,"column":2},"end":{"line":65,"column":52}},"17":{"start":{"line":73,"column":0},"end":{"line":73,"column":43}},"18":{"start":{"line":96,"column":0},"end":{"line":104,"column":2}},"19":{"start":{"line":97,"column":2},"end":{"line":103,"column":4}},"20":{"start":{"line":149,"column":0},"end":{"line":153,"column":3}},"21":{"start":{"line":150,"column":2},"end":{"line":152,"column":4}},"22":{"start":{"line":151,"column":4},"end":{"line":151,"column":57}},"23":{"start":{"line":165,"column":0},"end":{"line":171,"column":3}},"24":{"start":{"line":166,"column":2},"end":{"line":166,"column":31}},"25":{"start":{"line":168,"column":2},"end":{"line":170,"column":46}},"26":{"start":{"line":169,"column":4},"end":{"line":169,"column":52}},"27":{"start":{"line":183,"column":0},"end":{"line":186,"column":3}},"28":{"start":{"line":184,"column":2},"end":{"line":184,"column":82}},"29":{"start":{"line":185,"column":2},"end":{"line":185,"column":58}},"30":{"start":{"line":197,"column":0},"end":{"line":199,"column":3}},"31":{"start":{"line":198,"column":2},"end":{"line":198,"column":55}},"32":{"start":{"line":207,"column":0},"end":{"line":209,"column":3}},"33":{"start":{"line":208,"column":2},"end":{"line":208,"column":14}},"34":{"start":{"line":217,"column":0},"end":{"line":219,"column":3}},"35":{"start":{"line":218,"column":2},"end":{"line":218,"column":68}},"36":{"start":{"line":245,"column":0},"end":{"line":288,"column":2}},"37":{"start":{"line":246,"column":2},"end":{"line":246,"column":54}},"38":{"start":{"line":248,"column":2},"end":{"line":248,"column":26}},"39":{"start":{"line":251,"column":2},"end":{"line":257,"column":3}},"40":{"start":{"line":252,"column":4},"end":{"line":254,"column":5}},"41":{"start":{"line":253,"column":6},"end":{"line":253,"column":22}},"42":{"start":{"line":256,"column":4},"end":{"line":256,"column":64}},"43":{"start":{"line":259,"column":2},"end":{"line":259,"column":37}},"44":{"start":{"line":261,"column":2},"end":{"line":283,"column":3}},"45":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"46":{"start":{"line":263,"column":6},"end":{"line":263,"column":38}},"47":{"start":{"line":266,"column":4},"end":{"line":266,"column":58}},"48":{"start":{"line":267,"column":4},"end":{"line":270,"column":5}},"49":{"start":{"line":268,"column":6},"end":{"line":269,"column":54}},"50":{"start":{"line":272,"column":4},"end":{"line":276,"column":7}},"51":{"start":{"line":273,"column":6},"end":{"line":275,"column":7}},"52":{"start":{"line":274,"column":8},"end":{"line":274,"column":25}},"53":{"start":{"line":278,"column":4},"end":{"line":280,"column":5}},"54":{"start":{"line":279,"column":6},"end":{"line":279,"column":67}},"55":{"start":{"line":282,"column":4},"end":{"line":282,"column":20}},"56":{"start":{"line":285,"column":2},"end":{"line":287,"column":19}},"57":{"start":{"line":300,"column":0},"end":{"line":302,"column":2}},"58":{"start":{"line":301,"column":2},"end":{"line":301,"column":56}},"59":{"start":{"line":315,"column":0},"end":{"line":317,"column":2}},"60":{"start":{"line":316,"column":2},"end":{"line":316,"column":57}},"61":{"start":{"line":332,"column":0},"end":{"line":336,"column":2}},"62":{"start":{"line":333,"column":2},"end":{"line":333,"column":63}},"63":{"start":{"line":334,"column":2},"end":{"line":334,"column":31}},"64":{"start":{"line":335,"column":2},"end":{"line":335,"column":40}},"65":{"start":{"line":346,"column":0},"end":{"line":348,"column":2}},"66":{"start":{"line":347,"column":2},"end":{"line":347,"column":81}},"67":{"start":{"line":357,"column":0},"end":{"line":366,"column":2}},"68":{"start":{"line":358,"column":2},"end":{"line":358,"column":25}},"69":{"start":{"line":360,"column":2},"end":{"line":360,"column":41}},"70":{"start":{"line":361,"column":2},"end":{"line":361,"column":59}},"71":{"start":{"line":362,"column":2},"end":{"line":362,"column":50}},"72":{"start":{"line":364,"column":2},"end":{"line":365,"column":66}},"73":{"start":{"line":382,"column":0},"end":{"line":391,"column":2}},"74":{"start":{"line":383,"column":2},"end":{"line":383,"column":20}},"75":{"start":{"line":385,"column":2},"end":{"line":385,"column":26}},"76":{"start":{"line":387,"column":2},"end":{"line":387,"column":48}},"77":{"start":{"line":388,"column":2},"end":{"line":388,"column":56}},"78":{"start":{"line":390,"column":2},"end":{"line":390,"column":78}},"79":{"start":{"line":396,"column":0},"end":{"line":412,"column":2}},"80":{"start":{"line":397,"column":2},"end":{"line":398,"column":40}},"81":{"start":{"line":400,"column":2},"end":{"line":402,"column":3}},"82":{"start":{"line":401,"column":4},"end":{"line":401,"column":36}},"83":{"start":{"line":404,"column":2},"end":{"line":406,"column":3}},"84":{"start":{"line":405,"column":4},"end":{"line":405,"column":33}},"85":{"start":{"line":408,"column":2},"end":{"line":408,"column":65}},"86":{"start":{"line":409,"column":2},"end":{"line":409,"column":32}},"87":{"start":{"line":411,"column":2},"end":{"line":411,"column":13}},"88":{"start":{"line":422,"column":0},"end":{"line":462,"column":2}},"89":{"start":{"line":423,"column":2},"end":{"line":423,"column":66}},"90":{"start":{"line":425,"column":2},"end":{"line":425,"column":30}},"91":{"start":{"line":426,"column":2},"end":{"line":426,"column":39}},"92":{"start":{"line":427,"column":2},"end":{"line":427,"column":57}},"93":{"start":{"line":428,"column":2},"end":{"line":428,"column":60}},"94":{"start":{"line":430,"column":2},"end":{"line":430,"column":64}},"95":{"start":{"line":431,"column":2},"end":{"line":431,"column":32}},"96":{"start":{"line":434,"column":2},"end":{"line":442,"column":5}},"97":{"start":{"line":435,"column":4},"end":{"line":435,"column":32}},"98":{"start":{"line":437,"column":4},"end":{"line":439,"column":5}},"99":{"start":{"line":438,"column":6},"end":{"line":438,"column":33}},"100":{"start":{"line":441,"column":4},"end":{"line":441,"column":26}},"101":{"start":{"line":445,"column":2},"end":{"line":459,"column":5}},"102":{"start":{"line":446,"column":4},"end":{"line":446,"column":17}},"103":{"start":{"line":448,"column":4},"end":{"line":458,"column":5}},"104":{"start":{"line":449,"column":6},"end":{"line":449,"column":79}},"105":{"start":{"line":450,"column":6},"end":{"line":450,"column":48}},"106":{"start":{"line":451,"column":6},"end":{"line":451,"column":27}},"107":{"start":{"line":452,"column":6},"end":{"line":452,"column":26}},"108":{"start":{"line":454,"column":6},"end":{"line":454,"column":30}},"109":{"start":{"line":454,"column":17},"end":{"line":454,"column":28}},"110":{"start":{"line":457,"column":6},"end":{"line":457,"column":52}},"111":{"start":{"line":461,"column":2},"end":{"line":461,"column":34}},"112":{"start":{"line":467,"column":0},"end":{"line":484,"column":1}},"113":{"start":{"line":468,"column":2},"end":{"line":483,"column":4}},"114":{"start":{"line":470,"column":4},"end":{"line":477,"column":5}},"115":{"start":{"line":471,"column":6},"end":{"line":471,"column":49}},"116":{"start":{"line":472,"column":6},"end":{"line":475,"column":8}},"117":{"start":{"line":476,"column":6},"end":{"line":476,"column":13}},"118":{"start":{"line":480,"column":4},"end":{"line":482,"column":7}},"119":{"start":{"line":481,"column":6},"end":{"line":481,"column":41}},"120":{"start":{"line":512,"column":0},"end":{"line":512,"column":36}},"121":{"start":{"line":516,"column":0},"end":{"line":525,"column":3}},"122":{"start":{"line":541,"column":0},"end":{"line":544,"column":2}},"123":{"start":{"line":542,"column":2},"end":{"line":542,"column":34}},"124":{"start":{"line":543,"column":2},"end":{"line":543,"column":42}},"125":{"start":{"line":552,"column":0},"end":{"line":568,"column":3}},"126":{"start":{"line":553,"column":2},"end":{"line":553,"column":54}},"127":{"start":{"line":553,"column":21},"end":{"line":553,"column":52}},"128":{"start":{"line":556,"column":2},"end":{"line":556,"column":27}},"129":{"start":{"line":559,"column":2},"end":{"line":559,"column":50}},"130":{"start":{"line":562,"column":2},"end":{"line":562,"column":79}},"131":{"start":{"line":565,"column":2},"end":{"line":565,"column":36}},"132":{"start":{"line":567,"column":2},"end":{"line":567,"column":15}},"133":{"start":{"line":577,"column":0},"end":{"line":602,"column":2}},"134":{"start":{"line":578,"column":2},"end":{"line":578,"column":10}},"135":{"start":{"line":580,"column":2},"end":{"line":584,"column":3}},"136":{"start":{"line":581,"column":4},"end":{"line":581,"column":30}},"137":{"start":{"line":582,"column":4},"end":{"line":582,"column":24}},"138":{"start":{"line":583,"column":4},"end":{"line":583,"column":15}},"139":{"start":{"line":586,"column":2},"end":{"line":586,"column":37}},"140":{"start":{"line":587,"column":2},"end":{"line":587,"column":61}},"141":{"start":{"line":589,"column":2},"end":{"line":595,"column":5}},"142":{"start":{"line":590,"column":4},"end":{"line":594,"column":7}},"143":{"start":{"line":596,"column":2},"end":{"line":596,"column":39}},"144":{"start":{"line":598,"column":2},"end":{"line":598,"column":21}},"145":{"start":{"line":599,"column":2},"end":{"line":599,"column":22}},"146":{"start":{"line":601,"column":2},"end":{"line":601,"column":13}}},"branchMap":{"1":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":12},"end":{"line":248,"column":19}},{"start":{"line":248,"column":23},"end":{"line":248,"column":25}}]},"2":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"3":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":252,"column":4}},{"start":{"line":252,"column":4},"end":{"line":252,"column":4}}]},"4":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":2},"end":{"line":261,"column":2}},{"start":{"line":261,"column":2},"end":{"line":261,"column":2}}]},"5":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"6":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":4},"end":{"line":267,"column":4}},{"start":{"line":267,"column":4},"end":{"line":267,"column":4}}]},"7":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":8},"end":{"line":267,"column":34}},{"start":{"line":267,"column":38},"end":{"line":267,"column":77}}]},"8":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":6},"end":{"line":273,"column":6}},{"start":{"line":273,"column":6},"end":{"line":273,"column":6}}]},"9":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":4},"end":{"line":278,"column":4}},{"start":{"line":278,"column":4},"end":{"line":278,"column":4}}]},"10":{"line":364,"type":"binary-expr","locations":[{"start":{"line":364,"column":9},"end":{"line":364,"column":13}},{"start":{"line":364,"column":17},"end":{"line":364,"column":30}},{"start":{"line":365,"column":10},"end":{"line":365,"column":27}},{"start":{"line":365,"column":31},"end":{"line":365,"column":64}}]},"11":{"line":388,"type":"binary-expr","locations":[{"start":{"line":388,"column":11},"end":{"line":388,"column":23}},{"start":{"line":388,"column":27},"end":{"line":388,"column":55}}]},"12":{"line":397,"type":"binary-expr","locations":[{"start":{"line":397,"column":25},"end":{"line":397,"column":39}},{"start":{"line":397,"column":43},"end":{"line":397,"column":53}},{"start":{"line":397,"column":57},"end":{"line":397,"column":59}}]},"13":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":2},"end":{"line":400,"column":2}},{"start":{"line":400,"column":2},"end":{"line":400,"column":2}}]},"14":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":2},"end":{"line":404,"column":2}},{"start":{"line":404,"column":2},"end":{"line":404,"column":2}}]},"15":{"line":425,"type":"binary-expr","locations":[{"start":{"line":425,"column":16},"end":{"line":425,"column":23}},{"start":{"line":425,"column":27},"end":{"line":425,"column":29}}]},"16":{"line":428,"type":"binary-expr","locations":[{"start":{"line":428,"column":16},"end":{"line":428,"column":34}},{"start":{"line":428,"column":38},"end":{"line":428,"column":59}}]},"17":{"line":430,"type":"binary-expr","locations":[{"start":{"line":430,"column":14},"end":{"line":430,"column":26}},{"start":{"line":430,"column":30},"end":{"line":430,"column":63}}]},"18":{"line":431,"type":"binary-expr","locations":[{"start":{"line":431,"column":14},"end":{"line":431,"column":25}},{"start":{"line":431,"column":29},"end":{"line":431,"column":31}}]},"19":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":4},"end":{"line":437,"column":4}},{"start":{"line":437,"column":4},"end":{"line":437,"column":4}}]},"20":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":8},"end":{"line":437,"column":36}},{"start":{"line":437,"column":40},"end":{"line":437,"column":73}}]},"21":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":6},"end":{"line":454,"column":6}},{"start":{"line":454,"column":6},"end":{"line":454,"column":6}}]},"22":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":4},"end":{"line":470,"column":4}},{"start":{"line":470,"column":4},"end":{"line":470,"column":4}}]},"23":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":2},"end":{"line":580,"column":2}},{"start":{"line":580,"column":2},"end":{"line":580,"column":2}}]}},"code":["/** internal"," *  class Context"," *"," *  `Context` provides helper methods to all [[Template]] processors."," *  They are typically accessed by EJS templates. You can mix in custom"," *  helpers by injecting them into [[Environment#ContextClass]]. Do not"," *  mix them into `Context` directly."," *"," *      environment.registerHelper('asset_url', function () {"," *        // ..."," *      });"," *"," *      // or in batch-mode"," *      environment.registerHelper({"," *        asset_url: function () {"," *          // ..."," *        },"," *        // ..."," *      });"," *"," *      <%= asset_url('foo.png') %>"," *"," *  The `Context` also collects dependencies declared by assets."," *  See [[DirectiveProcessor]] for an example of this."," **/","","","'use strict';","","","// stdlib","var fs        = require('fs');","var path      = require('path');","var inherits  = require('util').inherits;","","","// 3rd-party","var _         = require('lodash');","","// internal","var getter     = require('./common').getter;","var prop       = require('./common').prop;","var isAbsolute = require('./common').isAbsolute;","var sourcemap  = require('source-map');","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  new Context(environment, logicalPath, pathname)"," *  - environment (Environment)"," *  - logicalPath (String)"," *  - pathname (String)"," **/","var Context = module.exports = function Context(environment, logicalPath, pathname) {","  prop(this, 'environment',           environment);","  prop(this, 'pathname',              pathname);","","  prop(this, '__logicalPath__',       logicalPath);","","  prop(this, '__requiredPaths__',     []);","  prop(this, '__stubbedAssets__',     []);","  prop(this, '__dependencyPaths__',   []);","  prop(this, '__dependencyAssets__',  [ pathname ]);","};","","","// Hash of helpers available as locals in the renderers.","// For each helper, a wrapper will be generated to preserve `this` context.","//","// See Context.registerHelper()","prop(Context.prototype, '__helpers__', {});","","","/**"," *  Context#assetPath(pathname, options) -> String"," *"," *  Helper that returns path to asset and that acts like a 'base' method for"," *  other `*Path` helpers."," *"," *  Exposed to the engines as `asset_path` helper."," *"," *  By default this method is not implemented, and you must provide it's"," *  implementation that will fit your needs, e.g.:"," *"," *      environment.ContextClass.defineAssetPath(function (pathname, options) {"," *        var asset = this.environment.findAsset(pathname, options);"," *        return '/assets/' + asset.digestPath;"," *      });"," *"," *  Once implemented, you can use `asset_path` helper, e.g.:"," *"," *      #logo { background: url(<%= asset_path('logo.png') %>) }"," **/","Context.prototype.assetPath = function assetPath() {","  throw new Error(","    'Custom asset_path helper is not implemented\\n\\n' +","    'Extend your environment context with a custom method.\\n\\n' +","    '  environment.ContextClass.defineAssetPath(function (pathname, options) {\\n' +","    '    // ... your code here ... \\n' +","    '  });'","  );","};","","","/**"," *  Context#imagePath(pathname) -> String"," *"," *  Wrapper over [[Context#assetPath]] for image assets."," *  Exposed to the engines as `image_path` helper."," **/","","/**"," *  Context#videoPath(pathname) -> String"," *"," *  Wrapper over [[Context#assetPath]] for video assets."," *  Exposed to the engines as `video_path` helper."," **/","","/**"," *  Context#audioPath(pathname) -> String"," *"," *  Wrapper over [[Context#assetPath]] for audio assets."," *  Exposed to the engines as `audio_path` helper."," **/","","/**"," *  Context#fontPath(pathname) -> String"," *"," *  Wrapper over [[Context#assetPath]] for font assets."," *  Exposed to the engines as `font_path` helper."," **/","","/**"," *  Context#javascriptPath(pathname) -> String"," *"," *  Wrapper over [[Context#assetPath]] for javascript assets."," *  Exposed to the engines as `javascript_path` helper."," **/","","/**"," *  Context#stylesheetPath(pathname) -> String"," *"," *  Wrapper over [[Context#assetPath]] for stylesheet assets."," *  Exposed to the engines as `stylesheet_path` helper."," **/","","[ 'image', 'video', 'audio', 'font', 'javascript', 'stylesheet' ].forEach(function (assetType) {","  Context.prototype[assetType + 'Path'] = function (pathname) {","    return this.assetPath(pathname, { type: assetType });","  };","});","","","/**"," *  Context#rootPath -> String"," *"," *  Returns the environment path that contains the file."," *"," *  If `app/javascripts` and `app/stylesheets` are in your path, and"," *  current file is `app/javascripts/foo/bar.js`, `root_path` would"," *  return `app/javascripts`."," **/","getter(Context.prototype, 'rootPath', function () {","  var pathname = this.pathname;","","  return _.find(this.environment.paths, function (path) {","    return pathname.substr(0, path.length) === path;","  }).substr(this.environment.root.length + 1);","});","","","","/**"," * Context#logicalPath -> String"," *"," *  Returns logical path without any file extensions."," *"," *      'app/javascripts/application.js'"," *      # => 'app/javascripts/application'"," **/","getter(Context.prototype, 'logicalPath', function () {","  var len = this.__logicalPath__.length, ext = path.extname(this.__logicalPath__);","  return this.__logicalPath__.substr(0, len - ext.length);","});","","","/**"," *  Context#contentType -> String"," *"," *  Returns content type of file"," *"," *      'application/javascript'"," *      'text/css'"," **/","getter(Context.prototype, 'contentType', function () {","  return this.environment.contentTypeOf(this.pathname);","});","","","/**"," *  Context#context -> Context"," *"," *  Returns the context itself."," **/","getter(Context.prototype, 'context', function () {","  return this;","});","","","/**"," *  Context#relativePath -> String"," *"," *  Returns AssetAttributes#relativePath of current file."," **/","getter(Context.prototype, 'relativePath', function () {","  return this.environment.attributesFor(this.pathname).relativePath;","});","","","/**"," *  Context#resolve(pathname[, options = {}[, fn]]) -> String"," *  - pathname (String)"," *  - options (Object)"," *  - fn (Function)"," *"," *  Given a logical path, `resolve` will find and return the fully"," *  expanded path. Relative paths will also be resolved. An optional"," *  `contentType` restriction can be supplied to restrict the"," *  search."," *"," *      context.resolve('foo.js')"," *      # => '/path/to/app/javascripts/foo.js'"," *"," *      context.resolve('./bar.js')"," *      # => '/path/to/app/javascripts/bar.js'"," *"," *      context.resolve('foo', {contentType: 'application/javascript'})"," *      # => '/path/to/app/javascripts/foo.js'"," *"," *  You may also provide an iterator function `fn`, that wil be passed to"," *  environments [[Base#resolve]] when needed."," **/","Context.prototype.resolve = function (pathname, options, fn) {","  var self = this, attributes, content_type, resolved;","","  options = options || {};","","  // If the pathname is absolute, check it existence","  if (isAbsolute(pathname)) {","    if (fs.existsSync(pathname)) {","      return pathname;","    }","","    throw new Error('Couldn\\'t find file \\'' + pathname + '\\'');","  }","","  content_type = options.contentType;","","  if (content_type) {","    if (content_type === '~self~') {","      content_type = self.contentType;","    }","","    attributes = this.environment.attributesFor(pathname);","    if (attributes.formatExtension && content_type !== attributes.contentType) {","      throw new Error(pathname + ' is \\'' + attributes.contentType + '\\', ' +","                      'not \\'' + content_type + '\\'');","    }","","    resolved = this.resolve(pathname, {}, function (candidate) {","      if (self.contentType === self.environment.contentTypeOf(candidate)) {","        return candidate;","      }","    });","","    if (!resolved) {","      throw new Error('Could not find file \\'' + pathname + '\\'.');","    }","","    return resolved;","  }","","  return this.environment.resolve(pathname, _.assign({","    basePath: path.dirname(this.pathname)","  }, options), fn);","};","","","/**"," *  Context#dependOn(pathname) -> Void"," *"," *  Allows you to state a dependency on a file without including it."," *"," *  This is used for caching purposes. Any changes made to"," *  the dependency file with invalidate the cache of the"," *  source file."," **/","Context.prototype.dependOn = function (pathname) {","  this.__dependencyPaths__.push(this.resolve(pathname));","};","","","/**"," *  Context#dependOnAsset(pathname) -> Void"," *"," *  Allows you to state an asset dependency without including it."," *"," *  This is used for caching purposes. Any changes that would"," *  invalidate the dependency asset will invalidate the source"," *  file. Unlike [[Context#dependOn]], this will include recursively"," *  the target asset's dependencies."," **/","Context.prototype.dependOnAsset = function (pathname) {","  this.__dependencyAssets__.push(this.resolve(pathname));","};","","","/**"," *  Context#requireAsset(pathname) -> Void"," *"," *  `requireAsset` declares `path` as a dependency of the file. The"," *  dependency will be inserted before the file and will only be"," *  included once."," *"," *  If EJS processing is enabled, you can use it to dynamically"," *  require assets."," *"," *      <%= requireAsset(\"#{framework}.js\") %>"," **/","Context.prototype.requireAsset = function (pathname) {","  pathname = this.resolve(pathname, { contentType: '~self~' });","  this.dependOnAsset(pathname);","  this.__requiredPaths__.push(pathname);","};","","","/**"," *  Context#stubAsset(pathname) -> Void"," *"," *  `stubAsset` blacklists `pathname` from being included in the bundle."," *  `pathname` must be an asset which may or may not already be included"," *  in the bundle."," **/","Context.prototype.stubAsset = function (pathname) {","  this.__stubbedAssets__.push(this.resolve(pathname, { contentType: '~self~' }));","};","","","/**"," *  Context#isAssetRequirable(pathname) -> Boolean"," *"," *  Tests if target path is able to be safely required into the"," *  current concatenation."," **/","Context.prototype.isAssetRequirable = function (pathname) {","  var content_type, stat;","","  pathname      = this.resolve(pathname);","  content_type  = this.environment.contentTypeOf(pathname);","  stat          = this.environment.stat(pathname);","","  return stat && stat.isFile() &&","         (!this.contentType || this.contentType === content_type);","};","","","/**"," *  Context#assetDataUri(pathname) -> String"," *"," *  Returns a Base64-encoded `data:` URI with the contents of the"," *  asset at the specified path, and marks that path as a dependency"," *  of the current file."," *"," *  Use `assetDataUri` from EJS with CSS or JavaScript assets:"," *"," *      #logo { background: url(<%= asset_data_uri('logo.png') %>) }"," *"," *      $('<img>').attr('src', '<%= asset_data_uri('avatar.jpg') %>')"," **/","Context.prototype.assetDataUri = function (pathname) {","  var asset, buffer;","","  this.dependOn(pathname);","","  asset  = this.environment.findAsset(pathname);","  buffer = asset.buffer || new Buffer(asset.toString());","","  return 'data:' + asset.contentType + ';base64,' + buffer.toString('base64');","};","","","// internal","// Annotates exception raisen by the engine/processor","Context.prototype.annotateError = function (err, klass) {","  var prefix    = String(klass.__name__ || klass.name || ''),","      location  = String(this.pathname);","","  if (this.__LINE__) {","    location += ':' + this.__LINE__;","  }","","  if (prefix) {","    prefix = '[' + prefix + '] ';","  }","","  err.message = prefix + err.message + '  (in ' + location + ')';","  err.type = 'MINCER_PROCESSOR';","","  return err;","};","","","/**"," *  Context#evaluate(pathname, options = {}, callback) -> String"," *  - pathname (String)"," *  - options (Object)"," *"," *  Reads `pathname` and runs processors on the file."," **/","Context.prototype.evaluate = function (pathname, options) {","  var self = this, locals = {}, attributes, processors, data, map;","","  options     = options || {};","  pathname    = this.resolve(pathname);","  attributes  = this.environment.attributesFor(pathname);","  processors  = options.processors || attributes.processors;","","  data      = options.data || fs.readFileSync(pathname, 'utf8');","  map       = options.map || '';","","","  _.forEach(this.__helpers__, function (payload, name) {","    var helper = payload.helper;","","    if (typeof helper === 'function' && payload.options.type !== 'stylus') {","      helper = helper.bind(self);","    }","","    locals[name] = helper;","  });","","","  _.forEach(processors, function (ProcessorKlass, idx) {","    var template;","","    try {","      template  = new ProcessorKlass(pathname, data, map, processors[idx + 1]);","      var res = template.evaluate(self, locals);","      data = template.data;","      map  = template.map;","      // legacy compat, for old third party engines","      if (res) { data = res; }","","    } catch (err) {","      throw self.annotateError(err, ProcessorKlass);","    }","  });","","  return { data: data, map: map };","};","","","","// internal helper to define registerHelper() method on destination class","function define_helpers_registrator(Klass) {","  Klass.registerHelper = function (name, helper, options) {","    // Scenario: registerHelper('foo', foo_helper[, foo_opts]);","    if (_.isString(name)) {","      Klass.prototype[name]             = helper;","      Klass.prototype.__helpers__[name] = {","        helper:   helper,","        options:  Object(options)","      };","      return;","    }","","    // Scenario: registerHelper({ foo: foo_helper, ... });","    _.forEach(name, function (helper, name) {","      Klass.registerHelper(name, helper);","    });","  };","}","","","","/**"," *  Context.registerHelper(name, func) -> Void"," *  Context.registerHelper(helpers) -> Void"," *  - name (String)"," *  - func (Function)"," *  - helpers (Object)"," *"," *  Register a helper that will be available in the engines that supports"," *  local helpers (e.g. EJS or Stylus). You should avoid registering helpers"," *  directly on `Context` class in favour of [[Environment#ContextClass]]"," *  (see [[Environment#registerHelper]] as well)."," *"," *  ##### Example"," *"," *      Context.registerHelper('foo', foo_helper);"," *      Context.registerHelper('bar', bar_helper);"," *"," *      // equals to"," *"," *      Context.registerHelper({"," *        foo: foo_helper,"," *        bar: bar_helper"," *      });"," **/","define_helpers_registrator(Context);","","","// Register all standard (built-in) helpers","Context.registerHelper({","  asset_data_uri:   Context.prototype.assetDataUri,","  asset_path:       Context.prototype.assetPath,","  image_path:       Context.prototype.imagePath,","  video_path:       Context.prototype.videoPath,","  audio_path:       Context.prototype.audioPath,","  font_path:        Context.prototype.fontPath,","  javascript_path:  Context.prototype.javascriptPath,","  stylesheet_path:  Context.prototype.stylesheetPath","});","","","/**"," *  Context.defineAssetPath(func) -> Void"," *"," *  Syntax sugar that provides an easy way to set real implementation of"," *  `assetPath` and propose it to helpers."," *"," *  ##### Example:"," *"," *      Context.defineAssetPath(function (pathname, options) {"," *        var asset = this.environment.findAsset(pathname, options);"," *        return '/assets/' + asset.digestPath;"," *      });"," **/","Context.defineAssetPath = function (func) {","  this.prototype.assetPath = func;","  this.registerHelper('asset_path', func);","};","","","/** internal"," *  Context#subclass -> Function"," *"," *  Returns new subclass of [[Context]]."," **/","getter(Context, 'subclass', function () {","  function Klass() { Context.apply(this, arguments); }","","  // add class inheritance","  inherits(Klass, Context);","","  // re-expose syntax sugar for custom asset_path helper setter","  Klass.defineAssetPath = Context.defineAssetPath;","","  // clone some own-prototype properties","  prop(Klass.prototype, '__helpers__', _.clone(Context.prototype.__helpers__));","","  // Provide helpers registrator","  define_helpers_registrator(Klass);","","  return Klass;","});","","","// Just a helper, that can be convenient for external engines/processors","// Return existing sourcemap (obj.map) with clear sourceRoot, or create","// dummy one from obj.data & obj.file","//","// Required for late map init, because some engines do not support mapping.","//","Context.prototype.createSourceMapObject = function (obj) {","  var map;","","  if (obj.map) {","    map = JSON.parse(obj.map);","    map.sourceRoot = '';","    return map;","  }","","  var name = path.basename(obj.file);","  var smg = new sourcemap.SourceMapGenerator({ file: name });","","  obj.data.split('\\n').forEach(function (line, idx) {","    smg.addMapping({","      source: name,","      original: { line: idx + 1, column: 0 },","      generated: { line: idx + 1, column: 0 }","    });","  });","  smg.setSourceContent(name, obj.data);","","  map = smg.toJSON();","  map.sourceRoot = '';","","  return map;","};",""],"l":{"32":1,"33":1,"34":1,"38":1,"41":1,"42":1,"43":1,"44":1,"56":1,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"73":1,"96":1,"97":0,"149":1,"150":6,"151":0,"165":1,"166":0,"168":0,"169":0,"183":1,"184":0,"185":0,"197":1,"198":0,"207":1,"208":0,"217":1,"218":0,"245":1,"246":0,"248":0,"251":0,"252":0,"253":0,"256":0,"259":0,"261":0,"262":0,"263":0,"266":0,"267":0,"268":0,"272":0,"273":0,"274":0,"278":0,"279":0,"282":0,"285":0,"300":1,"301":0,"315":1,"316":0,"332":1,"333":0,"334":0,"335":0,"346":1,"347":0,"357":1,"358":0,"360":0,"361":0,"362":0,"364":0,"382":1,"383":0,"385":0,"387":0,"388":0,"390":0,"396":1,"397":0,"400":0,"401":0,"404":0,"405":0,"408":0,"409":0,"411":0,"422":1,"423":0,"425":0,"426":0,"427":0,"428":0,"430":0,"431":0,"434":0,"435":0,"437":0,"438":0,"441":0,"445":0,"446":0,"448":0,"449":0,"450":0,"451":0,"452":0,"454":0,"457":0,"461":0,"467":1,"468":3,"470":9,"471":8,"472":8,"476":8,"480":1,"481":8,"512":1,"516":1,"541":1,"542":0,"543":0,"552":1,"553":1,"556":2,"559":2,"562":2,"565":2,"567":2,"577":1,"578":0,"580":0,"581":0,"582":0,"583":0,"586":0,"587":0,"589":0,"590":0,"596":0,"598":0,"599":0,"601":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"Index","line":36,"loc":{"start":{"line":36,"column":29},"end":{"line":36,"column":57}}},"2":{"name":"(anonymous_2)","line":75,"loc":{"start":{"line":75,"column":33},"end":{"line":75,"column":45}}},"3":{"name":"(anonymous_3)","line":85,"loc":{"start":{"line":85,"column":32},"end":{"line":85,"column":52}}},"4":{"name":"(anonymous_4)","line":103,"loc":{"start":{"line":103,"column":28},"end":{"line":103,"column":57}}},"5":{"name":"(anonymous_5)","line":136,"loc":{"start":{"line":136,"column":29},"end":{"line":136,"column":71}}},"6":{"name":"(anonymous_6)","line":140,"loc":{"start":{"line":140,"column":48},"end":{"line":140,"column":60}}},"7":{"name":"(anonymous_7)","line":154,"loc":{"start":{"line":154,"column":30},"end":{"line":154,"column":42}}}},"statementMap":{"1":{"start":{"line":25,"column":0},"end":{"line":25,"column":40}},"2":{"start":{"line":26,"column":0},"end":{"line":26,"column":47}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":49}},"4":{"start":{"line":36,"column":0},"end":{"line":64,"column":2}},"5":{"start":{"line":37,"column":2},"end":{"line":37,"column":18}},"6":{"start":{"line":40,"column":2},"end":{"line":40,"column":51}},"7":{"start":{"line":41,"column":2},"end":{"line":41,"column":64}},"8":{"start":{"line":42,"column":2},"end":{"line":42,"column":62}},"9":{"start":{"line":45,"column":2},"end":{"line":45,"column":68}},"10":{"start":{"line":46,"column":2},"end":{"line":46,"column":61}},"11":{"start":{"line":47,"column":2},"end":{"line":47,"column":64}},"12":{"start":{"line":48,"column":2},"end":{"line":48,"column":71}},"13":{"start":{"line":49,"column":2},"end":{"line":49,"column":70}},"14":{"start":{"line":50,"column":2},"end":{"line":50,"column":71}},"15":{"start":{"line":51,"column":2},"end":{"line":51,"column":73}},"16":{"start":{"line":52,"column":2},"end":{"line":52,"column":68}},"17":{"start":{"line":53,"column":2},"end":{"line":53,"column":71}},"18":{"start":{"line":54,"column":2},"end":{"line":54,"column":68}},"19":{"start":{"line":55,"column":2},"end":{"line":55,"column":69}},"20":{"start":{"line":58,"column":2},"end":{"line":58,"column":67}},"21":{"start":{"line":59,"column":2},"end":{"line":59,"column":59}},"22":{"start":{"line":62,"column":2},"end":{"line":62,"column":63}},"23":{"start":{"line":63,"column":2},"end":{"line":63,"column":63}},"24":{"start":{"line":67,"column":0},"end":{"line":67,"column":38}},"25":{"start":{"line":75,"column":0},"end":{"line":77,"column":3}},"26":{"start":{"line":76,"column":2},"end":{"line":76,"column":14}},"27":{"start":{"line":85,"column":0},"end":{"line":91,"column":2}},"28":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"29":{"start":{"line":87,"column":4},"end":{"line":87,"column":83}},"30":{"start":{"line":90,"column":2},"end":{"line":90,"column":36}},"31":{"start":{"line":94,"column":0},"end":{"line":94,"column":42}},"32":{"start":{"line":103,"column":0},"end":{"line":129,"column":2}},"33":{"start":{"line":104,"column":2},"end":{"line":104,"column":51}},"34":{"start":{"line":106,"column":2},"end":{"line":106,"column":36}},"35":{"start":{"line":107,"column":2},"end":{"line":107,"column":86}},"36":{"start":{"line":108,"column":2},"end":{"line":108,"column":58}},"37":{"start":{"line":110,"column":2},"end":{"line":112,"column":3}},"38":{"start":{"line":111,"column":4},"end":{"line":111,"column":46}},"39":{"start":{"line":114,"column":2},"end":{"line":114,"column":51}},"40":{"start":{"line":116,"column":2},"end":{"line":128,"column":3}},"41":{"start":{"line":117,"column":4},"end":{"line":117,"column":67}},"42":{"start":{"line":120,"column":4},"end":{"line":121,"column":48}},"43":{"start":{"line":124,"column":4},"end":{"line":125,"column":60}},"44":{"start":{"line":127,"column":4},"end":{"line":127,"column":17}},"45":{"start":{"line":132,"column":0},"end":{"line":132,"column":44}},"46":{"start":{"line":136,"column":0},"end":{"line":146,"column":2}},"47":{"start":{"line":137,"column":2},"end":{"line":137,"column":61}},"48":{"start":{"line":139,"column":2},"end":{"line":143,"column":3}},"49":{"start":{"line":140,"column":4},"end":{"line":142,"column":7}},"50":{"start":{"line":141,"column":6},"end":{"line":141,"column":68}},"51":{"start":{"line":145,"column":2},"end":{"line":145,"column":30}},"52":{"start":{"line":154,"column":0},"end":{"line":156,"column":2}},"53":{"start":{"line":155,"column":2},"end":{"line":155,"column":52}}},"branchMap":{"1":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"2":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":22},"end":{"line":106,"column":29}},{"start":{"line":106,"column":33},"end":{"line":106,"column":35}}]},"3":{"line":107,"type":"cond-expr","locations":[{"start":{"line":107,"column":64},"end":{"line":107,"column":68}},{"start":{"line":107,"column":71},"end":{"line":107,"column":85}}]},"4":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"5":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"6":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":2},"end":{"line":139,"column":2}},{"start":{"line":139,"column":2},"end":{"line":139,"column":2}}]}},"code":["/** internal"," *  class Index"," *"," *  `Index` is a special cached version of [[Environment]]."," *"," *  The expection is that all of its file system methods are cached"," *  for the instances lifetime. This makes `Index` much faster. This"," *  behavior is ideal in production environments where the file system"," *  is immutable."," *"," *  `Index` should not be initialized directly. Instead use"," *  [[Environment#index]]."," *"," *"," *  ##### SUBCLASS OF"," *"," *  [[Base]]"," **/","","","'use strict';","","","// internal","var Base            = require('./base');","var prop            = require('./common').prop;","var getter          = require('./common').getter;","","","////////////////////////////////////////////////////////////////////////////////","","","/*:nodoc:*"," *  new Index(environment)"," **/","var Index = module.exports = function Index(environment) {","  Base.call(this);","","  // some protected properties","  prop(this, 'environment',           environment);","  prop(this, 'ContextClass',          environment.ContextClass);","  prop(this, 'sourceRoot',            environment.sourceRoot);","","  // some private properties","  prop(this, '__trail__',             environment.__trail__.cached);","  prop(this, '__cache__',             environment.__cache__);","  prop(this, '__engines__',           environment.getEngines());","  prop(this, '__mimeTypes__',         environment.registeredMimeTypes);","  prop(this, '__preProcessors__',     environment.getPreProcessors());","  prop(this, '__postProcessors__',    environment.getPostProcessors());","  prop(this, '__bundleProcessors__',  environment.getBundleProcessors());","  prop(this, '__compressors__',       environment.getCompressors());","  prop(this, '__configurations__',    environment.getConfigurations());","  prop(this, '__jsCompressor__',      environment.__jsCompressor__);","  prop(this, '__cssCompressor__',     environment.__cssCompressor__);","","  // make some internal values immutable","  prop(this, '__digestAlgorithm__',   environment.digestAlgorithm);","  prop(this, '__version__',           environment.version);","","  // internal cache","  prop(this, '__assets__',            {}, { writable:  true });","  prop(this, '__digests__',           {}, { writable:  true });","};","","","require('util').inherits(Index, Base);","","","/**"," *  Index#index -> Index"," *"," *  Self-reference to provide same interface as in [[Environment]]."," **/","getter(Index.prototype, 'index', function () {","  return this;","});","","","/**"," *  Index.getFileDigest(pathname) -> crypto.Hash"," *"," *  Cached version of [[Base#getFileDigest]]."," **/","Index.prototype.getFileDigest = function (pathname) {","  if (typeof this.__digests__[pathname] === 'undefined') {","    this.__digests__[pathname] = Base.prototype.getFileDigest.call(this, pathname);","  }","","  return this.__digests__[pathname];","};","","","var _findAsset = Base.prototype.findAsset;","","","/**"," *  Index#findAsset(pathname[, options]) -> Asset"," *"," *  Caches calls to [[Base#findAsset]]."," *  Pushes cache to the upstream environment as well."," **/","Index.prototype.findAsset = function (pathname, options) {","  var asset, logical_cache_key, fullpath_cache_key;","","  options           = options || {};","  options.bundle    = (typeof options.bundle === 'undefined') ? true : options.bundle;","  logical_cache_key = this.cacheKeyFor(pathname, options);","","  if (this.__assets__[logical_cache_key]) {","    return this.__assets__[logical_cache_key];","  }","","  asset = _findAsset.call(this, pathname, options);","","  if (asset) {","    fullpath_cache_key = this.cacheKeyFor(asset.pathname, options);","","    // Cache on Index","    this.__assets__[logical_cache_key]  =","    this.__assets__[fullpath_cache_key] = asset;","","    // Push cache upstream to Environment","    this.environment.__assets__[logical_cache_key]  =","    this.environment.__assets__[fullpath_cache_key] = asset;","","    return asset;","  }","};","","","var _buildAsset = Base.prototype.buildAsset;","","","// See Base#buildAsset","Index.prototype.buildAsset = function (logicalPath, pathname, options) {","  var self = this, key = this.cacheKeyFor(pathname, options);","","  if (!this.__assets__[key]) {","    this.__assets__[key] = this.cacheAsset(key, function () {","      return _buildAsset.call(self, logicalPath, pathname, options);","    });","  }","","  return this.__assets__[key];","};","","","/** internal"," *  Index#expireIndex() -> Void"," *"," *  Throws an error. Kept for keeping same interface as in [[Environment]]."," **/","Index.prototype.expireIndex = function () {","  throw new Error('Can not modify immutable index');","};",""],"l":{"25":1,"26":1,"27":1,"36":1,"37":0,"40":0,"41":0,"42":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"58":0,"59":0,"62":0,"63":0,"67":1,"75":1,"76":0,"85":1,"86":0,"87":0,"90":0,"94":1,"103":1,"104":0,"106":0,"107":0,"108":0,"110":0,"111":0,"114":0,"116":0,"117":0,"120":0,"124":0,"127":0,"132":1,"136":1,"137":0,"139":0,"140":0,"141":0,"145":0,"154":1,"155":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/manifest.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/manifest.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Manifest","line":50,"loc":{"start":{"line":50,"column":32},"end":{"line":50,"column":73}}},"2":{"name":"(anonymous_2)","line":94,"loc":{"start":{"line":94,"column":37},"end":{"line":94,"column":49}}},"3":{"name":"(anonymous_3)","line":128,"loc":{"start":{"line":128,"column":36},"end":{"line":128,"column":48}}},"4":{"name":"toBuffer","line":138,"loc":{"start":{"line":138,"column":0},"end":{"line":138,"column":24}}},"5":{"name":"write","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":38}}},"6":{"name":"gzip","line":163,"loc":{"start":{"line":163,"column":0},"end":{"line":163,"column":20}}},"7":{"name":"(anonymous_7)","line":205,"loc":{"start":{"line":205,"column":29},"end":{"line":205,"column":55}}},"8":{"name":"(anonymous_8)","line":215,"loc":{"start":{"line":215,"column":42},"end":{"line":215,"column":62}}},"9":{"name":"(anonymous_9)","line":221,"loc":{"start":{"line":221,"column":16},"end":{"line":221,"column":39}}},"10":{"name":"(anonymous_10)","line":286,"loc":{"start":{"line":286,"column":26},"end":{"line":286,"column":38}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}},"2":{"start":{"line":21,"column":0},"end":{"line":21,"column":29}},"3":{"start":{"line":22,"column":0},"end":{"line":22,"column":36}},"4":{"start":{"line":26,"column":0},"end":{"line":26,"column":34}},"5":{"start":{"line":27,"column":0},"end":{"line":27,"column":32}},"6":{"start":{"line":28,"column":0},"end":{"line":28,"column":39}},"7":{"start":{"line":32,"column":0},"end":{"line":32,"column":43}},"8":{"start":{"line":33,"column":0},"end":{"line":33,"column":45}},"9":{"start":{"line":34,"column":0},"end":{"line":34,"column":49}},"10":{"start":{"line":35,"column":0},"end":{"line":35,"column":44}},"11":{"start":{"line":36,"column":0},"end":{"line":36,"column":38}},"12":{"start":{"line":50,"column":0},"end":{"line":72,"column":2}},"13":{"start":{"line":51,"column":2},"end":{"line":51,"column":11}},"14":{"start":{"line":53,"column":2},"end":{"line":53,"column":41}},"15":{"start":{"line":55,"column":2},"end":{"line":61,"column":3}},"16":{"start":{"line":56,"column":4},"end":{"line":56,"column":48}},"17":{"start":{"line":57,"column":4},"end":{"line":57,"column":62}},"18":{"start":{"line":59,"column":4},"end":{"line":59,"column":48}},"19":{"start":{"line":60,"column":4},"end":{"line":60,"column":48}},"20":{"start":{"line":63,"column":2},"end":{"line":69,"column":3}},"21":{"start":{"line":64,"column":4},"end":{"line":68,"column":5}},"22":{"start":{"line":65,"column":6},"end":{"line":65,"column":32}},"23":{"start":{"line":67,"column":6},"end":{"line":67,"column":54}},"24":{"start":{"line":71,"column":2},"end":{"line":71,"column":63}},"25":{"start":{"line":94,"column":0},"end":{"line":100,"column":3}},"26":{"start":{"line":95,"column":2},"end":{"line":97,"column":3}},"27":{"start":{"line":96,"column":4},"end":{"line":96,"column":26}},"28":{"start":{"line":99,"column":2},"end":{"line":99,"column":26}},"29":{"start":{"line":128,"column":0},"end":{"line":134,"column":3}},"30":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"31":{"start":{"line":130,"column":4},"end":{"line":130,"column":25}},"32":{"start":{"line":133,"column":2},"end":{"line":133,"column":25}},"33":{"start":{"line":138,"column":0},"end":{"line":140,"column":1}},"34":{"start":{"line":139,"column":2},"end":{"line":139,"column":57}},"35":{"start":{"line":144,"column":0},"end":{"line":159,"column":1}},"36":{"start":{"line":145,"column":2},"end":{"line":145,"column":32}},"37":{"start":{"line":147,"column":2},"end":{"line":158,"column":3}},"38":{"start":{"line":148,"column":4},"end":{"line":148,"column":35}},"39":{"start":{"line":149,"column":4},"end":{"line":149,"column":47}},"40":{"start":{"line":150,"column":4},"end":{"line":150,"column":38}},"41":{"start":{"line":151,"column":4},"end":{"line":151,"column":42}},"42":{"start":{"line":155,"column":4},"end":{"line":155,"column":50}},"43":{"start":{"line":155,"column":10},"end":{"line":155,"column":34}},"44":{"start":{"line":157,"column":4},"end":{"line":157,"column":14}},"45":{"start":{"line":163,"column":0},"end":{"line":166,"column":1}},"46":{"start":{"line":165,"column":2},"end":{"line":165,"column":63}},"47":{"start":{"line":205,"column":0},"end":{"line":282,"column":2}},"48":{"start":{"line":206,"column":2},"end":{"line":207,"column":20}},"49":{"start":{"line":209,"column":2},"end":{"line":211,"column":3}},"50":{"start":{"line":210,"column":4},"end":{"line":210,"column":69}},"51":{"start":{"line":213,"column":2},"end":{"line":213,"column":26}},"52":{"start":{"line":215,"column":2},"end":{"line":217,"column":5}},"53":{"start":{"line":216,"column":4},"end":{"line":216,"column":25}},"54":{"start":{"line":219,"column":2},"end":{"line":219,"column":54}},"55":{"start":{"line":221,"column":2},"end":{"line":279,"column":5}},"56":{"start":{"line":222,"column":4},"end":{"line":222,"column":45}},"57":{"start":{"line":224,"column":4},"end":{"line":224,"column":70}},"58":{"start":{"line":226,"column":4},"end":{"line":228,"column":5}},"59":{"start":{"line":227,"column":6},"end":{"line":227,"column":68}},"60":{"start":{"line":230,"column":4},"end":{"line":230,"column":74}},"61":{"start":{"line":232,"column":4},"end":{"line":232,"column":51}},"62":{"start":{"line":234,"column":4},"end":{"line":234,"column":55}},"63":{"start":{"line":235,"column":4},"end":{"line":240,"column":6}},"64":{"start":{"line":242,"column":4},"end":{"line":246,"column":5}},"65":{"start":{"line":243,"column":6},"end":{"line":243,"column":62}},"66":{"start":{"line":244,"column":6},"end":{"line":244,"column":18}},"67":{"start":{"line":245,"column":6},"end":{"line":245,"column":13}},"68":{"start":{"line":248,"column":4},"end":{"line":248,"column":15}},"69":{"start":{"line":250,"column":4},"end":{"line":254,"column":5}},"70":{"start":{"line":251,"column":6},"end":{"line":251,"column":68}},"71":{"start":{"line":253,"column":6},"end":{"line":253,"column":28}},"72":{"start":{"line":256,"column":4},"end":{"line":256,"column":39}},"73":{"start":{"line":258,"column":4},"end":{"line":260,"column":5}},"74":{"start":{"line":259,"column":6},"end":{"line":259,"column":55}},"75":{"start":{"line":262,"column":4},"end":{"line":275,"column":5}},"76":{"start":{"line":264,"column":6},"end":{"line":264,"column":29}},"77":{"start":{"line":267,"column":6},"end":{"line":269,"column":7}},"78":{"start":{"line":268,"column":8},"end":{"line":268,"column":20}},"79":{"start":{"line":271,"column":6},"end":{"line":271,"column":68}},"80":{"start":{"line":272,"column":6},"end":{"line":274,"column":7}},"81":{"start":{"line":273,"column":8},"end":{"line":273,"column":79}},"82":{"start":{"line":277,"column":4},"end":{"line":277,"column":16}},"83":{"start":{"line":278,"column":4},"end":{"line":278,"column":37}},"84":{"start":{"line":281,"column":2},"end":{"line":281,"column":19}},"85":{"start":{"line":286,"column":0},"end":{"line":289,"column":2}},"86":{"start":{"line":287,"column":2},"end":{"line":287,"column":19}},"87":{"start":{"line":288,"column":2},"end":{"line":288,"column":69}}},"branchMap":{"1":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"2":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"3":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":52},"end":{"line":71,"column":56}},{"start":{"line":71,"column":59},"end":{"line":71,"column":61}}]},"4":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":22},"end":{"line":71,"column":28}},{"start":{"line":71,"column":32},"end":{"line":71,"column":48}}]},"5":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":2},"end":{"line":95,"column":2}},{"start":{"line":95,"column":2},"end":{"line":95,"column":2}}]},"6":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"7":{"line":139,"type":"cond-expr","locations":[{"start":{"line":139,"column":33},"end":{"line":139,"column":37}},{"start":{"line":139,"column":40},"end":{"line":139,"column":56}}]},"8":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":209,"column":2}},{"start":{"line":209,"column":2},"end":{"line":209,"column":2}}]},"9":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":12},"end":{"line":213,"column":19}},{"start":{"line":213,"column":23},"end":{"line":213,"column":25}}]},"10":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":4},"end":{"line":226,"column":4}},{"start":{"line":226,"column":4},"end":{"line":226,"column":4}}]},"11":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":4},"end":{"line":242,"column":4}},{"start":{"line":242,"column":4},"end":{"line":242,"column":4}}]},"12":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"13":{"line":250,"type":"binary-expr","locations":[{"start":{"line":250,"column":8},"end":{"line":250,"column":36}},{"start":{"line":250,"column":40},"end":{"line":250,"column":58}},{"start":{"line":250,"column":62},"end":{"line":250,"column":77}}]},"14":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":4},"end":{"line":258,"column":4}},{"start":{"line":258,"column":4},"end":{"line":258,"column":4}}]},"15":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":32}},{"start":{"line":258,"column":36},"end":{"line":258,"column":52}}]},"16":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"17":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":6},"end":{"line":267,"column":6}},{"start":{"line":267,"column":6},"end":{"line":267,"column":6}}]},"18":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":6},"end":{"line":272,"column":6}},{"start":{"line":272,"column":6},"end":{"line":272,"column":6}}]}},"code":["/**"," *  class Manifest"," *"," *  The Manifest logs the contents of assets compiled to a single"," *  directory. It records basic attributes about the asset for fast"," *  lookup without having to compile. A pointer from each logical path"," *  indicates with fingerprinted asset is the current one."," *"," *  The JSON is part of the public API and should be considered"," *  stable. This should make it easy to read from other programming"," *  languages and processes that don't have sprockets loaded. See"," *  `#assets` and `#files` for more infomation about the structure."," **/","","","'use strict';","","","// stdlib","var fs     = require('fs');","var path   = require('path');","var format = require('util').format;","","","// 3rd-party","var _         = require('lodash');","var pako      = require('pako');","var mkdirp    = require('mkdirp').sync;","","","// internal","var prop        = require('./common').prop;","var getter      = require('./common').getter;","var isAbsolute  = require('./common').isAbsolute;","var start_timer = require('./common').timer;","var logger      = require('./logger');","","","/**"," *  new Manifest(environment, path)"," *"," *  Create new Manifest associated with an `environment`. `path` is"," *  a full path to the manifest json file. The file may or may not"," *  already exist. The dirname of the `path` will be used to write"," *  compiled assets to. Otherwise, if the path is a directory, the"," *  filename will default to \"manifest.json\" in that directory."," *"," *      new Manifest(environment, \"./public/assets/manifest.json\");"," **/","var Manifest = module.exports = function Manifest(environment, pathname) {","  var data;","","  prop(this, 'environment', environment);","","  if (path.extname(pathname) === '') {","    prop(this, 'dir',   path.resolve(pathname));","    prop(this, 'path',  path.join(this.dir, 'manifest.json'));","  } else {","    prop(this, 'dir',   path.dirname(pathname));","    prop(this, 'path',  path.resolve(pathname));","  }","","  if (fs.existsSync(this.path)) {","    try {","      data = require(this.path);","    } catch (err) {","      logger.error(this.path + ' is invalid: ' + err);","    }","  }","","  prop(this, 'data', (!!data && _.isObject(data)) ? data : {});","};","","","/**"," *  Manifest#assets -> Object"," *"," *  Returns internal assets mapping. Keys are logical paths which"," *  map to the latest fingerprinted filename."," *"," *"," *  ##### Synopsis:"," *"," *      Logical path (String): Fingerprint path (String)"," *"," *"," *  ##### Example:"," *"," *      {"," *        \"application.js\" : \"application-2e8e9a7c6b0aafa0c9bdeec90ea30213.js\","," *        \"jquery.js\"      : \"jquery-ae0908555a245f8266f77df5a8edca2e.js\""," *      }"," **/","getter(Manifest.prototype, 'assets', function () {","  if (!this.data.assets) {","    this.data.assets = {};","  }","","  return this.data.assets;","});","","","/**"," *  Manifest#files -> Object"," *"," *  Returns internal file directory listing. Keys are filenames"," *  which map to an attributes array."," *"," *"," *  ##### Synopsis:"," *"," *      Fingerprint path (String):"," *        logical_path: Logical path (String)"," *        mtime: ISO8601 mtime (String)"," *        digest: Base64 hex digest (String)"," *"," *"," *  ##### Example:"," *"," *    {"," *      \"application-2e8e9a7c6b0aafa0c9bdeec90ea30213.js\" : {"," *        'logical_path'  : \"application.js\","," *        'mtime'         : \"2011-12-13T21:47:08-06:00\","," *        'digest'        : \"2e8e9a7c6b0aafa0c9bdeec90ea30213\""," *      }"," *    }"," **/","getter(Manifest.prototype, 'files', function () {","  if (!this.data.files) {","    this.data.files = {};","  }","","  return this.data.files;","});","","","// Coerce data to buffer","function toBuffer(data) {","  return Buffer.isBuffer(data) ? data : new Buffer(data);","}","","","// Write data String/Buffer into filename","function write(filename, mtime, data) {","  var tempname = filename + '+';","","  try {","    mkdirp(path.dirname(filename));","    fs.writeFileSync(tempname, toBuffer(data));","    fs.renameSync(tempname, filename);","    fs.utimesSync(filename, mtime, mtime);","  } catch (err) {","    // Try to remove tmp file on error.","    // Don't check if exists, just suppress errors","    try { fs.unlinkSync(tempname); } catch (__) {}","","    throw err;","  }","}","","","// Compress given String or Buffer","function gzip(data) {","  /* global Uint8Array */","  return new Buffer(pako.gzip(new Uint8Array(toBuffer(data))));","}","","","/**"," *  Manifest#compile(files[, options]) -> Object"," *  - files (Array):"," *  - options (Object):"," *"," *  ##### options:"," *"," *  - `sourceMaps` (false) - set `true` to write sourcemap files"," *  - `embedMappingComments` (false) - set `true` to embed sourcemap url"," *    into created files"," *  - `compress` (false) - set `true` to also create gzipped files"," *  - `noSourceMapProtection` (false) - set `true` to skip adding XSSI protection header"," *"," *  Compile and write asset(s) to directory. The asset is written to a"," *  fingerprinted filename like `app-2e8e9a7c6b0aafa0c9bdeec90ea30213.js`."," *  An entry is also inserted into the manifest file."," *"," *  Returns manifest content on success. Throws exception on error."," *"," *      var data = manifest.compile([\"app.js\"]);"," *"," *      //  data => {"," *      //    files: {"," *      //      \"app.js\" : \"app-2e8e9a7c6b0aafa0c9bdeec90ea30213.js\","," *      //      ..."," *      //    },"," *      //    assets: {"," *      //      \"app-2e8e9a7c6b0aafa0c9bdeec90ea30213.js\" : {"," *      //        \"logical_path\"  : \"app.js\","," *      //        \"mtime\"         : \"2011-12-13T21:47:08-06:00\","," *      //        \"digest\"        : \"2e8e9a7c6b0aafa0c9bdeec90ea30213\""," *      //      },"," *      //      ..."," *      //    }"," *      //  }"," **/","Manifest.prototype.compile = function (files, options) {","  var self     = this,","      paths    = [];","","  if (!this.environment) {","    throw new Error('Manifest requries environment for compilation');","  }","","  options = options || {};","","  this.environment.eachLogicalPath(files, function (pathname) {","    paths.push(pathname);","  });","","  paths = _.union(paths, _.filter(files, isAbsolute));","","  paths.forEach(function (logicalPath) {","    var timer = start_timer(), asset, target;","","    asset = self.environment.findAsset(logicalPath, { bundle: true });","","    if (!asset) {","      throw new Error('Can not find asset \\'' + logicalPath + '\\'');","    }","","    logger.debug(format('Compiled %s (%dms)', logicalPath, timer.stop()));","","    target = path.join(self.dir, asset.digestPath);","","    self.assets[asset.logicalPath]  = asset.digestPath;","    self.files[asset.digestPath]    = {","      logical_path:   asset.logicalPath,","      mtime:          asset.mtime.toISOString(),","      size:           asset.length,","      digest:         asset.digest","    };","","    if (fs.existsSync(target)) {","      logger.debug('Skipping ' + target + ', already exists');","      self.save();","      return;","    }","","    var buffer;","","    if (options.embedMappingComments && options.sourceMaps && asset.sourceMap) {","      buffer = new Buffer(asset.source + asset.mappingUrlComment());","    } else {","      buffer = asset.buffer;","    }","","    write(target, asset.mtime, buffer);","","    if (asset.type === 'bundled' && options.compress) {","      write(target + '.gz', asset.mtime, gzip(buffer));","    }","","    if (asset.sourceMap) {","      // XSSI protection header enabled by default","      var header = ')]}\\'\\n';","","      // Optionally skip XSSI protection header","      if (options.noSourceMapProtection) {","        header = '';","      }","","      write(target + '.map', asset.mtime, header + asset.sourceMap);","      if (options.compress) {","        write(target + '.map.gz', asset.mtime, gzip(header + asset.sourceMap));","      }","    }","","    self.save();","    logger.info('Writing ' + target);","  });","","  return self.data;","};","","","// Persist manifest back to FS","Manifest.prototype.save = function () {","  mkdirp(this.dir);","  fs.writeFileSync(this.path, JSON.stringify(this.data, null, '  '));","};",""],"l":{"20":1,"21":1,"22":1,"26":1,"27":1,"28":1,"32":1,"33":1,"34":1,"35":1,"36":1,"50":1,"51":0,"53":0,"55":0,"56":0,"57":0,"59":0,"60":0,"63":0,"64":0,"65":0,"67":0,"71":0,"94":1,"95":0,"96":0,"99":0,"128":1,"129":0,"130":0,"133":0,"138":1,"139":0,"144":1,"145":0,"147":0,"148":0,"149":0,"150":0,"151":0,"155":0,"157":0,"163":1,"165":0,"205":1,"206":0,"209":0,"210":0,"213":0,"215":0,"216":0,"219":0,"221":0,"222":0,"224":0,"226":0,"227":0,"230":0,"232":0,"234":0,"235":0,"242":0,"243":0,"244":0,"245":0,"248":0,"250":0,"251":0,"253":0,"256":0,"258":0,"259":0,"262":0,"264":0,"267":0,"268":0,"271":0,"272":0,"273":0,"277":0,"278":0,"281":0,"286":1,"287":0,"288":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/server.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/server.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"Server","line":67,"loc":{"start":{"line":67,"column":30},"end":{"line":67,"column":69}}},"2":{"name":"get_fingerprint","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":35}}},"3":{"name":"end","line":82,"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":24}}},"4":{"name":"etag","line":104,"loc":{"start":{"line":104,"column":0},"end":{"line":104,"column":21}}},"5":{"name":"is_etag_match","line":110,"loc":{"start":{"line":110,"column":0},"end":{"line":110,"column":35}}},"6":{"name":"is_gzip_accepted","line":116,"loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":31}}},"7":{"name":"log_event","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":48}}},"8":{"name":"serve_asset","line":139,"loc":{"start":{"line":139,"column":0},"end":{"line":139,"column":51}}},"9":{"name":"serve_source_map","line":188,"loc":{"start":{"line":188,"column":0},"end":{"line":188,"column":56}}},"10":{"name":"log","line":245,"loc":{"start":{"line":245,"column":23},"end":{"line":245,"column":50}}},"11":{"name":"compile","line":259,"loc":{"start":{"line":259,"column":27},"end":{"line":259,"column":72}}},"12":{"name":"(anonymous_12)","line":300,"loc":{"start":{"line":300,"column":37},"end":{"line":300,"column":60}}},"13":{"name":"(anonymous_13)","line":316,"loc":{"start":{"line":316,"column":49},"end":{"line":316,"column":72}}},"14":{"name":"handle","line":346,"loc":{"start":{"line":346,"column":26},"end":{"line":346,"column":52}}},"15":{"name":"(anonymous_15)","line":387,"loc":{"start":{"line":387,"column":33},"end":{"line":387,"column":55}}},"16":{"name":"(anonymous_16)","line":477,"loc":{"start":{"line":477,"column":22},"end":{"line":477,"column":55}}},"17":{"name":"(anonymous_17)","line":479,"loc":{"start":{"line":479,"column":9},"end":{"line":479,"column":29}}}},"statementMap":{"1":{"start":{"line":39,"column":0},"end":{"line":39,"column":29}},"2":{"start":{"line":40,"column":0},"end":{"line":40,"column":29}},"3":{"start":{"line":41,"column":0},"end":{"line":41,"column":28}},"4":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}},"5":{"start":{"line":46,"column":0},"end":{"line":46,"column":37}},"6":{"start":{"line":47,"column":0},"end":{"line":47,"column":43}},"7":{"start":{"line":51,"column":0},"end":{"line":51,"column":38}},"8":{"start":{"line":52,"column":0},"end":{"line":52,"column":43}},"9":{"start":{"line":53,"column":0},"end":{"line":53,"column":44}},"10":{"start":{"line":67,"column":0},"end":{"line":70,"column":2}},"11":{"start":{"line":68,"column":2},"end":{"line":68,"column":41}},"12":{"start":{"line":69,"column":2},"end":{"line":69,"column":38}},"13":{"start":{"line":74,"column":0},"end":{"line":74,"column":61}},"14":{"start":{"line":75,"column":0},"end":{"line":78,"column":1}},"15":{"start":{"line":76,"column":2},"end":{"line":76,"column":40}},"16":{"start":{"line":77,"column":2},"end":{"line":77,"column":25}},"17":{"start":{"line":82,"column":0},"end":{"line":100,"column":1}},"18":{"start":{"line":83,"column":2},"end":{"line":95,"column":3}},"19":{"start":{"line":85,"column":4},"end":{"line":89,"column":5}},"20":{"start":{"line":86,"column":6},"end":{"line":86,"column":53}},"21":{"start":{"line":87,"column":6},"end":{"line":87,"column":26}},"22":{"start":{"line":88,"column":6},"end":{"line":88,"column":33}},"23":{"start":{"line":92,"column":4},"end":{"line":92,"column":24}},"24":{"start":{"line":93,"column":4},"end":{"line":93,"column":57}},"25":{"start":{"line":94,"column":4},"end":{"line":94,"column":11}},"26":{"start":{"line":98,"column":2},"end":{"line":98,"column":22}},"27":{"start":{"line":99,"column":2},"end":{"line":99,"column":12}},"28":{"start":{"line":104,"column":0},"end":{"line":106,"column":1}},"29":{"start":{"line":105,"column":2},"end":{"line":105,"column":34}},"30":{"start":{"line":110,"column":0},"end":{"line":112,"column":1}},"31":{"start":{"line":111,"column":2},"end":{"line":111,"column":54}},"32":{"start":{"line":116,"column":0},"end":{"line":119,"column":1}},"33":{"start":{"line":117,"column":2},"end":{"line":117,"column":52}},"34":{"start":{"line":118,"column":2},"end":{"line":118,"column":55}},"35":{"start":{"line":124,"column":0},"end":{"line":136,"column":1}},"36":{"start":{"line":125,"column":2},"end":{"line":135,"column":4}},"37":{"start":{"line":139,"column":0},"end":{"line":185,"column":1}},"38":{"start":{"line":140,"column":2},"end":{"line":140,"column":21}},"39":{"start":{"line":143,"column":2},"end":{"line":143,"column":60}},"40":{"start":{"line":145,"column":2},"end":{"line":145,"column":35}},"41":{"start":{"line":146,"column":2},"end":{"line":146,"column":42}},"42":{"start":{"line":164,"column":2},"end":{"line":168,"column":3}},"43":{"start":{"line":165,"column":4},"end":{"line":165,"column":45}},"44":{"start":{"line":166,"column":4},"end":{"line":166,"column":52}},"45":{"start":{"line":167,"column":4},"end":{"line":167,"column":46}},"46":{"start":{"line":174,"column":2},"end":{"line":174,"column":113}},"47":{"start":{"line":175,"column":2},"end":{"line":175,"column":42}},"48":{"start":{"line":177,"column":2},"end":{"line":177,"column":23}},"49":{"start":{"line":179,"column":2},"end":{"line":182,"column":3}},"50":{"start":{"line":180,"column":4},"end":{"line":180,"column":14}},"51":{"start":{"line":181,"column":4},"end":{"line":181,"column":11}},"52":{"start":{"line":184,"column":2},"end":{"line":184,"column":18}},"53":{"start":{"line":188,"column":0},"end":{"line":219,"column":1}},"54":{"start":{"line":189,"column":2},"end":{"line":189,"column":21}},"55":{"start":{"line":191,"column":2},"end":{"line":211,"column":3}},"56":{"start":{"line":192,"column":4},"end":{"line":192,"column":69}},"57":{"start":{"line":194,"column":4},"end":{"line":194,"column":25}},"58":{"start":{"line":196,"column":4},"end":{"line":196,"column":62}},"59":{"start":{"line":198,"column":4},"end":{"line":198,"column":25}},"60":{"start":{"line":200,"column":4},"end":{"line":200,"column":47}},"61":{"start":{"line":201,"column":4},"end":{"line":201,"column":54}},"62":{"start":{"line":203,"column":4},"end":{"line":207,"column":5}},"63":{"start":{"line":204,"column":6},"end":{"line":204,"column":50}},"64":{"start":{"line":205,"column":6},"end":{"line":205,"column":57}},"65":{"start":{"line":206,"column":6},"end":{"line":206,"column":48}},"66":{"start":{"line":209,"column":4},"end":{"line":209,"column":70}},"67":{"start":{"line":210,"column":4},"end":{"line":210,"column":44}},"68":{"start":{"line":213,"column":2},"end":{"line":216,"column":3}},"69":{"start":{"line":214,"column":4},"end":{"line":214,"column":14}},"70":{"start":{"line":215,"column":4},"end":{"line":215,"column":11}},"71":{"start":{"line":218,"column":2},"end":{"line":218,"column":18}},"72":{"start":{"line":245,"column":0},"end":{"line":248,"column":2}},"73":{"start":{"line":246,"column":2},"end":{"line":247,"column":77}},"74":{"start":{"line":259,"column":0},"end":{"line":330,"column":2}},"75":{"start":{"line":260,"column":2},"end":{"line":260,"column":12}},"76":{"start":{"line":262,"column":2},"end":{"line":268,"column":3}},"77":{"start":{"line":263,"column":4},"end":{"line":264,"column":71}},"78":{"start":{"line":266,"column":4},"end":{"line":266,"column":18}},"79":{"start":{"line":267,"column":4},"end":{"line":267,"column":11}},"80":{"start":{"line":270,"column":2},"end":{"line":273,"column":3}},"81":{"start":{"line":271,"column":4},"end":{"line":271,"column":55}},"82":{"start":{"line":272,"column":4},"end":{"line":272,"column":11}},"83":{"start":{"line":276,"column":2},"end":{"line":279,"column":3}},"84":{"start":{"line":277,"column":4},"end":{"line":277,"column":26}},"85":{"start":{"line":278,"column":4},"end":{"line":278,"column":11}},"86":{"start":{"line":282,"column":2},"end":{"line":286,"column":3}},"87":{"start":{"line":283,"column":4},"end":{"line":283,"column":91}},"88":{"start":{"line":285,"column":4},"end":{"line":285,"column":51}},"89":{"start":{"line":288,"column":2},"end":{"line":292,"column":3}},"90":{"start":{"line":289,"column":4},"end":{"line":289,"column":88}},"91":{"start":{"line":294,"column":2},"end":{"line":297,"column":3}},"92":{"start":{"line":295,"column":4},"end":{"line":295,"column":26}},"93":{"start":{"line":296,"column":4},"end":{"line":296,"column":11}},"94":{"start":{"line":300,"column":2},"end":{"line":329,"column":5}},"95":{"start":{"line":301,"column":4},"end":{"line":304,"column":5}},"96":{"start":{"line":302,"column":6},"end":{"line":302,"column":20}},"97":{"start":{"line":303,"column":6},"end":{"line":303,"column":13}},"98":{"start":{"line":307,"column":4},"end":{"line":309,"column":5}},"99":{"start":{"line":308,"column":6},"end":{"line":308,"column":55}},"100":{"start":{"line":311,"column":4},"end":{"line":314,"column":5}},"101":{"start":{"line":312,"column":6},"end":{"line":312,"column":28}},"102":{"start":{"line":313,"column":6},"end":{"line":313,"column":13}},"103":{"start":{"line":316,"column":4},"end":{"line":328,"column":7}},"104":{"start":{"line":317,"column":6},"end":{"line":320,"column":7}},"105":{"start":{"line":318,"column":8},"end":{"line":318,"column":22}},"106":{"start":{"line":319,"column":8},"end":{"line":319,"column":15}},"107":{"start":{"line":323,"column":6},"end":{"line":325,"column":7}},"108":{"start":{"line":324,"column":8},"end":{"line":324,"column":60}},"109":{"start":{"line":327,"column":6},"end":{"line":327,"column":28}},"110":{"start":{"line":346,"column":0},"end":{"line":454,"column":2}},"111":{"start":{"line":347,"column":2},"end":{"line":352,"column":46}},"112":{"start":{"line":354,"column":2},"end":{"line":360,"column":3}},"113":{"start":{"line":355,"column":4},"end":{"line":355,"column":63}},"114":{"start":{"line":357,"column":4},"end":{"line":357,"column":78}},"115":{"start":{"line":358,"column":4},"end":{"line":358,"column":18}},"116":{"start":{"line":359,"column":4},"end":{"line":359,"column":11}},"117":{"start":{"line":363,"column":2},"end":{"line":367,"column":3}},"118":{"start":{"line":364,"column":4},"end":{"line":364,"column":86}},"119":{"start":{"line":365,"column":4},"end":{"line":365,"column":18}},"120":{"start":{"line":366,"column":4},"end":{"line":366,"column":11}},"121":{"start":{"line":370,"column":2},"end":{"line":374,"column":3}},"122":{"start":{"line":371,"column":4},"end":{"line":371,"column":84}},"123":{"start":{"line":372,"column":4},"end":{"line":372,"column":18}},"124":{"start":{"line":373,"column":4},"end":{"line":373,"column":11}},"125":{"start":{"line":377,"column":2},"end":{"line":379,"column":3}},"126":{"start":{"line":378,"column":4},"end":{"line":378,"column":55}},"127":{"start":{"line":382,"column":2},"end":{"line":384,"column":3}},"128":{"start":{"line":383,"column":4},"end":{"line":383,"column":47}},"129":{"start":{"line":387,"column":2},"end":{"line":453,"column":5}},"130":{"start":{"line":388,"column":4},"end":{"line":393,"column":5}},"131":{"start":{"line":389,"column":6},"end":{"line":389,"column":42}},"132":{"start":{"line":390,"column":6},"end":{"line":390,"column":92}},"133":{"start":{"line":391,"column":6},"end":{"line":391,"column":20}},"134":{"start":{"line":392,"column":6},"end":{"line":392,"column":13}},"135":{"start":{"line":396,"column":4},"end":{"line":400,"column":5}},"136":{"start":{"line":397,"column":6},"end":{"line":397,"column":72}},"137":{"start":{"line":398,"column":6},"end":{"line":398,"column":20}},"138":{"start":{"line":399,"column":6},"end":{"line":399,"column":13}},"139":{"start":{"line":411,"column":4},"end":{"line":411,"column":38}},"140":{"start":{"line":418,"column":4},"end":{"line":418,"column":45}},"141":{"start":{"line":424,"column":4},"end":{"line":431,"column":5}},"142":{"start":{"line":427,"column":6},"end":{"line":427,"column":65}},"143":{"start":{"line":430,"column":6},"end":{"line":430,"column":75}},"144":{"start":{"line":433,"column":4},"end":{"line":433,"column":64}},"145":{"start":{"line":434,"column":4},"end":{"line":434,"column":63}},"146":{"start":{"line":435,"column":4},"end":{"line":435,"column":49}},"147":{"start":{"line":436,"column":4},"end":{"line":436,"column":50}},"148":{"start":{"line":442,"column":4},"end":{"line":446,"column":5}},"149":{"start":{"line":443,"column":6},"end":{"line":443,"column":74}},"150":{"start":{"line":444,"column":6},"end":{"line":444,"column":20}},"151":{"start":{"line":445,"column":6},"end":{"line":445,"column":13}},"152":{"start":{"line":448,"column":4},"end":{"line":452,"column":5}},"153":{"start":{"line":449,"column":6},"end":{"line":449,"column":53}},"154":{"start":{"line":451,"column":6},"end":{"line":451,"column":48}},"155":{"start":{"line":477,"column":0},"end":{"line":482,"column":2}},"156":{"start":{"line":478,"column":2},"end":{"line":478,"column":46}},"157":{"start":{"line":479,"column":2},"end":{"line":481,"column":4}},"158":{"start":{"line":480,"column":4},"end":{"line":480,"column":32}}},"branchMap":{"1":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":13},"end":{"line":77,"column":17}},{"start":{"line":77,"column":20},"end":{"line":77,"column":24}}]},"2":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"3":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"4":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":15}},{"start":{"line":85,"column":19},"end":{"line":85,"column":31}}]},"5":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":15},"end":{"line":117,"column":45}},{"start":{"line":117,"column":49},"end":{"line":117,"column":51}}]},"6":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":9},"end":{"line":118,"column":23}},{"start":{"line":118,"column":27},"end":{"line":118,"column":54}}]},"7":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":20},"end":{"line":130,"column":35}},{"start":{"line":130,"column":39},"end":{"line":130,"column":46}}]},"8":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":2},"end":{"line":164,"column":2}},{"start":{"line":164,"column":2},"end":{"line":164,"column":2}}]},"9":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":37}},{"start":{"line":164,"column":41},"end":{"line":164,"column":62}}]},"10":{"line":174,"type":"cond-expr","locations":[{"start":{"line":174,"column":88},"end":{"line":174,"column":105}},{"start":{"line":174,"column":108},"end":{"line":174,"column":110}}]},"11":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"12":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"13":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"14":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":42}},{"start":{"line":203,"column":46},"end":{"line":203,"column":67}}]},"15":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":2},"end":{"line":213,"column":2}},{"start":{"line":213,"column":2},"end":{"line":213,"column":2}}]},"16":{"line":263,"type":"cond-expr","locations":[{"start":{"line":263,"column":65},"end":{"line":263,"column":69}},{"start":{"line":264,"column":12},"end":{"line":264,"column":70}}]},"17":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":13},"end":{"line":263,"column":26}},{"start":{"line":263,"column":30},"end":{"line":263,"column":61}}]},"18":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":2},"end":{"line":270,"column":2}},{"start":{"line":270,"column":2},"end":{"line":270,"column":2}}]},"19":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":2},"end":{"line":276,"column":2}},{"start":{"line":276,"column":2},"end":{"line":276,"column":2}}]},"20":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"21":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":6},"end":{"line":282,"column":21}},{"start":{"line":282,"column":25},"end":{"line":282,"column":48}}]},"22":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":2},"end":{"line":288,"column":2}},{"start":{"line":288,"column":2},"end":{"line":288,"column":2}}]},"23":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":2},"end":{"line":294,"column":2}},{"start":{"line":294,"column":2},"end":{"line":294,"column":2}}]},"24":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":4},"end":{"line":301,"column":4}},{"start":{"line":301,"column":4},"end":{"line":301,"column":4}}]},"25":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"26":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":4},"end":{"line":311,"column":4}},{"start":{"line":311,"column":4},"end":{"line":311,"column":4}}]},"27":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":6},"end":{"line":317,"column":6}},{"start":{"line":317,"column":6},"end":{"line":317,"column":6}}]},"28":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":6},"end":{"line":323,"column":6}},{"start":{"line":323,"column":6},"end":{"line":323,"column":6}}]},"29":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":2},"end":{"line":363,"column":2}},{"start":{"line":363,"column":2},"end":{"line":363,"column":2}}]},"30":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":6},"end":{"line":363,"column":33}},{"start":{"line":363,"column":37},"end":{"line":363,"column":68}}]},"31":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":2},"end":{"line":370,"column":2}},{"start":{"line":370,"column":2},"end":{"line":370,"column":2}}]},"32":{"line":370,"type":"binary-expr","locations":[{"start":{"line":370,"column":6},"end":{"line":370,"column":26}},{"start":{"line":370,"column":30},"end":{"line":370,"column":51}}]},"33":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":2},"end":{"line":377,"column":2}},{"start":{"line":377,"column":2},"end":{"line":377,"column":2}}]},"34":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":2},"end":{"line":382,"column":2}},{"start":{"line":382,"column":2},"end":{"line":382,"column":2}}]},"35":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":4},"end":{"line":388,"column":4}},{"start":{"line":388,"column":4},"end":{"line":388,"column":4}}]},"36":{"line":389,"type":"binary-expr","locations":[{"start":{"line":389,"column":12},"end":{"line":389,"column":23}},{"start":{"line":389,"column":27},"end":{"line":389,"column":41}}]},"37":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":4},"end":{"line":396,"column":4}},{"start":{"line":396,"column":4},"end":{"line":396,"column":4}}]},"38":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":4},"end":{"line":424,"column":4}},{"start":{"line":424,"column":4},"end":{"line":424,"column":4}}]},"39":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":4},"end":{"line":442,"column":4}},{"start":{"line":442,"column":4},"end":{"line":442,"column":4}}]},"40":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":4},"end":{"line":448,"column":4}},{"start":{"line":448,"column":4},"end":{"line":448,"column":4}}]}},"code":["/**"," *  class Server"," *"," *  Easy to use server/middleware ideal for serving assets your assets:"," *"," *  - great for development, as it recompiles canged assets on-fly"," *  - great for production, as it caches results, and it can become as effecient"," *    as `staticCache` middleware (or even better) of `connect` module."," *"," *"," *  ##### Examples"," *"," *      // development mode"," *      var srv = new Server(env);"," *"," *      // production mode"," *      var srv = new Server(env.index);"," *"," *      // production mode (restrictive)"," *      var files = ['app.js', 'app.css', 'logo.jpg'];"," *      var srv = new Server(env.index, manifest.compile(files));"," *"," *  You can use this server in your connect app (or as `request` listener of"," *  `http` server) like this:"," *"," *      app.use(function (req, res) {"," *        srv.handle(req, res);"," *      });"," *"," *      // there's a shorthand syntax as well:"," *"," *      app.use(mincer.createServer(env));"," **/","","'use strict';","","","// stdlib","var zlib   = require('zlib');","var http   = require('http');","var url    = require('url');","var format = require('util').format;","","","// 3rd-party","var mimoza       = require('mimoza');","var compressible = require('compressible');","","","// internal","var logger      = require('./logger');","var prop        = require('./common').prop;","var start_timer = require('./common').timer;","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  new Server(environment[, manifest])"," *  - environment (Environment|Index)"," *  - manifest (Object): Data returned by [[Manifest#compile]]"," *"," *  If you provide `manifest`, then server will not even try to find files on"," *  FS unless they are specified in the `manifest`."," **/","var Server = module.exports = function Server(environment, manifest) {","  prop(this, 'environment', environment);","  prop(this, 'manifest',    manifest);","};","","","// Retruns fingerprint from the pathname","var FINGERPRINT_RE = /-([0-9a-f]{32,40})\\.[^.]+(?:\\.map)?$/i;","function get_fingerprint(pathname) {","  var m = FINGERPRINT_RE.exec(pathname);","  return m ? m[1] : null;","}","","","// Helper to write the code and end response","function end(res, code) {","  if (code >= 400) {","    // check res object contains connect/express request and next structure","    if (res.req && res.req.next) {","      var error = new Error(http.STATUS_CODES[code]);","      error.status = code;","      return res.req.next(error);","    }","","    // write human-friendly error message","    res.writeHead(code);","    res.end('[' + code + '] ' + http.STATUS_CODES[code]);","    return;","  }","","  // just end with no body for 304 responses and such","  res.writeHead(code);","  res.end();","}","","","// Returns Etag value for `asset`","function etag(asset) {","  return '\"' + asset.digest + '\"';","}","","","// Returns true whenever If-None-Match header matches etag of `asset`","function is_etag_match(req, asset) {","  return etag(asset) === req.headers['if-none-match'];","}","","","// Tells whenever browser accepts gzip at all","function is_gzip_accepted(req) {","  var accept = req.headers['accept-encoding'] || '';","  return accept === '*' || accept.indexOf('gzip') >= 0;","}","","","// Returns log event structure.","//","function log_event(req, code, message, elapsed) {","  return {","    code:           code,","    message:        message,","    elapsed:        elapsed,","    request:        req,","    url:            req.originalUrl || req.url,","    method:         req.method,","    headers:        req.headers,","    httpVersion:    req.httpVersion,","    remoteAddress:  req.connection.remoteAddress","  };","}","","","function serve_asset(self, asset, req, res, timer) {","  var buffer, length;","","  // OK","  self.log('info', log_event(req, 200, 'OK', timer.stop()));","","  buffer = asset.__server_buffer__;","  length = asset.__server_buffer__.length;","","  //","  // Alter some headers for gzipped assets","  //","","  //","  // Only gzip is supported:","  //","  // - too many issues with deflate","  // - browsers that support deflate well, also support gzip","  //","  // Details:","  //","  // - http://www.vervestudios.co/projects/compression-tests/results","  // - http://zoompf.com/blog/2012/02/lose-the-wait-http-compression","  //","","  if (asset.__server_buffer_gzipped__ && is_gzip_accepted(req)) {","    buffer = asset.__server_buffer_gzipped__;","    length = asset.__server_buffer_gzipped__.length;","    res.setHeader('Content-Encoding', 'gzip');","  }","","  //","  // Set content type and length headers","  // Force charset for text assets, to avoid problems with JS loaders","  //","  res.setHeader('Content-Type', asset.contentType + (mimoza.isText(asset.contentType) ? '; charset=UTF-8' : ''));","  res.setHeader('Content-Length', length);","","  res.statusCode = 200;","","  if (req.method === 'HEAD') {","    res.end();","    return;","  }","","  res.end(buffer);","}","","","function serve_source_map(self, asset, req, res, timer) {","  var length, buffer;","","  if (!asset.__server_sourcemap_buffer__) {","    self.log('info', log_event(req, 404, 'Not Found', timer.stop()));","","    res.statusCode = 404;","  } else {","    self.log('info', log_event(req, 200, 'OK', timer.stop()));","","    res.statusCode = 200;","","    buffer = asset.__server_sourcemap_buffer__;","    length = asset.__server_sourcemap_buffer__.length;","","    if (asset.__gzipped_server_sourcemap__ && is_gzip_accepted(req)) {","      buffer = asset.__gzipped_server_sourcemap__;","      length = asset.__gzipped_server_sourcemap__.length;","      res.setHeader('Content-Encoding', 'gzip');","    }","","    res.setHeader('Content-Type',  'application/json; charset=UTF-8');","    res.setHeader('Content-Length', length);","  }","","  if (req.method === 'HEAD') {","    res.end();","    return;","  }","","  res.end(buffer);","}","","","/** internal"," *  Server#log(level, event) -> Void"," *  - level (String): Event level"," *  - event (Object): Event data"," *"," *  This is an internal method that formats and writes messages using"," *  [[Mincer.logger]] and it fits almost 99% of cases. But if you want to"," *  integrate this [[Server]] into your existing application and have logs"," *  formatted in your way you can override this method."," *"," *"," *  ##### Event"," *"," *  Event is an object with following fields:"," *"," *  - **code** (Number): Status code"," *  - **message** (String): Message"," *  - **elapsed** (Number): Time elapsed in milliseconds"," *  - **url** (String): Request url. See `http.request.url`."," *  - **method** (String): Request method. See `http.request.method`."," *  - **headers** (Object): Request headers. See `http.request.headers`."," *  - **httpVersion** (String): Request httpVersion. See `http.request.httpVersion`."," **/","Server.prototype.log = function log(level, event) {","  logger[level](format('Served asset %s - %d %s (%dms)',","                       event.url, event.code, event.message, event.elapsed));","};","","","/**"," *  Server#compile(pathname, bundle, callback(err, asset)) -> Void"," *  - pathname (String)"," *  - bundle (Boolean)"," *  - callback (Function)"," *"," *  Finds and compiles given asset."," **/","Server.prototype.compile = function compile(pathname, bundle, callback) {","  var asset;","","  try {","    asset = (this.manifest && !this.manifest.assets[pathname]) ? null","          : this.environment.findAsset(pathname, { bundle: !!bundle });","  } catch (err) {","    callback(err);","    return;","  }","","  if (!asset) {","    callback(/* err = undefined, asset = undefined */);","    return;","  }","","  // return immediately if asset was previously processed","  if (asset.__server_buffer__) {","    callback(null, asset);","    return;","  }","","  // For bundled assets create patched content with embedded url.","  if (asset.sourceMap && asset.mappingUrlComment) {","    prop(asset, '__server_buffer__', new Buffer(asset.source + asset.mappingUrlComment()));","  } else {","    prop(asset, '__server_buffer__', asset.buffer);","  }","","  if (asset.sourceMap) {","    prop(asset, '__server_sourcemap_buffer__', new Buffer(')]}\\'\\n' + asset.sourceMap));","    // Strange \")]}'\\n\" line added to sourcemap is for XSSI protection.","    // See spec for details.","  }","","  if (!compressible(asset.contentType)) {","    callback(null, asset);","    return;","  }","","  // Gzip and cache buffer","  zlib.gzip(asset.__server_buffer__, function (err, buffer) {","    if (err) {","      callback(err);","      return;","    }","","    // set __server_buffer_gzipped__ buffer only if we have compression profit","    if (buffer.length < asset.__server_buffer__.length) {","      prop(asset, '__server_buffer_gzipped__', buffer);","    }","","    if (!asset.__server_sourcemap_buffer__) {","      callback(null, asset);","      return;","    }","","    zlib.gzip(asset.__server_sourcemap_buffer__, function (err, buffer) {","      if (err) {","        callback(err);","        return;","      }","","      // set __server_buffer_gzipped__ buffer only if we have compression profit","      if (buffer.length < asset.__server_sourcemap_buffer__.length) {","        prop(asset, '__gzipped_server_sourcemap__', buffer);","      }","","      callback(null, asset);","    });","  });","};","","","/**"," *  Server#handle(req, res) -> Void"," *  - req (http.ServerRequest)"," *  - res (hhtp.ServerResponse)"," *"," *  Hander function suitable for usage as server `request` event listener or as"," *  middleware for TJ's `connect` module."," *"," *"," *  ##### Exampple"," *"," *  var assetsSet"," **/","Server.prototype.handle = function handle(req, res) {","  var self        = this,","      timer       = start_timer(),","      pathname    = url.parse(req.url).pathname,","      bundle      = !/body=[1t]/.test(url.parse(req.url).query),","      sourceMap   = /\\.map$/i.test(pathname),","      fingerprint = get_fingerprint(pathname);","","  try {","    pathname = decodeURIComponent(pathname.replace(/^\\//, ''));","  } catch (err) {","    self.log('error', log_event(req, 400, 'Failed decode URL', timer.stop()));","    end(res, 400);","    return;","  }","","  // forbid requests with `..` or NUL chars","  if (pathname.indexOf('..') >= 0 || pathname.indexOf('\\u0000') >= 0) {","    self.log('error', log_event(req, 403, 'URL contains unsafe chars', timer.stop()));","    end(res, 403);","    return;","  }","","  // ignore non-GET requests","  if (req.method !== 'GET' && req.method !== 'HEAD') {","    self.log('error', log_event(req, 403, 'HTTP method not allowed', timer.stop()));","    end(res, 403);","    return;","  }","","  // remove fingerprint (digest) from URL","  if (fingerprint) {","    pathname = pathname.replace('-' + fingerprint, '');","  }","","  // remove .map extension from pathname","  if (sourceMap) {","    pathname = pathname.replace(/\\.map$/i, '');","  }","","  // try to find and compile asset","  this.compile(pathname, bundle, function (err, asset) {","    if (err) {","      err = err.message || err.toString();","      self.log('error', log_event(req, 500, 'Error compiling asset: ' + err, timer.stop()));","      end(res, 500);","      return;","    }","","    // asset not found","    if (!asset) {","      self.log('error', log_event(req, 404, 'Not found', timer.stop()));","      end(res, 404);","      return;","    }","","    //","    // Asset found. Sending headers for 200/304 responses:","    // http://tools.ietf.org/html/draft-ietf-httpbis-p4-conditional-18#section-4.1","    //","","    //","    // Ranges are not supported yet","    //","","    res.removeHeader('Accept-Ranges');","","    //","    // Mark for proxies, that we can return different content (plain & gzipped),","    // depending on specified (comma-separated) headers","    //","","    res.setHeader('Vary', 'Accept-Encoding');","","    //","    // Set caching headers","    //","","    if (fingerprint) {","      // If the request url contains a fingerprint, set a long","      // expires on the response","      res.setHeader('Cache-Control', 'public, max-age=31536000');","    } else {","      // Otherwise set `must-revalidate` since the asset could be modified.","      res.setHeader('Cache-Control', 'public, max-age=0, must-revalidate');","    }","","    res.setHeader('Date',           (new Date()).toUTCString());","    res.setHeader('Last-Modified',  asset.mtime.toUTCString());","    res.setHeader('ETag',           etag(asset));","    res.setHeader('Server',         'Nokla 1630');","","    //","    // Check if asset's etag matches `if-none-match` header","    //","","    if (is_etag_match(req, asset)) {","      self.log('info', log_event(req, 304, 'Not Modified', timer.stop()));","      end(res, 304);","      return;","    }","","    if (sourceMap) {","      serve_source_map(self, asset, req, res, timer);","    } else {","      serve_asset(self, asset, req, res, timer);","    }","  });","};","","","/**"," *  Server.createServer(environment[, manifest]) -> Function"," *  - environment (Environment)"," *  - manifest (Object)"," *"," *  Returns a server function suitable to be used as `request` event handler of"," *  `http` Node library module or as `connect` middleware."," *"," *"," *  ##### Example"," *"," *      // Using TJ's Connect module"," *      var app = connect();"," *      app.use('/assets/', Server.createServer(env));"," *"," *"," *  ##### See Also"," *"," *  - [[Server.new]]"," **/","Server.createServer = function (environment, manifest) {","  var srv = new Server(environment, manifest);","  return function (req, res) {","    return srv.handle(req, res);","  };","};",""],"l":{"39":1,"40":1,"41":1,"42":1,"46":1,"47":1,"51":1,"52":1,"53":1,"67":1,"68":0,"69":0,"74":1,"75":1,"76":0,"77":0,"82":1,"83":0,"85":0,"86":0,"87":0,"88":0,"92":0,"93":0,"94":0,"98":0,"99":0,"104":1,"105":0,"110":1,"111":0,"116":1,"117":0,"118":0,"124":1,"125":0,"139":1,"140":0,"143":0,"145":0,"146":0,"164":0,"165":0,"166":0,"167":0,"174":0,"175":0,"177":0,"179":0,"180":0,"181":0,"184":0,"188":1,"189":0,"191":0,"192":0,"194":0,"196":0,"198":0,"200":0,"201":0,"203":0,"204":0,"205":0,"206":0,"209":0,"210":0,"213":0,"214":0,"215":0,"218":0,"245":1,"246":0,"259":1,"260":0,"262":0,"263":0,"266":0,"267":0,"270":0,"271":0,"272":0,"276":0,"277":0,"278":0,"282":0,"283":0,"285":0,"288":0,"289":0,"294":0,"295":0,"296":0,"300":0,"301":0,"302":0,"303":0,"307":0,"308":0,"311":0,"312":0,"313":0,"316":0,"317":0,"318":0,"319":0,"323":0,"324":0,"327":0,"346":1,"347":0,"354":0,"355":0,"357":0,"358":0,"359":0,"363":0,"364":0,"365":0,"366":0,"370":0,"371":0,"372":0,"373":0,"377":0,"378":0,"382":0,"383":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"396":0,"397":0,"398":0,"399":0,"411":0,"418":0,"424":0,"427":0,"430":0,"433":0,"434":0,"435":0,"436":0,"442":0,"443":0,"444":0,"445":0,"448":0,"449":0,"451":0,"477":1,"478":0,"479":0,"480":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/file_store.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/lib/mincer/file_store.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"FileStore","line":37,"loc":{"start":{"line":37,"column":33},"end":{"line":37,"column":58}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":26},"end":{"line":43,"column":41}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":26},"end":{"line":58,"column":47}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":19,"column":28}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":30}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":31}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}},"6":{"start":{"line":27,"column":0},"end":{"line":27,"column":37}},"7":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"8":{"start":{"line":38,"column":2},"end":{"line":38,"column":33}},"9":{"start":{"line":43,"column":0},"end":{"line":55,"column":2}},"10":{"start":{"line":44,"column":2},"end":{"line":46,"column":22}},"11":{"start":{"line":48,"column":2},"end":{"line":52,"column":3}},"12":{"start":{"line":50,"column":4},"end":{"line":50,"column":55}},"13":{"start":{"line":51,"column":4},"end":{"line":51,"column":50}},"14":{"start":{"line":54,"column":2},"end":{"line":54,"column":14}},"15":{"start":{"line":58,"column":0},"end":{"line":68,"column":2}},"16":{"start":{"line":59,"column":2},"end":{"line":61,"column":35}},"17":{"start":{"line":63,"column":2},"end":{"line":63,"column":21}},"18":{"start":{"line":65,"column":2},"end":{"line":65,"column":33}},"19":{"start":{"line":66,"column":2},"end":{"line":66,"column":40}},"20":{"start":{"line":67,"column":2},"end":{"line":67,"column":26}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"2":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":17},"end":{"line":61,"column":28}},{"start":{"line":61,"column":32},"end":{"line":61,"column":34}}]}},"code":["/**"," *  class FileStore"," *"," *  Cache backend that keeps assets cache on FS."," *"," *  ##### Usage"," *"," *      env.cache = new FileStore('/path/to/cache');"," **/","","","////////////////////////////////////////////////////////////////////////////////","","","'use strict';","","","// stdlib","var fs      = require('fs');","var exists  = fs.existsSync;","var read    = fs.readFileSync;","var write   = fs.writeFileSync;","var path    = require('path');","","","// 3rd-party","var mkdirp  = require('mkdirp').sync;","","","////////////////////////////////////////////////////////////////////////////////","","","/**"," *  new FileStore(root)"," *  - root (String): cache path root"," **/","var FileStore = module.exports = function FileStore(root) {","  this.root = path.resolve(root);","};","","","","FileStore.prototype.get = function (key) {","  var dataFile = path.join(this.root, key),","      metaFile = path.join(this.root, key + '.json'),","      hash     = null;","","  if (exists(metaFile)) {","    // using read + toString for backward compatibility","    hash = JSON.parse(read(metaFile).toString('utf8'));","    hash.source = read(dataFile).toString('utf8');","  }","","  return hash;","};","","","FileStore.prototype.set = function (key, hash) {","  var dataFile = path.join(this.root, key),","      metaFile = path.join(this.root, key + '.json'),","      source   = hash.source || '';","","  delete hash.source;","","  mkdirp(path.dirname(metaFile));","  write(metaFile, JSON.stringify(hash));","  write(dataFile, source);","};",""],"l":{"19":1,"20":1,"21":1,"22":1,"23":1,"27":1,"37":1,"38":0,"43":1,"44":0,"48":0,"50":0,"51":0,"54":0,"58":1,"59":0,"63":0,"65":0,"66":0,"67":0}},"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/bin/mincer.js":{"path":"/home/travis/build/npmtest/node-npmtest-mincer/node_modules/mincer/bin/mincer.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":0,"14":0,"15":2,"16":2,"17":2,"18":2,"19":2,"20":0,"21":2,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[2,0],"2":[0,2],"3":[2,2],"4":[0,2],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":70,"loc":{"start":{"line":70,"column":51},"end":{"line":70,"column":67}}},"2":{"name":"(anonymous_2)","line":76,"loc":{"start":{"line":76,"column":21},"end":{"line":76,"column":37}}},"3":{"name":"(anonymous_3)","line":80,"loc":{"start":{"line":80,"column":23},"end":{"line":80,"column":39}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":50}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}},"6":{"start":{"line":23,"column":0},"end":{"line":27,"column":3}},"7":{"start":{"line":30,"column":0},"end":{"line":33,"column":3}},"8":{"start":{"line":35,"column":0},"end":{"line":40,"column":3}},"9":{"start":{"line":42,"column":0},"end":{"line":45,"column":3}},"10":{"start":{"line":47,"column":0},"end":{"line":51,"column":3}},"11":{"start":{"line":57,"column":0},"end":{"line":62,"column":1}},"12":{"start":{"line":58,"column":2},"end":{"line":61,"column":3}},"13":{"start":{"line":59,"column":4},"end":{"line":59,"column":77}},"14":{"start":{"line":60,"column":4},"end":{"line":60,"column":72}},"15":{"start":{"line":65,"column":0},"end":{"line":65,"column":34}},"16":{"start":{"line":66,"column":0},"end":{"line":66,"column":56}},"17":{"start":{"line":67,"column":0},"end":{"line":67,"column":21}},"18":{"start":{"line":70,"column":0},"end":{"line":74,"column":3}},"19":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"20":{"start":{"line":72,"column":4},"end":{"line":72,"column":33}},"21":{"start":{"line":76,"column":0},"end":{"line":78,"column":3}},"22":{"start":{"line":77,"column":2},"end":{"line":77,"column":31}},"23":{"start":{"line":80,"column":0},"end":{"line":82,"column":3}},"24":{"start":{"line":81,"column":2},"end":{"line":81,"column":39}},"25":{"start":{"line":93,"column":0},"end":{"line":93,"column":27}},"26":{"start":{"line":102,"column":0},"end":{"line":113,"column":1}},"27":{"start":{"line":103,"column":2},"end":{"line":103,"column":63}},"28":{"start":{"line":105,"column":2},"end":{"line":110,"column":3}},"29":{"start":{"line":106,"column":4},"end":{"line":106,"column":32}},"30":{"start":{"line":108,"column":4},"end":{"line":108,"column":23}},"31":{"start":{"line":109,"column":4},"end":{"line":109,"column":20}},"32":{"start":{"line":112,"column":2},"end":{"line":112,"column":18}},"33":{"start":{"line":116,"column":0},"end":{"line":126,"column":1}},"34":{"start":{"line":117,"column":2},"end":{"line":117,"column":50}},"35":{"start":{"line":119,"column":2},"end":{"line":122,"column":3}},"36":{"start":{"line":120,"column":4},"end":{"line":120,"column":63}},"37":{"start":{"line":121,"column":4},"end":{"line":121,"column":20}},"38":{"start":{"line":124,"column":2},"end":{"line":124,"column":41}},"39":{"start":{"line":125,"column":2},"end":{"line":125,"column":18}},"40":{"start":{"line":129,"column":0},"end":{"line":129,"column":67}},"41":{"start":{"line":130,"column":0},"end":{"line":130,"column":16}}},"branchMap":{"1":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":0},"end":{"line":57,"column":0}},{"start":{"line":57,"column":0},"end":{"line":57,"column":0}}]},"2":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"3":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":1},"end":{"line":70,"column":24}},{"start":{"line":70,"column":28},"end":{"line":70,"column":30}}]},"4":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"5":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":0},"end":{"line":102,"column":0}},{"start":{"line":102,"column":0},"end":{"line":102,"column":0}}]},"6":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":0},"end":{"line":116,"column":0}},{"start":{"line":116,"column":0},"end":{"line":116,"column":0}}]},"7":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":2},"end":{"line":119,"column":2}},{"start":{"line":119,"column":2},"end":{"line":119,"column":2}}]}},"code":["//#!/usr/bin/env node","","'use strict';","","","// stdlib","var fs    = require('fs');","var path  = require('path');","","","// 3rd-party","var ArgumentParser  = require('argparse').ArgumentParser;","var shellwords      = require('shellwords').split;","","","// internal","var Mincer      = require('..');","","","////////////////////////////////////////////////////////////////////////////////","","","var cli = new ArgumentParser({","  prog:     'mincer',","  version:  require('../package.json').version,","  addHelp:  true","});","","","cli.addArgument([ '--noenv' ], {","  help:         'Disables .mincerrc file',","  action:       'storeTrue'","});","","cli.addArgument([ '-I', '--include' ], {","  help:         'Adds the directory to the Mincer load path',","  metavar:      'DIRECTORY',","  action:       'append',","  required:     true","});","","cli.addArgument([ '-o', '--output' ], {","  help:         'Copy provided assets into DIRECTORY',","  metavar:      'DIRECTORY'","});","","cli.addArgument([ 'filenames' ], {","  help:         'File(s) to process',","  metavar:      'FILE',","  nargs:        '+'","});","","","////////////////////////////////////////////////////////////////////////////////","","","if (process.argv.indexOf('--noenv') === -1) {","  if (fs.existsSync('.mincerrc')) {","    var rcflags = fs.readFileSync('.mincerrc', 'utf8').replace(/^#.*/gm, '');","    [].splice.apply(process.argv, [ 2, 0 ].concat(shellwords(rcflags)));","  }","}","","","var args        = cli.parseArgs();","var environment = new Mincer.Environment(process.cwd());","var filenames   = [];","","","(process.env.MINCER_PATH || '').split(':').forEach(function (path) {","  if (path) {","    environment.appendPath(path);","  }","});","","args.include.forEach(function (path) {","  environment.appendPath(path);","});","","args.filenames.forEach(function (file) {","  filenames.push(path.normalize(file));","});","","","////////////////////////////////////////////////////////////////////////////////","","","//","// Configure Mincer logger","//","","","Mincer.logger.use(console);","","","//","// Compiling manifest with bunch of files","//","","/*eslint-disable no-console*/","","if (args.output) {","  var manifest = new Mincer.Manifest(environment, args.output);","","  try {","    manifest.compile(filenames);","  } catch (err) {","    console.error(err);","    process.exit(1);","  }","","  process.exit(0);","}","","","if (filenames.length === 1) {","  var asset = environment.findAsset(filenames[0]);","","  if (!asset) {","    console.error('Cannot find logical path: ' + filenames[0]);","    process.exit(1);","  }","","  process.stdout.write(asset.toString());","  process.exit(0);","}","","","console.error('Only one file can be compiled to stdout at a time');","process.exit(1);",""],"l":{"7":2,"8":2,"12":2,"13":2,"17":2,"23":2,"30":2,"35":2,"42":2,"47":2,"57":2,"58":2,"59":0,"60":0,"65":2,"66":2,"67":2,"70":2,"71":2,"72":0,"76":2,"77":0,"80":0,"81":0,"93":0,"102":0,"103":0,"105":0,"106":0,"108":0,"109":0,"112":0,"116":0,"117":0,"119":0,"120":0,"121":0,"124":0,"125":0,"129":0,"130":0}}}